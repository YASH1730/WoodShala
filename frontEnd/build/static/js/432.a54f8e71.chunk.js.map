{"version":3,"file":"static/js/432.a54f8e71.chunk.js","mappings":"yoBA4FMA,EAAS,CACbC,OAAQ,CACNC,YAAa,UACbC,YAAa,WAIXC,GAAkB,CACtBC,QAAS,OACTC,cAAe,MACfC,SAAU,OACVC,UAAW,IAGPC,GAAQ,CACZJ,QAAS,cACTK,aAAc,EACdC,OAAQ,oBACRC,aAAc,EACdC,YAAa,EACbC,MAAO,GACPC,OAAQ,GACRC,QAAS,EACTC,UAAW,cAGPC,GAAa,CACjBb,QAAS,OACTc,SAAU,EACVC,SAAU,UAGNC,GAAM,CACVhB,QAAS,QACTS,MAAO,OACPC,OAAQ,QAGJO,GAAQ,CACZC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXZ,MAAO,IACPa,QAAS,mBACTC,UAAW,GACXC,EAAG,GA8rsBL,GA3rsBiB,WAEf,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,IAAkCF,EAAAA,EAAAA,UAAS,IAA3C,iBAAOG,GAAP,MAAkBC,GAAlB,MACA,IAAwCJ,EAAAA,EAAAA,UAAS,IAAjD,iBAAOK,GAAP,MAAqBC,GAArB,MACA,IAAgCN,EAAAA,EAAAA,UAAS,IAAzC,iBAAOO,GAAP,MAAiBC,GAAjB,MACA,GAA0BC,EAAAA,UAAgB,GAA1C,iBAAOC,GAAP,MAAcC,GAAd,MAEA,IAAgCX,EAAAA,EAAAA,UAAS,IAAzC,iBAAOY,GAAP,MAAiBC,GAAjB,MAIMC,IAAUC,EAAAA,EAAAA,KAGVC,GAAa,SAACC,EAAGC,GACrBD,EAAEE,iBAEFL,GAAQ,CAAEM,YAAY,oCAAuClD,GAC1DmD,MAAK,kBAAMH,EAAOD,MAClBK,OAAM,SAACC,GACNC,QAAQC,IAAI,gCAAiCF,OAKnD,IAA2BvB,EAAAA,EAAAA,UAAS,IAApC,iBAAO0B,GAAP,MAAcC,GAAd,MACA,IAA4B3B,EAAAA,EAAAA,UAAS,IAArC,iBAAO4B,GAAP,MAAeC,GAAf,MAGA,IAAwB7B,EAAAA,EAAAA,WAAS,GAAjC,iBAAO8B,GAAP,MAAaC,GAAb,MAGA,IAA8B/B,EAAAA,EAAAA,UAAS,IAAvC,iBAAOgC,GAAP,MAAgBC,GAAhB,MAEA,SAASC,GAAiBC,GACxB,OAAwCC,EAAAA,EAAAA,IAAY,CAClDC,OAAQ,UACRC,UAAU,EACVC,OAAQ,SAACC,GACPhC,GACEgC,EAAcC,KAAI,SAACC,GAAD,OAChBC,OAAOC,OAAOF,EAAM,CAClBG,QAASC,IAAIC,gBAAgBL,YAP/BM,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,cAchBC,EAAS3C,GAASkC,KAAI,SAACC,GAAD,OAC1B,gBAAKlD,MAAOb,GAAZ,UACE,gBAAKa,MAAOJ,GAAZ,UACE,gBACE+D,IAAKT,EAAKG,QACVrD,MAAOD,GACP6D,IAAI,SAEJC,OAAQ,WACNP,IAAIQ,gBAAgBZ,EAAKG,eARTH,EAAKa,SAe/B,OACE,qBAASC,UAAU,0BAAnB,WACE,mCAASR,EAAa,CAAEQ,UAAW,cAAnC,eACE,4BAAWP,OACX,uBAAId,EAAMsB,YAEZ,kBAAOjE,MAAOlB,GAAd,SAAgC4E,OAKtC,IAAM/E,GAAS,CACb,GAAK,UACL,EAAG,WACH,IAAK,OACL,EAAG,QACH,IAAK,KACL,EAAG,MACH,IAAK,OACL,EAAG,QACH,IAAK,YACL,EAAG,cAIL,SAASuF,GAAUC,EAAQzD,GACzB,IAAI0D,EAASD,EAAOlB,IAAP,mCAAW,WAAOoB,GAAP,4FACQC,EAAAA,EAAAA,GAAKhB,IAAIC,gBAAgBc,IADjC,uBAChB7E,EADgB,EAChBA,MAAOC,EADS,EACTA,OAEb0D,OAAOC,OAAOiB,EAAO,CACnBhB,QAASC,IAAIC,gBAAgBc,GAC7BE,SAAU/E,IAAUC,IALA,kBAOf4E,GAPe,2CAAX,uDASbG,QAAQC,IAAIL,GAAQvC,MAAK,SAAC6C,GAAD,OACvBhE,GAAS,SAACiE,GACR,MAAM,GAAN,eAAWA,IAAX,OAAmBD,UAIzB,SAASE,GAAiBjC,GACxB,OAAkDnC,EAAAA,EAAAA,UAAS,IAA3D,eAAOqE,EAAP,KAA0BC,EAA1B,KACA,GAAoDtE,EAAAA,EAAAA,UAAS,IAA7D,eAAOuE,EAAP,KAA2BC,EAA3B,KAEA,GAAwCpC,EAAAA,EAAAA,IAAY,CAClDC,OAAQ,UACRC,UAAU,EACVC,OAAQ,SAACC,GACPkB,GAAUlB,EAAetC,MAJrB8C,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,cAgEtB,OAvDAwB,EAAAA,EAAAA,UAAQ,WACFxE,IAEFuE,EACEvE,EAAMwC,KAAI,SAACC,GACT,OAAQA,EAAKqB,SAgBT,MAfF,gBAAKvE,MAAOb,GAAZ,UACE,gBAAKa,MAAOJ,GAAZ,UAGE,gBACE+D,IAAKL,IAAIC,gBAAgBL,GACzBlD,MAAOD,GACP6D,IAAI,SAEJC,OAAQ,WACNP,IAAIQ,gBAAgBZ,EAAKG,eAVTH,EAAKa,UAoBnCe,EACErE,EAAMwC,KAAI,SAACC,EAAMgC,GACf,OAAOhC,EAAKqB,UACV,gBAAKvE,MAAOb,GAAZ,UACE,gBAAKa,MAAOJ,GAAZ,UAGE,gBACE+D,IAAKL,IAAIC,gBAAgBL,GACzBlD,MAAOD,GACP6D,IAAI,SAEJC,OAAQ,WACNP,IAAIQ,gBAAgBZ,EAAKG,eAVTH,EAAKa,MAe3B,YAIT,CAACtD,KAEJ0E,EAAAA,EAAAA,YAAU,WAER,OAAO,kBAAM1E,EAAM2E,SAAQ,SAAClC,GAAD,OAAUI,IAAIQ,gBAAgBZ,EAAKG,eAC7D,KAGD,qBAASW,UAAU,0BAAnB,WACE,mCAASR,EAAa,CAAEQ,UAAW,cAAnC,eACE,4BAAWP,OACX,uBAAId,EAAMsB,YAEZ,8BACE,4CACA,kBAAOjE,MAAOlB,GAAd,SAAgC+F,KAChC,4CACA,kBAAO7E,MAAOlB,GAAd,SAAgCiG,UAKxC,SAASM,GAAc1C,GACrB,OAAwCC,EAAAA,EAAAA,IAAY,CAClDC,OAAQ,UACRC,UAAU,EACVC,OAAQ,SAACC,GACPb,GACEa,EAAcC,KAAI,SAACC,GAAD,OAChBC,OAAOC,OAAOF,EAAM,CAClBG,QAASC,IAAIC,gBAAgBL,YAP/BM,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,cAchBC,EAASxB,GAAMe,KAAI,SAACC,GAAD,OACvB,gBAAKlD,MAAOb,GAAZ,UACE,gBAAKa,MAAOJ,GAAZ,UACE,gBACE+D,IAAKT,EAAKG,QACVrD,MAAOD,GACP6D,IAAI,SAEJC,OAAQ,WACNP,IAAIQ,gBAAgBZ,EAAKG,eARTH,EAAKa,SAe/B,OACE,qBAASC,UAAU,0BAAnB,WACE,mCAASR,EAAa,CAAEQ,UAAW,cAAnC,eACE,4BAAWP,OACX,uBAAId,EAAMsB,YAEZ,kBAAOjE,MAAOlB,GAAd,SAAgC4E,OAItC,SAAS4B,GAAe3C,GACtB,OAAkDnC,EAAAA,EAAAA,UAAS,IAA3D,eAAOqE,EAAP,KAA0BC,EAA1B,KACA,GAAoDtE,EAAAA,EAAAA,UAAS,IAA7D,eAAOuE,EAAP,KAA2BC,EAA3B,KAEA,GAAwCpC,EAAAA,EAAAA,IAAY,CAClDC,OAAQ,UACRC,UAAU,EACVC,OAAQ,SAACC,GACPkB,GAAUlB,EAAeX,OAJrBmB,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,cAgEtB,OAvDAwB,EAAAA,EAAAA,UAAQ,WACF7C,KAEF4C,EACE5C,GAAOa,KAAI,SAACC,GACV,OAAQA,EAAKqB,SAgBT,MAfF,gBAAKvE,MAAOb,GAAZ,UACE,gBAAKa,MAAOJ,GAAZ,UAGE,gBACE+D,IAAKL,IAAIC,gBAAgBL,GACzBlD,MAAOD,GACP6D,IAAI,SAEJC,OAAQ,WACNP,IAAIQ,gBAAgBZ,EAAKG,eAVTH,EAAKa,UAoBnCe,EACE1C,GAAOa,KAAI,SAACC,EAAMgC,GAChB,OAAOhC,EAAKqB,UACV,gBAAKvE,MAAOb,GAAZ,UACE,gBAAKa,MAAOJ,GAAZ,UAGE,gBACE+D,IAAKL,IAAIC,gBAAgBL,GACzBlD,MAAOD,GACP6D,IAAI,SAEJC,OAAQ,WACNP,IAAIQ,gBAAgBZ,EAAKG,eAVTH,EAAKa,MAe3B,YAIT,CAAC3B,MAEJ+C,EAAAA,EAAAA,YAAU,WAER,OAAO,kBAAM/C,GAAOgD,SAAQ,SAAClC,GAAD,OAAUI,IAAIQ,gBAAgBZ,EAAKG,eAC9D,KAGD,qBAASW,UAAU,0BAAnB,WACE,mCAASR,EAAa,CAAEQ,UAAW,cAAnC,eACE,4BAAWP,OACX,uBAAId,EAAMsB,YAEZ,8BACE,4CACA,kBAAOjE,MAAOlB,GAAd,SAAgC+F,KAChC,4CACA,kBAAO7E,MAAOlB,GAAd,SAAgCiG,UAQxC,IAAMQ,GAAgB,CACpB,eACA,oBACA,gBACA,aACA,iBACA,aACA,kBAGIC,GAAiB,CACrB,CACEC,MAAO,GACPC,MAAO,IAET,CACED,MAAO,GACPC,MAAO,IAET,CACED,MAAO,GACPC,MAAO,IAET,CACED,MAAO,EACPC,MAAO,GAET,CACED,MAAO,EACPC,MAAO,GAET,CACED,MAAO,EACPC,MAAO,GAET,CACED,MAAO,EACPC,MAAO,IAGLC,GAAmB,CACvB,CACEF,MAAO,YACPC,MAAO,aAET,CACED,MAAO,gBACPC,MAAO,kBAILE,GAAa,CACjB,CACEH,MAAO,eACPC,MAAO,gBAET,CACED,MAAO,iBACPC,MAAO,mBAGLG,GAAY,CAChB,CACEJ,MAAO,wBACPC,MAAO,yBAET,CACED,MAAO,sBACPC,MAAO,wBAILI,GAAmB,CACvB,CACEL,MAAO,QACPC,MAAO,SAET,CACED,MAAO,eACPC,MAAO,gBAET,CACED,MAAO,QACPC,MAAO,UAILK,GAAiB,CACrB,CACEN,MAAO,YACPC,MAAO,aAET,CACED,MAAO,qBACPC,MAAO,sBAET,CACED,MAAO,QACPC,MAAO,SAET,CACED,MAAO,QACPC,MAAO,SAET,CACED,MAAO,QACPC,MAAO,SAET,CACED,MAAO,SACPC,MAAO,UAET,CACED,MAAO,QACPC,MAAO,SAET,CACED,MAAO,aACPC,MAAO,cAET,CACED,MAAO,YACPC,MAAO,aAET,CACED,MAAO,cACPC,MAAO,eAET,CACED,MAAO,gBACPC,MAAO,iBAET,CACED,MAAO,UACPC,MAAO,WAET,CACED,MAAO,kBACPC,MAAO,mBAET,CACED,MAAO,YACPC,MAAO,aAET,CACED,MAAO,aACPC,MAAO,eA8BLM,GAAuB,CAC3B,CACEP,MAAO,gBACPC,MAAO,iBAET,CACED,MAAO,qBACPC,MAAO,uBAILO,GAAc,CAClB,CACER,MAAO,MACPC,MAAO,OAET,CACED,MAAO,KACPC,MAAO,MAET,CACED,MAAO,KACPC,MAAO,MAET,CACED,MAAO,MACPC,MAAO,OAET,CACED,MAAO,QACPC,MAAO,UAILQ,GAAU,CACd,gBACA,YACA,SACA,UACA,WACA,UAEIC,GAA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","sources":["components/dashboard/form/SideForm.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useMemo } from \"react\";\nimport {\n  Button,\n  IconButton,\n  MenuItem,\n  Grid,\n  Box,\n  Typography,\n  TextField,\n  Modal,\n  InputAdornment,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  Checkbox,\n  FormGroup,\n  Fade,\n  Stepper,\n  Step,\n  StepLabel,\n  StepContent,\n  Slider,\n  Select,\n  TextareaAutosize,\n  ListItemText,\n  InputLabel,\n  Autocomplete,\n  Rating,\n} from \"@mui/material\";\nimport { Editor } from \"@tinymce/tinymce-react\";\nimport Slide from \"@mui/material/Slide\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport \"../../../assets/custom/css/sideForm.css\";\nimport { useDropzone } from \"react-dropzone\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport AddIcon from \"@mui/icons-material/Add\";\n\n// component\nimport ImageSquence from \"../../Utility/ImageSquence\";\n// service APIS\nimport {\n  getLastProduct,\n  categoryList,\n  getSubCatagories,\n  // addPrimaryMaterial,\n  // editPrimaryMaterial,\n  getPrimaryMaterial,\n  addSupplier,\n  editSupplier,\n  createBlog,\n  updateBlog,\n  getLastHardware,\n  addMergeProduct,\n  updateMergeProduct,\n  getLastMergeProduct,\n  getPresentSKUs,\n  addCustomer,\n  updateCustomer,\n  addOrder,\n  getLastOrder,\n  customerCatalog,\n  variation,\n  getHardwareDropdown,\n  getDraftID,\n  addDraft,\n  getArticlesId,\n  getLastSupplier,\n  getSupplierDropdown,\n  addInward,\n  addOutward,\n  uploadImage,\n  addTransfer,\n  getStockSKU,\n  // addPolish,\n  // editPolish,\n  updateReview,\n  getCategoryList,\n  applyDiscount,\n  addReview,\n  getSequence,\n} from \"../../../services/service.js\";\nimport { useConfirm } from \"material-ui-confirm\";\n\nimport { setAlert, setForm } from \"../../../store/action/action\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport StarIcon from \"@mui/icons-material/Star\";\nimport size from \"react-image-size\";\nimport { fromUnixTime } from \"date-fns/esm\";\n\nconst option = {\n  labels: {\n    confirmable: \"Proceed\",\n    cancellable: \"Cancel\",\n  },\n};\n\nconst thumbsContainer = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  flexWrap: \"wrap\",\n  marginTop: 16,\n};\n\nconst thumb = {\n  display: \"inline-flex\",\n  borderRadius: 2,\n  border: \"1px solid #eaeaea\",\n  marginBottom: 8,\n  marginRight: 8,\n  width: 50,\n  height: 50,\n  padding: 4,\n  boxSizing: \"border-box\",\n};\n\nconst thumbInner = {\n  display: \"flex\",\n  minWidth: 0,\n  overflow: \"hidden\",\n};\n\nconst img = {\n  display: \"block\",\n  width: \"auto\",\n  height: \"100%\",\n};\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 3,\n};\n\nconst SideForm = () => {\n  // multiple images\n  const [files, setFiles] = useState([]);\n  const [webBanner, setWebBanner] = useState([]);\n  const [mobileBanner, setMobileBanner] = useState([]);\n  const [featured, setFeatured] = useState([]);\n  const [hover, setHover] = React.useState(-1); // for rating in review\n\n  const [sequence, setSequence] = useState([]);\n  // image link\n  const imageLink = \"https://admin.woodshala.in/upload/\";\n\n  const confirm = useConfirm();\n\n  // confirmBox\n  const confirmBox = (e, action) => {\n    e.preventDefault();\n\n    confirm({ description: `Data will listed in Database !!!` }, option)\n      .then(() => action(e))\n      .catch((err) => {\n        console.log(\"Operation cancelled because. \", err);\n      });\n  };\n\n  // single images\n  const [Image, setImages] = useState([]);\n  const [Indoor, setIndoor] = useState([]);\n\n  // modal state\n  const [open, setOpen] = useState(false);\n\n  // address object\n  const [address, setAddress] = useState([]);\n\n  function FeaturesPreviews(props) {\n    const { getRootProps, getInputProps } = useDropzone({\n      accept: \"image/*\",\n      multiple: false,\n      onDrop: (acceptedFiles) => {\n        setFeatured(\n          acceptedFiles.map((file) =>\n            Object.assign(file, {\n              preview: URL.createObjectURL(file),\n            })\n          )\n        );\n      },\n    });\n\n    const thumbs = featured.map((file) => (\n      <div style={thumb} key={file.name}>\n        <div style={thumbInner}>\n          <img\n            src={file.preview}\n            style={img}\n            alt=\"Images\"\n            // Revoke data uri after image is loaded\n            onLoad={() => {\n              URL.revokeObjectURL(file.preview);\n            }}\n          />\n        </div>\n      </div>\n    ));\n\n    return (\n      <section className=\"container dorpContainer\">\n        <div {...getRootProps({ className: \"dropzone\" })}>\n          <input {...getInputProps()} />\n          <p>{props.text}</p>\n        </div>\n        <aside style={thumbsContainer}>{thumbs}</aside>\n      </section>\n    );\n  }\n\n  const labels = {\n    0.5: \"Useless\",\n    1: \"Useless+\",\n    1.5: \"Poor\",\n    2: \"Poor+\",\n    2.5: \"Ok\",\n    3: \"Ok+\",\n    3.5: \"Good\",\n    4: \"Good+\",\n    4.5: \"Excellent\",\n    5: \"Excellent+\",\n  };\n\n  // function for the filter the image to the basis of ratio 1:1\n  function Dimension(images, setFiles) {\n    let result = images.map(async (image) => {\n      let { width, height } = await size(URL.createObjectURL(image));\n      // console.log(width,height)\n      Object.assign(image, {\n        preview: URL.createObjectURL(image),\n        validate: width === height ? true : false,\n      });\n      return image;\n    });\n    Promise.all(result).then((res) =>\n      setFiles((old) => {\n        return [...old, ...res];\n      })\n    );\n  }\n  function ProductsPreviews(props) {\n    const [acceptedFileItems, setAcceptedFileItems] = useState([]);\n    const [fileRejectionItems, setFileRejectionItems] = useState([]);\n\n    const { getRootProps, getInputProps } = useDropzone({\n      accept: \"image/*\",\n      multiple: true,\n      onDrop: (acceptedFiles) => {\n        Dimension(acceptedFiles, setFiles);\n      },\n    });\n\n    // for check the file state in done or\n    useMemo(() => {\n      if (files) {\n        // REJECTED FILES\n        setFileRejectionItems(\n          files.map((file) => {\n            return !file.validate ? (\n              <div style={thumb} key={file.name}>\n                <div style={thumbInner}>\n                  {/* {console.log(file.validate)} */}\n\n                  <img\n                    src={URL.createObjectURL(file)}\n                    style={img}\n                    alt=\"Images\"\n                    // Revoke data uri after image is loaded\n                    onLoad={() => {\n                      URL.revokeObjectURL(file.preview);\n                    }}\n                  />\n                </div>\n              </div>\n            ) : null;\n          })\n        );\n\n        // accepted\n        setAcceptedFileItems(\n          files.map((file, index) => {\n            return file.validate ? (\n              <div style={thumb} key={file.name}>\n                <div style={thumbInner}>\n                  {/* {console.log(file.validate)} */}\n\n                  <img\n                    src={URL.createObjectURL(file)}\n                    style={img}\n                    alt=\"Images\"\n                    // Revoke data uri after image is loaded\n                    onLoad={() => {\n                      URL.revokeObjectURL(file.preview);\n                    }}\n                  />\n                </div>\n              </div>\n            ) : null;\n          })\n        );\n      }\n    }, [files]);\n\n    useEffect(() => {\n      // Make sure to revoke the data uris to avoid memory leaks, will run on unmount\n      return () => files.forEach((file) => URL.revokeObjectURL(file.preview));\n    }, []);\n\n    return (\n      <section className=\"container dorpContainer\">\n        <div {...getRootProps({ className: \"dropzone\" })}>\n          <input {...getInputProps()} />\n          <p>{props.text}</p>\n        </div>\n        <aside>\n          <h4>Accepted files</h4>\n          <aside style={thumbsContainer}>{acceptedFileItems}</aside>\n          <h4>Rejected files</h4>\n          <aside style={thumbsContainer}>{fileRejectionItems}</aside>\n        </aside>\n      </section>\n    );\n  }\n  function ImagePreviews(props) {\n    const { getRootProps, getInputProps } = useDropzone({\n      accept: \"image/*\",\n      multiple: false,\n      onDrop: (acceptedFiles) => {\n        setImages(\n          acceptedFiles.map((file) =>\n            Object.assign(file, {\n              preview: URL.createObjectURL(file),\n            })\n          )\n        );\n      },\n    });\n\n    const thumbs = Image.map((file) => (\n      <div style={thumb} key={file.name}>\n        <div style={thumbInner}>\n          <img\n            src={file.preview}\n            style={img}\n            alt=\"Images\"\n            // Revoke data uri after image is loaded\n            onLoad={() => {\n              URL.revokeObjectURL(file.preview);\n            }}\n          />\n        </div>\n      </div>\n    ));\n\n    return (\n      <section className=\"container dorpContainer\">\n        <div {...getRootProps({ className: \"dropzone\" })}>\n          <input {...getInputProps()} />\n          <p>{props.text}</p>\n        </div>\n        <aside style={thumbsContainer}>{thumbs}</aside>\n      </section>\n    );\n  }\n  function IndoorPreviews(props) {\n    const [acceptedFileItems, setAcceptedFileItems] = useState([]);\n    const [fileRejectionItems, setFileRejectionItems] = useState([]);\n\n    const { getRootProps, getInputProps } = useDropzone({\n      accept: \"image/*\",\n      multiple: true,\n      onDrop: (acceptedFiles) => {\n        Dimension(acceptedFiles, setIndoor);\n      },\n    });\n\n    // for check the file state in done or\n    useMemo(() => {\n      if (Indoor) {\n        // REJECTED FILES\n        setFileRejectionItems(\n          Indoor.map((file) => {\n            return !file.validate ? (\n              <div style={thumb} key={file.name}>\n                <div style={thumbInner}>\n                  {/* {console.log(file.validate)} */}\n\n                  <img\n                    src={URL.createObjectURL(file)}\n                    style={img}\n                    alt=\"Images\"\n                    // Revoke data uri after image is loaded\n                    onLoad={() => {\n                      URL.revokeObjectURL(file.preview);\n                    }}\n                  />\n                </div>\n              </div>\n            ) : null;\n          })\n        );\n\n        // accepted\n        setAcceptedFileItems(\n          Indoor.map((file, index) => {\n            return file.validate ? (\n              <div style={thumb} key={file.name}>\n                <div style={thumbInner}>\n                  {/* {console.log(file.validate)} */}\n\n                  <img\n                    src={URL.createObjectURL(file)}\n                    style={img}\n                    alt=\"Images\"\n                    // Revoke data uri after image is loaded\n                    onLoad={() => {\n                      URL.revokeObjectURL(file.preview);\n                    }}\n                  />\n                </div>\n              </div>\n            ) : null;\n          })\n        );\n      }\n    }, [Indoor]);\n\n    useEffect(() => {\n      // Make sure to revoke the data uris to avoid memory leaks, will run on unmount\n      return () => Indoor.forEach((file) => URL.revokeObjectURL(file.preview));\n    }, []);\n\n    return (\n      <section className=\"container dorpContainer\">\n        <div {...getRootProps({ className: \"dropzone\" })}>\n          <input {...getInputProps()} />\n          <p>{props.text}</p>\n        </div>\n        <aside>\n          <h4>Accepted files</h4>\n          <aside style={thumbsContainer}>{acceptedFileItems}</aside>\n          <h4>Rejected files</h4>\n          <aside style={thumbsContainer}>{fileRejectionItems}</aside>\n        </aside>\n      </section>\n    );\n  }\n\n  // static catalog\n\n  const polishCatalog = [\n    \"Stain Finish\",\n    \"Distressed Polish\",\n    \"Antique Touch\",\n    \"Duco Paint\",\n    \"Natural Finish\",\n    \"Oil Massge\",\n    \"Powder Coating\",\n  ];\n\n  const taxRateCatalog = [\n    {\n      value: 28,\n      label: 28,\n    },\n    {\n      value: 18,\n      label: 18,\n    },\n    {\n      value: 12,\n      label: 12,\n    },\n    {\n      value: 5,\n      label: 5,\n    },\n    {\n      value: 3,\n      label: 3,\n    },\n    {\n      value: 2,\n      label: 2,\n    },\n    {\n      value: 0,\n      label: 0,\n    },\n  ];\n  const backStyleCatalog = [\n    {\n      value: \"Lean Back\",\n      label: \"Lean Back\",\n    },\n    {\n      value: \"Straight Back\",\n      label: \"Straight Back\",\n    },\n  ];\n\n  const legCatalog = [\n    {\n      value: \"Folding Legs\",\n      label: \"Folding Legs\",\n    },\n    {\n      value: \"Knockdown Legs\",\n      label: \"Knockdown Legs\",\n    },\n  ];\n  const warehouse = [\n    {\n      value: \"Bangalore (Karnataka)\",\n      label: \"Bangalore (Karnataka)\",\n    },\n    {\n      value: \"Jodhpur (Rajasthan)\",\n      label: \"Jodhpur (Rajasthan)\",\n    },\n  ];\n\n  const weightCapCatalog = [\n    {\n      value: \"Child\",\n      label: \"Child\",\n    },\n    {\n      value: \"Light Weight\",\n      label: \"Light Weight\",\n    },\n    {\n      value: \"Adult\",\n      label: \"Adult\",\n    },\n  ];\n\n  const trollyMaterial = [\n    {\n      value: \"Teak Wood\",\n      label: \"Teak Wood\",\n    },\n    {\n      value: \"Natural Solid Wood\",\n      label: \"Natural Solid Wood\",\n    },\n    {\n      value: \"Stone\",\n      label: \"Stone\",\n    },\n    {\n      value: \"Metal\",\n      label: \"Metal\",\n    },\n    {\n      value: \"Brass\",\n      label: \"Brass\",\n    },\n    {\n      value: \"Copper\",\n      label: \"Copper\",\n    },\n    {\n      value: \"Glass\",\n      label: \"Glass\",\n    },\n    {\n      value: \"Mango Wood\",\n      label: \"Mango Wood\",\n    },\n    {\n      value: \"Pine wood\",\n      label: \"Pine wood\",\n    },\n    {\n      value: \"Acacia wood\",\n      label: \"Acacia wood\",\n    },\n    {\n      value: \"Sheesham wood\",\n      label: \"Sheesham wood\",\n    },\n    {\n      value: \"Ceramic\",\n      label: \"Ceramic\",\n    },\n    {\n      value: \"Brass Coated SS\",\n      label: \"Brass Coated SS\",\n    },\n    {\n      value: \"Iron Jali\",\n      label: \"Iron Jali\",\n    },\n    {\n      value: \"Glass Jali\",\n      label: \"Glass Jali\",\n    },\n  ];\n  const rangeCatalog = [\n    {\n      value: \"Traditional\",\n      label: \"Traditional\",\n    },\n\n    {\n      value: \"Distressed\",\n      label: \"Distressed\",\n    },\n\n    {\n      value: \"Crackle\",\n      label: \"Crackle\",\n    },\n\n    {\n      value: \"Painting\",\n      label: \"Painting\",\n    },\n\n    {\n      value: \"Antique\",\n      label: \"Antique\",\n    },\n  ];\n\n  const assemblyLevelCatalog = [\n    {\n      value: \"Easy Assembly\",\n      label: \"Easy Assembly\",\n    },\n    {\n      value: \"Carpenter Assembly\",\n      label: \"Carpenter Assembly\",\n    },\n  ];\n\n  const unitCatalog = [\n    {\n      value: \"Pcs\",\n      label: \"Pcs\",\n    },\n    {\n      value: \"Kg\",\n      label: \"Kg\",\n    },\n    {\n      value: \"Ft\",\n      label: \"Ft\",\n    },\n    {\n      value: \"Set\",\n      label: \"Set\",\n    },\n    {\n      value: \"Metre\",\n      label: \"Metre\",\n    },\n  ];\n\n  const purpose = [\n    \"Manufacturing\",\n    \"Repairing\",\n    \"Polish\",\n    \"Packing\",\n    \"Shipping\",\n    \"Others\",\n  ];\n  const level = [\n    \"Level 1\",\n    \"Level 2\",\n    \"Level 3\",\n    \"Level 4\",\n    \"Level 5\",\n    \"Level 6\",\n    \"Level 7\",\n    \"Level 8\",\n    \"Level 9\",\n    \"Level 10\",\n  ];\n\n  // redux\n  const { form, mode } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  // states\n  const [cat, setCat] = useState(\"\");\n  const [discount, setDiscount] = useState({ discount_limit: 0, MRP: 0 });\n  // const [showFabric, setShowFabric] = useState(\"No\");\n\n  //  State for stepper\n  const [activeStep, setActiveStep] = useState(0);\n\n  // states for the dynamic rendering\n  const [SKU, setSKU] = useState(\"\");\n  const [category, setCategory] = useState([]);\n  const [subCategory, setSubCategory] = useState([]);\n  const [materialCatalog, setMaterialCatalog] = useState([]);\n  // const [textileCatalog, setTextileCatalog] = useState([]);\n  // const [fabricCatalog, setFabricCatalog] = useState([]);\n  const [SKUCatalog, setSKUCatalog] = useState([]);\n  const [customer, setCustomerCatalog] = useState([]);\n  const [productSKU, setProductSKU] = useState({\n    P_SKU: [],\n    H_SKU: [],\n    supplier: [],\n    category: [],\n  });\n\n  const [catalog, setCatalog] = useState({\n    hinge: [],\n    knob: [],\n    door: [],\n    handle: [],\n    fitting: [],\n    polish: [],\n    fabric: [],\n    wheel: [],\n    ceramic_drawer: [],\n    ceramic_tiles: [],\n  });\n\n  // ref\n  const editorRef = useRef();\n\n  // pres data\n  const [changeData, setData] = useState({\n    CVW: 0,\n    ACIN: \"\",\n    primary_material: [],\n    product_articles: [],\n    hardware_articles: [],\n    category_discount: [],\n    supplier: \"\",\n    range: \"None\",\n    product_array: [],\n    variation_array: [],\n    warehouse: [],\n    savedImages: [],\n    specification_image: \"\",\n    featured_image: \"\",\n    mannequin_image: \"\",\n    shipping: \"\",\n    product_title: \"\",\n    seo_title: \"\",\n    seo_description: \"\",\n    seo_keyword: \"\",\n    product_des: \"\",\n    category: \"\",\n    sub_category: \"\",\n    length: 0,\n    breadth: 0,\n    selling_points: [],\n    height: 0,\n    priMater: \"\",\n    priMater_weight: \"\",\n    secMater: \"\",\n    secMater_weight: \"\",\n    selling_price: 0,\n    mrp: 0,\n    discount_cap: 0,\n    polish_time: 0,\n    manufacturing_time: 0,\n    polish: [],\n    wight_cap: \"\",\n    wall_hanging: \"\",\n    assembly_required: \"\",\n    assembly_leg: \"\",\n    assembly_part: 2,\n    fitting: \"None\",\n    silver: \"\",\n    weight: 0,\n    selling_point: \"\",\n    mirror: \"\",\n    joints: \"\",\n    tax_rate: 18,\n    seat_width: 0,\n    ceramic_drawer: \"None\",\n    ceramic_tiles: \"None\",\n    seat_depth: 0,\n    seat_height: 0,\n    wheel: \"None\",\n    wheel_included: \"no\",\n    trolly: \"\",\n    returnable: false,\n    returnDays: 0,\n    trolly_mater: \"\",\n    top_size_length: 0,\n    top_size_breadth: 0,\n    dial_size: 0,\n    COD: false,\n    textile: \"\",\n    paid_amount: 0,\n    total_amount: 0,\n    customer_name: \"\",\n    customer_email: \"\",\n    shipping_address: \"\",\n    searchCustomer: \"\",\n    mobile_store: true,\n    online_store: true,\n    continue_selling: true,\n    ceramic_drawer_included: false,\n    ceramic_tiles_included: false,\n    unit: \"Pcs\",\n    quantity: 1,\n    textile_type: \"\",\n    category_id: \"\",\n    sub_category_id: \"\",\n    product_description: \"\",\n    legs: \"None\",\n    fabric: \"None\",\n    assembly_level: \"Easy Assembly\",\n    mattress: \"no\",\n    mattress_length: 0,\n    mattress_breadth: 0,\n    hinge: \"None\",\n    hinge_qty: 0,\n    knob: \"None\",\n    knob_qty: 0,\n    handle: \"None\",\n    handle_qty: 0,\n    door: \"None\",\n    door_qty: 0,\n    plywood: \"no\",\n    wheel_qty: 0,\n    cradle_bed: \"no\",\n    amazon_url: \"\",\n    flipkart_url: \"\",\n    jiomart_url: \"\",\n    cradle_bed_depth: 0,\n    cradle_bed_height: 0,\n    cradle_bed_width: 0,\n    showroom_price: 0,\n    discount_limit: 0,\n    length_main: 0,\n    ceramic_drawer_qty: 0,\n    ceramic_tiles_qty: 0,\n    back_style: \"None\",\n    weight_capacity: \"None\",\n    drawer: \"None\",\n    package_breadth: 0,\n    package_height: 0,\n    package_length: 0,\n    silver_weight: 0,\n    mirror_length: 0,\n    mirror_width: 0,\n    drawer_count: 0,\n    seating_size_width: 0,\n    seating_size_depth: 0,\n    seating_size_height: 0,\n    restocking_time: 0,\n    min_quantity: 1,\n    hardware_polish: \"None\",\n    warehouse_to: \"\",\n    wood_weight: 0,\n    metal_weight: 0,\n    package_weight: 0,\n    polish_name: \"\",\n    polish_type: \"None\",\n    polish_finish: \"None\",\n    level: \"None\",\n    lock: false,\n    price: 0,\n    indoorSavedImage: [],\n    status: true,\n    web_banner_status: false,\n    mobile_banner_status: false,\n    marketing: false,\n    sequence_no: \"\",\n  });\n\n  function getLabelText(value) {\n    return `${value} Star${value !== 1 ? \"s\" : \"\"}, ${labels[value]}`;\n  }\n\n  // function for generating Merged product  ID\n\n  const getMKU = () => {\n    getLastMergeProduct()\n      .then((res) => {\n        if (res.data.length > 0) {\n          let index = parseInt(res.data[0].M.split(\"-\")[1]) + 1;\n\n          setSKU(`M-0${index}`);\n        } else {\n          setSKU(\"M-01001\");\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n      });\n  };\n  // function for generating product SKU ID\n\n  const getSKU = () => {\n    getLastProduct()\n      .then((res) => {\n        if (res.data.length > 0) {\n          // // //console.log(res.data[0].SKU)\n\n          let index = parseInt(res.data[0].SKU.split(\"-\")[1]) + 1;\n\n          setSKU(`P-0${index}`);\n        } else {\n          setSKU(\"P-01001\");\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n      });\n  };\n  // function for generating hardware  ID\n\n  const getHKU = () => {\n    getLastHardware()\n      .then((res) => {\n        if (res.data.length > 0) {\n          let index = parseInt(res.data[0].SKU.split(\"-\")[1]) + 1;\n\n          setSKU(`H-0${index}`);\n        } else {\n          setSKU(\"H-01001\");\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n      });\n  };\n  // function for generating product OID ID\n\n  const getOID = () => {\n    getLastOrder()\n      .then((res) => {\n        if (res.data.length > 0) {\n          let index = parseInt(res.data[0].OID.split(\"-\")[1]) + 1;\n\n          setSKU(`OID-0${index}`);\n        } else {\n          setSKU(\"OID-01001\");\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n      });\n  };\n  // function for generating product DID ID\n\n  const getSID = () => {\n    getLastSupplier()\n      .then((res) => {\n        if (res.data.length > 0) {\n          let index = parseInt(res.data[0].SID.split(\"-\")[1]) + 1;\n\n          setSKU(`SID-0${index}`);\n        } else {\n          setSKU(\"SID-01001\");\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n      });\n  };\n  // function for generating product DID ID\n\n  const getDID = () => {\n    getDraftID()\n      .then((res) => {\n        if (res.data.length > 0) {\n          let index = parseInt(res.data[0].DID.split(\"-\")[1]) + 1;\n\n          setSKU(`DID-0${index}`);\n        } else {\n          setSKU(\"DID-01001\");\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n      });\n  };\n\n  useMemo(() => {\n    switch (form.formType) {\n      case \"hardware\":\n        getHKU();\n        getDID();\n        getPrimaryMaterial().then((data) => {\n          if (data.data === null) return setMaterialCatalog([]);\n\n          return setMaterialCatalog(data.data);\n        });\n\n        categoryList().then((data) => {\n          if (data.data === null) return setCategory([]);\n\n          let hardware = data.data.filter((row) => {\n            return row.category_name === \"Hardware\";\n          });\n\n          setData({\n            ...changeData,\n            category_name: hardware.length > 0 ? hardware[0]._id : \"None\",\n          });\n          return setCategory(data.data);\n        });\n\n        getSubCatagories().then((data) => {\n          if (data.data === null) return setSubCategory([]);\n\n          return setSubCategory(data.data);\n        });\n\n        // console.log(category,category.filter((row) => { return row.category_name === 'Hardware' }))\n\n        break;\n      case \"update_hardware\":\n        // getHKU();\n        getDID();\n        getPrimaryMaterial().then((data) => {\n          if (data.data === null) return setMaterialCatalog([]);\n\n          return setMaterialCatalog(data.data);\n        });\n        categoryList().then((data) => {\n          if (data.data === null) return setCategory([]);\n\n          return setCategory(data.data);\n        });\n\n        getSubCatagories().then((data) => {\n          if (data.data === null) return setSubCategory([]);\n\n          return setSubCategory(data.data);\n        });\n\n        const row = form.payload.row;\n\n        console.log(row);\n\n        setData({\n          SKU: row.SKU,\n          title: row.title,\n          category_name: row.category_id,\n          category_id: row.category_id,\n          sub_category_name: row.sub_category_id,\n          sub_category_id: row.sub_category_id,\n          hardware_image: row.hardware_image,\n          savedImages: row.hardware_image,\n          featured_image: row.featured_image,\n          mannequin_image: row.mannequin_image,\n          warehouse: row.warehouse || [],\n          bangalore_stock: row.bangalore_stock,\n          discount_limit: row.discount_limit,\n          jodhpur_stock: row.jodhpur_stock,\n          manufacturing_time: row.manufacturing_time,\n          online_store: row.online_store,\n          mobile_store: row.mobile_store,\n          primary_material: row.primary_material,\n          primary_material_name: row.primary_material_name,\n          status: row.status,\n          returnDays: row.returnDays,\n          COD: row.COD,\n          returnable: row.returnable,\n          quantity: row.quantity,\n          package_length: row.package_length,\n          package_height: row.package_height,\n          package_breadth: row.package_breadth,\n          unit: row.unit,\n          selling_price: row.selling_price,\n          showroom_price: row.showroom_price,\n          polish_time: row.polish_time,\n          restocking_time: row.restocking_time,\n          selling_points: row.selling_points || [],\n          seo_title: row.seo_title,\n          seo_description: row.seo_description,\n          seo_keyword: row.seo_keyword,\n          hardware_polish: row.hardware_polish,\n          min_quantity: row.min_quantity,\n          continue_selling: row.continue_selling,\n          tax_rate: row.tax_rate,\n          weight: row.weight,\n          package_weight: row.package_weight,\n        });\n        break;\n      case \"product\":\n        // getSKU();\n        getDID();\n\n        getHardwareDropdown().then((data) => {\n          if (data.data !== null)\n            return setCatalog((old) => ({ ...old, ...data.data }));\n        });\n\n        categoryList().then((data) => {\n          if (data.data === null) return setCategory([]);\n\n          return setCategory(data.data);\n        });\n\n        getSubCatagories().then((data) => {\n          if (data.data === null) return setSubCategory([]);\n\n          return setSubCategory(data.data);\n        });\n\n        getPrimaryMaterial().then((data) => {\n          if (data.data === null) return setMaterialCatalog([]);\n\n          return setMaterialCatalog(data.data);\n        });\n\n        console.log(form);\n\n        if (form.payload) {\n          setData((old) => ({ ...old, ...form.payload }));\n        }\n\n        break;\n      case \"variation\":\n        getSKU();\n        getHardwareDropdown().then((data) => {\n          if (data.data !== null)\n            return setCatalog((old) => ({ ...old, ...data.data }));\n        });\n\n        categoryList().then((data) => {\n          if (data.data === null) return setCategory([]);\n\n          return setCategory(data.data);\n        });\n\n        getSubCatagories().then((data) => {\n          if (data.data === null) return setSubCategory([]);\n\n          return setSubCategory(data.data);\n        });\n\n        getPrimaryMaterial().then((data) => {\n          if (data.data === null) return setMaterialCatalog([]);\n\n          return setMaterialCatalog(data.data);\n        });\n\n        setData({\n          _id: form.payload.value._id || form.payload.row.action._id,\n          SKU: form.payload.row.action.SKU,\n          ACIN: form.payload.row.action.ACIN,\n          CVW: form.payload.row.action.CVW,\n          product_title: form.payload.row.action.product_title,\n          category_name: form.payload.row.action.category_id,\n          category_id: form.payload.row.action.category_id,\n          sub_category_name: form.payload.row.action.sub_category_id,\n          sub_category_id: form.payload.row.action.sub_category_id,\n          product_description: form.payload.row.action.product_description,\n          seo_title: form.payload.row.action.seo_title,\n          seo_description: form.payload.row.action.seo_description,\n          seo_keyword: form.payload.row.action.seo_keyword,\n          product_image: form.payload.row.action.product_image,\n          savedImages: form.payload.row.action.product_image,\n          featured_image: form.payload.row.action.featured_image,\n          mannequin_image: form.payload.row.action.mannequin_image,\n          specification_image: form.payload.row.action.specification_image,\n          primary_material: form.payload.row.action.primary_material,\n          primary_material_name: form.payload.row.action.primary_material_name,\n          warehouse: form.payload.row.action.warehouse,\n          warehouse_name: form.payload.row.action.warehouse_name,\n          length_main: form.payload.row.action.length_main,\n          breadth: form.payload.row.action.breadth,\n          height: form.payload.row.action.height,\n          bangalore_stock: form.payload.row.action.bangalore_stock,\n          jodhpur_stock: form.payload.row.action.jodhpur_stock,\n          weight: form.payload.row.action.weight,\n          polish: form.payload.row.action.polish,\n          polish_name: form.payload.row.action.polish_name,\n          hinge: form.payload.row.action.hinge,\n          hinge_qty: form.payload.row.action.hinge_qty,\n          hinge_name: form.payload.row.action.hinge_name,\n          knob: form.payload.row.action.knob,\n          knob_qty: form.payload.row.action.knob_qty,\n          knob_name: form.payload.row.action.knob_name,\n          handle: form.payload.row.action.handle,\n          handle_qty: form.payload.row.action.handle_qty,\n          handle_name: form.payload.row.action.handle_name,\n          door: form.payload.row.action.door,\n          door_qty: form.payload.row.action.door_qty,\n          door_name: form.payload.row.action.door_name,\n          fitting: form.payload.row.action.fitting,\n          fitting_name: form.payload.row.action.fitting_name,\n          selling_points: form.payload.row.action.selling_points,\n          dial_size: form.payload.row.action.dial_size,\n          seating_size_width: form.payload.row.action.seating_size_width,\n          seating_size_depth: form.payload.row.action.seating_size_depth,\n          seating_size_height: form.payload.row.action.seating_size_height,\n          weight_capacity: form.payload.row.action.weight_capacity,\n          fabric: form.payload.row.action.fabric,\n          fabric_qty: form.payload.row.action.fabric_qty,\n          fabric_name: form.payload.row.action.fabric_name,\n          wall_hanging: form.payload.row.action.wall_hanging,\n          assembly_required: form.payload.row.action.assembly_required,\n          assembly_part: form.payload.row.action.assembly_part,\n          legs: form.payload.row.action.legs,\n          mirror: form.payload.row.action.mirror,\n          mirror_length: form.payload.row.action.mirror_length,\n          mirror_width: form.payload.row.action.mirror_width,\n          silver: form.payload.row.action.silver,\n          silver_weight: form.payload.row.action.silver_weight,\n          joints: form.payload.row.action.joints,\n          upholstery: form.payload.row.action.upholstery,\n          trolley: form.payload.row.action.trolley,\n          trolley_material: form.payload.row.action.trolley_material,\n          rotating_seats: form.payload.row.action.rotating_seats,\n          eatable_oil_polish: form.payload.row.action.eatable_oil_polish,\n          no_chemical: form.payload.row.action.no_chemical,\n          straight_back: form.payload.row.action.straight_back,\n          lean_back: form.payload.row.action.lean_back,\n          weaving: form.payload.row.action.weaving,\n          knife: form.payload.row.action.knife,\n          not_suitable_for_Micro_Dish:\n            form.payload.row.action.not_suitable_for_Micro_Dish,\n          tilt_top: form.payload.row.action.tilt_top,\n          inside_compartments: form.payload.row.action.inside_compartments,\n          stackable: form.payload.row.action.stackable,\n          MRP: form.payload.row.action.MRP,\n          tax_rate: form.payload.row.action.tax_rate,\n          selling_price: form.payload.row.action.selling_price,\n          showroom_price: form.payload.row.action.showroom_price,\n          discount_limit: form.payload.row.action.discount_limit,\n          polish_time: form.payload.row.action.polish_time,\n          manufacturing_time: form.payload.row.action.manufacturing_time,\n          status: form.payload.row.action.status,\n          returnDays: form.payload.row.action.returnDays,\n          COD: form.payload.row.action.COD,\n          returnable: form.payload.row.action.returnable,\n          drawer: form.payload.row.action.drawer,\n          drawer_count: form.payload.row.action.drawer_count,\n          mobile_store: form.payload.row.action.mobile_store,\n          online_store: form.payload.row.action.online_store,\n          range: form.payload.row.action.range,\n          back_style: form.payload.row.action.back_style,\n          package_length: form.payload.row.action.package_length,\n          package_height: form.payload.row.action.package_height,\n          package_breadth: form.payload.row.action.package_breadth,\n          quantity: form.payload.row.action.quantity,\n          unit: form.payload.row.action.unit,\n          variation_array: form.payload.row.action.variation_array,\n          assembly_level: form.payload.row.action.assembly_level,\n          continue_selling: form.payload.row.action.continue_selling,\n          wheel: form.payload.row.action.wheel,\n          wheel_included: form.payload.row.action.wheel_included,\n          wheel_qty: form.payload.row.action.wheel_qty,\n          wheel_name: form.payload.row.action.wheel_name,\n          ceramic_tiles: form.payload.row.action.ceramic_tiles,\n          ceramic_tiles_qty: form.payload.row.action.ceramic_tiles_qty,\n          ceramic_tiles_included:\n            form.payload.row.action.ceramic_tiles_included,\n          ceramic_tiles_name: form.payload.row.action.ceramic_tiles_name,\n          ceramic_drawers_qty: form.payload.row.action.ceramic_drawers_qty,\n          ceramic_drawers: form.payload.row.action.ceramic_drawers,\n          ceramic_drawers_included:\n            form.payload.row.action.ceramic_drawers_included,\n          ceramic_drawers_name: form.payload.row.action.ceramic_drawers_name,\n          mattress: form.payload.row.action.mattress,\n          mattress_length: form.payload.row.action.mattress_length,\n          mattress_breadth: form.payload.row.action.mattress_breadth,\n          plywood: form.payload.row.action.plywood,\n          top_size_breadth: form.payload.row.action.top_size_breadth,\n          top_size_length: form.payload.row.action.top_size_length,\n          amazon_url: form.payload.row.action.amazon_url,\n          flipkart_url: form.payload.row.action.flipkart_url,\n          jiomart_url: form.payload.row.action.jiomart_url,\n          wood_weight: form.payload.row.action.wood_weight,\n          package_weight: form.payload.row.action.package_weight,\n          metal_weight: form.payload.row.action.metal_weight,\n        });\n\n        setCat(form.payload.row.action.category_id);\n        break;\n      case \"add_order\":\n        getOID();\n        getPresentSKUs().then((data) => {\n          if (data.data === null) return setSKUCatalog([]);\n\n          return setSKUCatalog(data.data);\n        });\n\n        customerCatalog().then((data) => {\n          //console.log(data);\n          if (data.data === null) return setCustomerCatalog([]);\n\n          return setCustomerCatalog(data.data);\n        });\n\n        break;\n      case \"category\":\n        getDID();\n        break;\n      case \"update_category\":\n        getDID();\n        categoryList().then((data) => {\n          if (data.data === null) return setCategory([]);\n\n          return setCategory(data.data);\n        });\n        setData({\n          _id: form.payload.row.action,\n          category: form.payload.row.category_name,\n          seo_title: form.payload.row.seo_title,\n          seo_description: form.payload.row.seo_description,\n          seo_keyword: form.payload.row.seo_keyword,\n          product_description: form.payload.row.product_description,\n        });\n        break;\n      case \"update_PrimaryMaterial\":\n        getDID();\n        console.log(form.payload.row);\n        setData({\n          primaryMaterial_name: form.payload.row.primaryMaterial_name,\n          primaryMaterial_description:\n            form.payload.row.primaryMaterial_description,\n          customizations: form.payload.row.customizations,\n        });\n        break;\n      case \"subcategory\":\n        getDID();\n        categoryList().then((data) => {\n          if (data.data === null) return setCategory([]);\n          return setCategory(data.data);\n        });\n        // setCat(form.payload.row.category_id);\n        break;\n      case \"update_Subcategory\":\n        getDID();\n        categoryList().then((data) => {\n          if (data.data === null) return setCategory([]);\n          return setCategory(data.data);\n        });\n        setCat(form.payload.row.category_id);\n        setData({\n          _id: form.payload.row.action,\n          sub_category_name: form.payload.row.sub_category_name,\n          seo_title: form.payload.row.seo_title,\n          seo_description: form.payload.row.seo_description,\n          seo_keyword: form.payload.row.seo_keyword,\n          product_description: form.payload.row.product_description,\n        });\n        break;\n      case \"update_blog\":\n        getDID();\n        setData({\n          title: form.payload.value.title,\n          card_image: form.payload.value.card_image,\n          seo_title: form.payload.value.seo_title,\n          seo_description: form.payload.value.seo_description,\n          card_description: form.payload.value.card_description,\n          description: form.payload.value.description,\n        });\n        break;\n      case \"update_product\":\n        getDID();\n\n        getHardwareDropdown().then((data) => {\n          if (data.data !== null)\n            return setCatalog((old) => ({ ...old, ...data.data }));\n        });\n\n        categoryList().then((data) => {\n          if (data.data === null) return setCategory([]);\n\n          return setCategory(data.data);\n        });\n\n        getSubCatagories().then((data) => {\n          if (data.data === null) return setSubCategory([]);\n\n          return setSubCategory(data.data);\n        });\n\n        getPrimaryMaterial().then((data) => {\n          if (data.data === null) return setMaterialCatalog([]);\n\n          return setMaterialCatalog(data.data);\n        });\n\n        setData({\n          _id: form.payload.value._id || form.payload.row.action._id,\n          SKU: form.payload.row.action.SKU,\n          CVW: form.payload.row.action.CVW,\n          parent_SKU: form.payload.row.parent_SKU,\n          variations: form.payload.row.variations,\n          variant_label: form.payload.row.variant_label,\n          product_title: form.payload.row.action.product_title,\n          category_name: form.payload.row.action.category_id,\n          category_id: form.payload.row.action.category_id,\n          sub_category_name: form.payload.row.action.sub_category_id,\n          sub_category_id: form.payload.row.action.sub_category_id,\n          product_description: form.payload.row.action.product_description,\n          seo_title: form.payload.row.action.seo_title,\n          seo_description: form.payload.row.action.seo_description,\n          seo_keyword: form.payload.row.action.seo_keyword,\n          product_image: form.payload.row.action.product_image,\n          savedImages: form.payload.row.action.product_image,\n          featured_image: form.payload.row.action.featured_image,\n          mannequin_image: form.payload.row.action.mannequin_image,\n          specification_image: form.payload.row.action.specification_image,\n          primary_material: form.payload.row.action.primary_material,\n          primary_material_name: form.payload.row.action.primary_material_name,\n          warehouse: form.payload.row.action.warehouse,\n          warehouse_name: form.payload.row.action.warehouse_name,\n          length_main: form.payload.row.action.length_main,\n          breadth: form.payload.row.action.breadth,\n          height: form.payload.row.action.height,\n          bangalore_stock: form.payload.row.action.bangalore_stock,\n          jodhpur_stock: form.payload.row.action.jodhpur_stock,\n          weight: form.payload.row.action.weight,\n          polish: form.payload.row.action.polish,\n          polish_name: form.payload.row.action.polish_name,\n          hinge: form.payload.row.action.hinge,\n          hinge_qty: form.payload.row.action.hinge_qty,\n          hinge_name: form.payload.row.action.hinge_name,\n          knob: form.payload.row.action.knob,\n          knob_qty: form.payload.row.action.knob_qty,\n          knob_name: form.payload.row.action.knob_name,\n          handle: form.payload.row.action.handle,\n          handle_qty: form.payload.row.action.handle_qty,\n          handle_name: form.payload.row.action.handle_name,\n          door: form.payload.row.action.door,\n          door_qty: form.payload.row.action.door_qty,\n          door_name: form.payload.row.action.door_name,\n          fitting: form.payload.row.action.fitting,\n          fitting_name: form.payload.row.action.fitting_name,\n          selling_points: form.payload.row.action.selling_points,\n          dial_size: form.payload.row.action.dial_size,\n          seating_size_width: form.payload.row.action.seating_size_width,\n          seating_size_depth: form.payload.row.action.seating_size_depth,\n          seating_size_height: form.payload.row.action.seating_size_height,\n          weight_capacity: form.payload.row.action.weight_capacity,\n          fabric: form.payload.row.action.fabric,\n          fabric_qty: form.payload.row.action.fabric_qty,\n          fabric_name: form.payload.row.action.fabric_name,\n          wall_hanging: form.payload.row.action.wall_hanging,\n          assembly_required: form.payload.row.action.assembly_required,\n          assembly_part: form.payload.row.action.assembly_part,\n          legs: form.payload.row.action.legs,\n          mirror: form.payload.row.action.mirror,\n          mirror_length: form.payload.row.action.mirror_length,\n          mirror_width: form.payload.row.action.mirror_width,\n          silver: form.payload.row.action.silver,\n          silver_weight: form.payload.row.action.silver_weight,\n          joints: form.payload.row.action.joints,\n          upholstery: form.payload.row.action.upholstery,\n          trolley: form.payload.row.action.trolley,\n          trolley_material: form.payload.row.action.trolley_material,\n          rotating_seats: form.payload.row.action.rotating_seats,\n          eatable_oil_polish: form.payload.row.action.eatable_oil_polish,\n          no_chemical: form.payload.row.action.no_chemical,\n          straight_back: form.payload.row.action.straight_back,\n          lean_back: form.payload.row.action.lean_back,\n          weaving: form.payload.row.action.weaving,\n          knife: form.payload.row.action.knife,\n          not_suitable_for_Micro_Dish:\n            form.payload.row.action.not_suitable_for_Micro_Dish,\n          tilt_top: form.payload.row.action.tilt_top,\n          inside_compartments: form.payload.row.action.inside_compartments,\n          stackable: form.payload.row.action.stackable,\n          MRP: form.payload.row.action.MRP,\n          tax_rate: form.payload.row.action.tax_rate,\n          selling_price: form.payload.row.action.selling_price,\n          showroom_price: form.payload.row.action.showroom_price,\n          discount_limit: form.payload.row.action.discount_limit,\n          polish_time: form.payload.row.action.polish_time,\n          manufacturing_time: form.payload.row.action.manufacturing_time,\n          status: form.payload.row.action.status,\n          returnDays: form.payload.row.action.returnDays,\n          COD: form.payload.row.action.COD,\n          returnable: form.payload.row.action.returnable,\n          drawer: form.payload.row.action.drawer,\n          drawer_count: form.payload.row.action.drawer_count,\n          mobile_store: form.payload.row.action.mobile_store,\n          online_store: form.payload.row.action.online_store,\n          range: form.payload.row.action.range,\n          back_style: form.payload.row.action.back_style,\n          package_length: form.payload.row.action.package_length,\n          package_height: form.payload.row.action.package_height,\n          package_breadth: form.payload.row.action.package_breadth,\n          quantity: form.payload.row.action.quantity,\n          unit: form.payload.row.action.unit,\n          variation_array: form.payload.row.action.variation_array,\n          assembly_level: form.payload.row.action.assembly_level,\n          continue_selling: form.payload.row.action.continue_selling,\n          wheel: form.payload.row.action.wheel,\n          wheel_included: form.payload.row.action.wheel_included,\n          wheel_qty: form.payload.row.action.wheel_qty,\n          wheel_name: form.payload.row.action.wheel_name,\n          ceramic_tiles: form.payload.row.action.ceramic_tiles,\n          ceramic_tiles_qty: form.payload.row.action.ceramic_tiles_qty,\n          ceramic_tiles_included:\n            form.payload.row.action.ceramic_tiles_included,\n          ceramic_tiles_name: form.payload.row.action.ceramic_tiles_name,\n          ceramic_drawers_qty: form.payload.row.action.ceramic_drawers_qty,\n          ceramic_drawers: form.payload.row.action.ceramic_drawers,\n          ceramic_drawers_included:\n            form.payload.row.action.ceramic_drawers_included,\n          ceramic_drawers_name: form.payload.row.action.ceramic_drawers_name,\n          mattress: form.payload.row.action.mattress,\n          mattress_length: form.payload.row.action.mattress_length,\n          mattress_breadth: form.payload.row.action.mattress_breadth,\n          plywood: form.payload.row.action.plywood,\n          top_size_breadth: form.payload.row.action.top_size_breadth,\n          top_size_length: form.payload.row.action.top_size_length,\n          amazon_url: form.payload.row.action.amazon_url,\n          flipkart_url: form.payload.row.action.flipkart_url,\n          jiomart_url: form.payload.row.action.jiomart_url,\n          wood_weight: form.payload.row.action.wood_weight,\n          package_weight: form.payload.row.action.package_weight,\n          metal_weight: form.payload.row.action.metal_weight,\n        });\n\n        setCat(form.payload.row.action.category_id);\n\n        break;\n      case \"update_customer\":\n        //console.log(form.payload);\n        setData({\n          CID: form.payload.row.CID,\n          register_time: form.payload.row.register_time,\n          username: form.payload.row.username,\n          mobile: form.payload.row.mobile,\n          email: form.payload.row.email,\n          password: form.payload.row.password,\n          city: form.payload.row.city,\n          state: form.payload.row.state,\n          shipping: form.payload.row.shipping,\n        });\n        break;\n      case \"merge_product\":\n        getMKU();\n\n        getHardwareDropdown().then((data) => {\n          if (data.data !== null)\n            return setCatalog((old) => ({ ...old, ...data.data }));\n        });\n\n        categoryList().then((data) => {\n          if (data.data === null) return setCategory([]);\n\n          return setCategory(data.data);\n        });\n\n        getSubCatagories().then((data) => {\n          if (data.data === null) return setSubCategory([]);\n\n          return setSubCategory(data.data);\n        });\n\n        getPrimaryMaterial().then((data) => {\n          if (data.data === null) return setMaterialCatalog([]);\n\n          return setMaterialCatalog(data.data);\n        });\n\n        setData({\n          ...changeData,\n        });\n\n        break;\n      case \"update_merge\":\n        categoryList().then((data) => {\n          if (data.data === null) return setCategory([]);\n          return setCategory(data.data);\n        });\n\n        getSubCatagories().then((data) => {\n          if (data.data === null) return setSubCategory([]);\n          return setSubCategory(data.data);\n        });\n\n        console.log(form.payload.row.product_articles);\n\n        // for product qty\n        form.payload.row.product_articles.length > 0 &&\n          form.payload.row.product_articles.map((item) => {\n            setData((old) => ({\n              ...old,\n              [item.SKU]: item.qty,\n            }));\n          });\n\n        setData((old) => ({\n          ...old,\n          M: form.payload.row.M,\n          product_articles:\n            form.payload.row.product_articles.map((item) => item.SKU) || [],\n          product_title: form.payload.row.product_title,\n          category_name: form.payload.row.category_id,\n          category_id: form.payload.row.category_id,\n          sub_category_name: form.payload.row.sub_category_id,\n          sub_category_id: form.payload.row.sub_category_id,\n          warehouse: form.payload.row.warehouse,\n          warehouse_name: form.payload.row.warehouse_name,\n          bangalore_stock: form.payload.row.bangalore_stock,\n          jodhpur_stock: form.payload.row.jodhpur_stock,\n          product_description: form.payload.row.product_description,\n          product_image: form.payload.row.product_image,\n          savedImages: form.payload.row.product_image,\n          featured_image: form.payload.row.featured_image,\n          mannequin_image: form.payload.row.mannequin_image,\n          specification_image: form.payload.row.specification_image,\n          selling_points: form.payload.row.selling_points,\n          selling_price: form.payload.row.selling_price,\n          showroom_price: form.payload.row.showroom_price,\n          discount_limit: form.payload.row.discount_limit,\n          mobile_store: form.payload.row.mobile_store,\n          online_store: form.payload.row.online_store,\n          continue_selling: form.payload.row.continue_selling,\n          COD: form.payload.row.COD,\n          returnDays: form.payload.row.returnDays,\n          returnable: form.payload.row.returnable,\n          polish_time: form.payload.row.polish_time,\n          manufacturing_time: form.payload.row.manufacturing_time,\n          package_length: form.payload.row.package_length,\n          package_height: form.payload.row.package_height,\n          package_breadth: form.payload.row.package_breadth,\n          seo_title: form.payload.row.seo_title,\n          seo_description: form.payload.row.seo_description,\n          seo_keyword: form.payload.row.seo_keyword,\n        }));\n\n        break;\n      case \"update_Stock\":\n        setData({\n          ...changeData,\n          _id: form.payload.row._id,\n          product_id: form.payload.row.product_id,\n          stock: form.payload.row.stock,\n          warehouse: form.payload.row.warehouse,\n        });\n        break;\n      case \"update_supplier\":\n        setData({\n          ...changeData,\n          _id: form.payload.row._id,\n          supplier_name: form.payload.row.supplier_name,\n          mobile: form.payload.row.mobile,\n          gst_no: form.payload.row.gst_no,\n          alt_mobile: form.payload.row.alt_mobile,\n          specialization: form.payload.row.specialization,\n          SID: form.payload.row.SID,\n          address: form.payload.row.address,\n        });\n        break;\n      case \"add_supplier\":\n        getSID();\n        break;\n      case \"update_polish\":\n        // console.log(form.payload.row)\n        getDID();\n        setData({\n          ...changeData,\n          _id: form.payload.row.action._id,\n          polish_name: form.payload.row.action.polish_name,\n          polish_type: form.payload.row.action.polish_type,\n          level: form.payload.row.action.level,\n          polish_finish: form.payload.row.action.polish_finish,\n          outDoor_image: form.payload.row.action.outDoor_image,\n          savedImages: form.payload.row.action.outDoor_image,\n          inDoor_image: form.payload.row.action.inDoor_image,\n          indoorSavedImage: form.payload.row.action.inDoor_image,\n          lock: form.payload.row.action.lock,\n          price: form.payload.row.action.price,\n        });\n        break;\n      case \"primaryMaterial\":\n        getDID();\n        break;\n      case \"addPolish\":\n        getDID();\n        break;\n      case \"addBlog\":\n        getDID();\n        break;\n      case \"update_review\":\n        console.log(form.payload);\n        setData((old) => ({\n          ...old,\n          _id: form.payload.formattedValue._id,\n          product_id: form.payload.row.product_id,\n          rating: parseInt(form.payload.row.rating),\n          review: form.payload.row.review,\n          review_title: form.payload.row.review_title,\n          yourTube_url: form.payload.row.yourTube_url,\n          action: form.payload.row.action,\n        }));\n        break;\n      case \"add_banner\":\n        getDID();\n        setSequenceFunc();\n        break;\n      case \"update_banner\":\n        setSequenceFunc();\n        getDID();\n        console.log(form.payload);\n        setData({\n          uuid: form.payload.value.uuid,\n          web_banner: form.payload.value.web_banner,\n          web_url: form.payload.value.web_url,\n          sequence_no: form.payload.value.sequence_no,\n          old_sequence_no: form.payload.value.sequence_no,\n          mobile_banner: form.payload.value.mobile_banner,\n          mobile_url: form.payload.value.mobile_url,\n          banner_title: form.payload.value.banner_title,\n          web_banner_status: form.payload.value.web_banner_status,\n          mobile_banner_status: form.payload.value.mobile_banner_status,\n        });\n        break;\n      default:\n    }\n  }, [form.formType, form.state]);\n\n  async function setSequenceFunc() {\n    const data = await getSequence();\n    console.log(data);\n    if (data.status === 200) {\n      return setSequence([...data.data]);\n    }\n  }\n\n  // stepper button\n  const handleNextStep = () => {\n    setActiveStep(activeStep + 1);\n  };\n\n  // stepper button\n  const handleBackStep = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  const handleDiscount = (e) => {\n    if (e.target.name === \"discount_limit\") {\n      if (e.target.value > 25) e.target.value = 25;\n    }\n    setDiscount({\n      ...discount,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // for update\n  const handleChangeData = (e) => {\n    switch (form.formType) {\n      case \"update_category\":\n        setData({\n          ...changeData,\n          category: e.target.value,\n        });\n        break;\n      case \"update_PrimaryMaterial\":\n        setData({\n          ...changeData,\n          [e.target.name]: e.target.value,\n        });\n        break;\n      case \"update_polish\":\n        setData({\n          ...changeData,\n          polish: e.target.value,\n        });\n        break;\n      case \"update_knob\":\n        setData({\n          ...changeData,\n          knob: e.target.value,\n        });\n        break;\n      case \"update_fitting\":\n        setData({\n          ...changeData,\n          fitting: e.target.value,\n        });\n        break;\n      case \"update_hinge\":\n        setData({\n          ...changeData,\n          hinge: e.target.value,\n        });\n        break;\n      case \"update_supplier\":\n        setData({\n          ...changeData,\n          [e.target.name]: e.target.value,\n        });\n        break;\n      case \"update_handle\":\n        setData({\n          ...changeData,\n          handle: e.target.value,\n        });\n        break;\n      case \"update_secondaryMaterial\":\n        setData({\n          ...changeData,\n          secMater: e.target.value,\n        });\n        break;\n      case \"update_product\":\n        setData({\n          ...changeData,\n          [e.target.name]: e.target.value,\n        });\n        break;\n      case \"update_blog\":\n        setData({\n          ...changeData,\n          [e.target.name]: e.target.value,\n        });\n        break;\n      case \"update_fabric\":\n        setData({\n          ...changeData,\n          [e.target.name]: e.target.value,\n        });\n        break;\n      case \"update_textile\":\n        setData({\n          ...changeData,\n          [e.target.name]: e.target.value,\n        });\n        break;\n      case \"inward\":\n        setData({\n          ...changeData,\n          [e.target.name]: e.target.value,\n        });\n        break;\n\n      default:\n      // //console.log(\"\");\n    }\n  };\n\n  const feature = [\n    \"web_banner_status\",\n    \"mobile_banner_status\",\n    \"rotating_seats\",\n    \"eatable_oil_polish\",\n    \"no_chemical\",\n    \"lean_back\",\n    \"straight_back\",\n    \"weaving\",\n    \"not_suitable_for_Micro_Dish\",\n    \"tilt_top\",\n    \"inside_compartments\",\n    \"stackable\",\n    \"knife\",\n    \"wall_hanging\",\n    \"COD\",\n    \"returnable\",\n    \"mobile_store\",\n    \"online_store\",\n    \"continue_selling\",\n    \"ceramic_drawer_included\",\n    \"ceramic_tiles_included\",\n    \"status\",\n    \"lock\",\n    \"customizations\",\n    \"marketing\",\n  ];\n\n  //  for product felids\n  const handleProductFields = (e) => {\n    if (feature.includes(e.target.name)) {\n      setData({\n        ...changeData,\n        [e.target.name]: e.target.checked,\n      });\n    } else {\n      setData({\n        ...changeData,\n        [e.target.name]: e.target.value,\n      });\n    }\n    // //console.log(changeData);\n  };\n\n  const handleChange = (event) => {\n    // //console.log(event.target.name);\n    setCat(event.target.value);\n  };\n\n  const handleClose = () => {\n    resetAll();\n    dispatch(setForm({ state: false, formType: null, payload: null }));\n  };\n\n  // function for handling category\n  const handleCategory = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", \"Not Assigned \" + SKU);\n    FD.append(\"type\", \"Category\");\n    FD.append(\"operation\", \"insertCategory\");\n\n    FD.append(\"category_image\", Image[0]);\n    FD.append(\"category_name\", e.target.category_name.value);\n    FD.append(\"seo_title\", changeData.seo_title);\n    FD.append(\"seo_description\", changeData.seo_description);\n    FD.append(\"seo_keyword\", changeData.seo_keyword);\n    FD.append(\"product_description\", changeData.product_description);\n    FD.append(\"category_status\", e.target.category_status.checked);\n\n    // // //console.log(acceptedFiles[0].name, e.target.category_name.value)\n\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          // form.setRow([\n          //   ...form.row,\n          //   {\n          //     id: form.row.length + 1,\n          //     category_name: data.data.response.category_name,\n          //     category_status: data.data.response.category_status,\n          //     category_image: data.data.response.category_image,\n          //     seo_title: data.data.response.seo_title,\n          //     seo_description: data.data.response.seo_description,\n          //     seo_keyword: data.data.response.seo_keyword,\n          //     product_description: data.data.response.product_description,\n          //     action: data.data.response,\n          //   },\n          // ]);\n          // form.setCheck((old) => [...old, data.data.response.category_status]);\n          setImages([]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  // function for handling update category\n  const handleUpdateCategory = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", changeData._id);\n    FD.append(\"type\", \"Category\");\n    FD.append(\"operation\", \"updateCategory\");\n\n    FD.append(\"_id\", changeData._id);\n\n    Image[0] !== undefined && FD.append(\"category_image\", Image[0]);\n    // console.log(Image[0])\n\n    FD.append(\"seo_title\", changeData.seo_title);\n    FD.append(\"seo_description\", changeData.seo_description);\n    FD.append(\"seo_keyword\", changeData.seo_keyword);\n    FD.append(\"product_description\", changeData.product_description);\n\n    e.target.category_name.value !== undefined\n      ? FD.append(\"category_name\", e.target.category_name.value)\n      : console.log();\n\n    const res = addDraft(FD);\n    res\n      .then((data) => {\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          // form.setRow(\n          //   form.row.map((set) => {\n          //     if (set.action === form.payload.row.action) {\n          //       set.category_name = e.target.category_name.value;\n          //       Image[0] !== undefined\n          //         ? (set.category_image = `https://admin.woodshala.in/upload/${Image[0].path}`)\n          //         : console.log();\n          //       set.seo_title = changeData.seo_title;\n          //       set.seo_description = changeData.seo_description;\n          //       set.seo_keyword = changeData.seo_keyword;\n          //       set.product_description = changeData.product_description;\n          //     }\n          //     return set;\n          //   })\n          // );\n          setImages([]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  // function for handling Customer\n  const handleCustomer = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"profile_image\", Image[0]);\n\n    FD.append(\"username\", e.target.username.value);\n    FD.append(\"mobile\", e.target.mobile.value);\n    FD.append(\"email\", e.target.email.value);\n    FD.append(\"password\", e.target.password.value);\n    FD.append(\"shipping\", JSON.stringify(address));\n    FD.append(\"marketing\", changeData.marketing);\n\n    const res = addCustomer(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          form.setRow([\n            ...form.row,\n            {\n              id: form.row.length + 1,\n              CID: data.data.response.CID,\n              register_time: data.data.response.register_time,\n              profile_image: data.data.response.profile_image,\n              username: data.data.response.username,\n              mobile: data.data.response.mobile,\n              email: data.data.response.email,\n              password: data.data.response.password,\n              shipping: data.data.response.shipping,\n              action: data.data.response,\n            },\n          ]);\n          setAddress([]);\n          setImages([]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n  // function for handling Customer\n  const handleUpdateCustomer = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    Image[0] !== undefined && FD.append(\"profile_image\", Image[0]);\n\n    FD.append(\"CID\", changeData.CID);\n    FD.append(\"username\", changeData.username);\n    FD.append(\"mobile\", changeData.mobile);\n    FD.append(\"email\", changeData.email);\n    FD.append(\"password\", changeData.password);\n    FD.append(\"city\", changeData.city);\n    // FD.append(\"pincode\", changeData.pincode);\n    FD.append(\"state\", changeData.state);\n    // FD.append(\"landmark\", changeData.landmark);\n    FD.append(\"shipping\", changeData.shipping);\n\n    const res = updateCustomer(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          form.setRow(\n            form.row.map((set) => {\n              if (set.action === form.payload.row.action) {\n                set.CID = changeData.CID;\n                set.register_time = changeData.register_time;\n                set.profile_image =\n                  Image[0] !== undefined\n                    ? `${imageLink}${Image[0].path}`\n                    : console.log();\n                set.username = changeData.username;\n                set.mobile = changeData.mobile;\n                set.email = changeData.email;\n                set.password = changeData.password;\n                set.city = changeData.city;\n                set.state = changeData.state;\n                set.shipping = changeData.shipping;\n              }\n              return set;\n            })\n          );\n          setImages([]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  // function fo resting the values\n\n  const resetAll = () => {\n    setProductSKU({\n      P_SKU: [],\n      H_SKU: [],\n      supplier: [],\n      category: [],\n    });\n    setWebBanner([]);\n    setMobileBanner([]);\n    setImages([]);\n    setFeatured([]);\n    setFiles([]);\n    setActiveStep(0);\n    setData({\n      CVW: 0,\n      ACIN: \"\",\n      web_banner_status: false,\n      mobile_banner_status: false,\n      warehouse_to: \"\",\n      sequence_no: \"\",\n      marketing: false,\n      primary_material: [],\n      product_articles: [],\n      hardware_articles: [],\n      category_discount: [],\n      supplier: \"\",\n      range: \"None\",\n      product_array: [],\n      variation_array: [],\n      warehouse: [],\n      savedImages: [],\n      shipping: \"\",\n      product_title: \"\",\n      amazon_url: \"\",\n      status: true,\n      flipkart_url: \"\",\n      jiomart_url: \"\",\n      seo_title: \"\",\n      seo_description: \"\",\n      specification_image: \"\",\n      featured_image: \"\",\n      mannequin_image: \"\",\n      seo_keyword: \"\",\n      product_des: \"\",\n      category: \"\",\n      sub_category: \"\",\n      length: 0,\n      breadth: 0,\n      selling_points: [],\n      height: 0,\n      priMater: \"\",\n      priMater_weight: \"\",\n      secMater: \"\",\n      secMater_weight: \"\",\n      selling_price: 0,\n      mrp: 0,\n      discount_cap: 0,\n      polish_time: 0,\n      manufacturing_time: 0,\n      polish: [],\n      wight_cap: \"\",\n      wall_hanging: \"\",\n      assembly_required: \"\",\n      assembly_leg: \"\",\n      assembly_part: 2,\n      fitting: \"None\",\n      silver: \"\",\n      selling_point: \"\",\n      mirror: \"\",\n      joints: \"\",\n      tax_rate: 18,\n      seat_width: 0,\n      ceramic_drawer: \"None\",\n      ceramic_tiles: \"None\",\n      seat_depth: 0,\n      seat_height: 0,\n      wheel: \"None\",\n      wheel_included: \"no\",\n      trolly: \"\",\n      returnable: false,\n      returnDays: 0,\n      trolly_mater: \"\",\n      top_size_length: 0,\n      top_size_breadth: 0,\n      dial_size: 0,\n      COD: false,\n      textile: \"\",\n      paid_amount: 0,\n      total_amount: 0,\n      customer_name: \"\",\n      customer_email: \"\",\n      shipping_address: \"\",\n      searchCustomer: \"\",\n      mobile_store: true,\n      online_store: true,\n      continue_selling: true,\n      ceramic_drawer_included: false,\n      ceramic_tiles_included: false,\n      unit: \"Pcs\",\n      quantity: 1,\n      textile_type: \"\",\n      category_id: \"\",\n      sub_category_id: \"\",\n      product_description: \"\",\n      legs: \"None\",\n      fabric: \"None\",\n      assembly_level: \"Easy Assembly\",\n      mattress: \"no\",\n      mattress_length: 0,\n      mattress_breadth: 0,\n      hinge: \"None\",\n      hinge_qty: 0,\n      knob: \"None\",\n      knob_qty: 0,\n      handle: \"None\",\n      handle_qty: 0,\n      door: \"None\",\n      door_qty: 0,\n      plywood: \"no\",\n      wheel_qty: 0,\n      cradle_bed: \"no\",\n      cradle_bed_depth: 0,\n      cradle_bed_height: 0,\n      cradle_bed_width: 0,\n      showroom_price: 0,\n      discount_limit: 0,\n      length_main: 0,\n      weight: 0,\n      ceramic_drawer_qty: 0,\n      ceramic_tiles_qty: 0,\n      back_style: \"None\",\n      weight_capacity: \"None\",\n      drawer: \"None\",\n      package_breadth: 0,\n      package_height: 0,\n      package_length: 0,\n      silver_weight: 0,\n      mirror_length: 0,\n      mirror_width: 0,\n      drawer_count: 0,\n      seating_size_width: 0,\n      seating_size_depth: 0,\n      seating_size_height: 0,\n      restocking_time: 0,\n      min_quantity: 1,\n      hardware_polish: \"None\",\n      wood_weight: 0,\n      metal_weight: 0,\n      package_weight: 0,\n      polish_type: \"None\",\n      polish_finish: \"None\",\n      level: \"None\",\n      lock: false,\n      price: 0,\n      indoorSavedImage: [],\n    });\n    document.getElementById(\"myForm\").reset();\n  };\n\n  const handleProduct = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", \"Not Assigned \" + SKU);\n    FD.append(\"type\", \"Product\");\n    FD.append(\"operation\", \"insertProduct\");\n\n    FD.append(\"SKU\", \"Not Assigned \" + SKU);\n    FD.append(\"status\", false);\n\n    FD.append(\"CVW\", changeData.CVW);\n\n    files.map((element) => {\n      if (element.validate) return FD.append(\"product_image\", element);\n    });\n\n    FD.append(\"specification_image\", changeData.specification_image || \"\");\n    FD.append(\"featured_image\", changeData.featured_image || \"\");\n    FD.append(\"mannequin_image\", changeData.mannequin_image || \"\");\n\n    console.log(changeData.primary_material);\n\n    FD.append(\n      \"primary_material_name\",\n      JSON.stringify(changeData.primary_material)\n    );\n    FD.append(\"primary_material\", changeData.primary_material);\n\n    FD.append(\"warehouse_name\", JSON.stringify(changeData.warehouse));\n    FD.append(\"polish_name\", JSON.stringify(changeData.polish));\n\n    category.map((item) => {\n      return (\n        item._id === changeData.category_name &&\n        FD.append(\"category_name\", item.category_name)\n      );\n    });\n\n    subCategory.map((item) => {\n      return (\n        item._id === changeData.sub_category_name &&\n        FD.append(\"sub_category_name\", item.sub_category_name)\n      );\n    });\n\n    catalog.hinge.map((item) => {\n      return (\n        item.SKU === changeData.hinge && FD.append(\"hinge_name\", item.title)\n      );\n    });\n    catalog.fitting.map((item) => {\n      return (\n        item.SKU === changeData.fitting && FD.append(\"fitting_name\", item.title)\n      );\n    });\n    catalog.knob.map((item) => {\n      return item.SKU === changeData.knob && FD.append(\"knob_name\", item.title);\n    });\n    catalog.door.map((item) => {\n      return item.SKU === changeData.door && FD.append(\"door_name\", item.title);\n    });\n    catalog.wheel.map((item) => {\n      return (\n        item.SKU === changeData.wheel && FD.append(\"wheel_name\", item.title)\n      );\n    });\n    catalog.handle.map((item) => {\n      return (\n        item.SKU === changeData.handle && FD.append(\"handle_name\", item.title)\n      );\n    });\n    catalog.ceramic_tiles.map((item) => {\n      return (\n        item.SKU === changeData.ceramic_tiles &&\n        FD.append(\"ceramic_tiles_name\", item.title)\n      );\n    });\n    catalog.ceramic_drawer.map((item) => {\n      return (\n        item.SKU === changeData.ceramic_drawer &&\n        FD.append(\"ceramic_drawer_name\", item.title)\n      );\n    });\n\n    catalog.fabric.map((item) => {\n      return (\n        item.fabric === changeData.fabric &&\n        FD.append(\"fabric_name\", item.title)\n      );\n    });\n\n    catalog.wheel.map((item) => {\n      return (\n        item.wheel === changeData.wheel && FD.append(\"wheel_name\", item.title)\n      );\n    });\n\n    FD.append(\"parentProduct\", changeData.SKU);\n    FD.append(\"returnDays\", changeData.returnable ? changeData.returnDays : 0);\n    FD.append(\"returnable\", changeData.returnable);\n    FD.append(\"COD\", changeData.COD);\n    FD.append(\"polish\", changeData.polish);\n    FD.append(\"hinge\", changeData.hinge);\n    FD.append(\"knob\", changeData.knob);\n    FD.append(\"handle\", changeData.handle);\n    FD.append(\"door\", changeData.door);\n    FD.append(\"fitting\", changeData.fitting);\n    FD.append(\"amazon_url\", changeData.amazon_url);\n    FD.append(\"flipkart_url\", changeData.flipkart_url);\n    FD.append(\"jiomart_url\", changeData.jiomart_url);\n    FD.append(\"wood_weight\", changeData.wood_weight);\n    FD.append(\"metal_weight\", changeData.metal_weight);\n    FD.append(\"package_weight\", changeData.package_weight);\n\n    FD.append(\"cradle_bed\", changeData.cradle_bed);\n    if (changeData.cradle_bed) {\n      FD.append(\"cradle_bed_depth\", changeData.cradle_bed_depth);\n      FD.append(\"cradle_bed_height\", changeData.cradle_bed_height);\n      FD.append(\"cradle_bed_width\", changeData.cradle_bed_width);\n    }\n\n    FD.append(\"wheel_included\", changeData.wheel_included);\n\n    if (changeData.wheel_included) {\n      FD.append(\"wheel_qty\", changeData.wheel_qty);\n      FD.append(\"wheel\", changeData.wheel);\n    }\n    if (changeData.handle !== \"None\") {\n      FD.append(\"handle_qty\", changeData.handle_qty);\n    }\n    if (changeData.hinge !== \"None\") {\n      FD.append(\"hinge_qty\", changeData.hinge_qty);\n    }\n    if (changeData.door !== \"None\") {\n      FD.append(\"door_qty\", changeData.door_qty);\n    }\n    if (changeData.knob !== \"None\") {\n      FD.append(\"knob_qty\", changeData.knob_qty);\n    }\n    if (changeData.fabric !== \"None\") {\n      FD.append(\"fabric_qty\", changeData.fabric_qty);\n    }\n\n    FD.append(\"ceramic_drawer_included\", changeData.ceramic_drawer_included);\n\n    if (changeData.ceramic_drawer_included) {\n      FD.append(\"ceramic_drawer\", changeData.ceramic_drawer);\n      FD.append(\"ceramic_drawer_qty\", changeData.ceramic_drawer_qty);\n    }\n\n    FD.append(\"ceramic_tiles_included\", changeData.ceramic_tiles_included);\n\n    if (changeData.ceramic_tiles_included) {\n      FD.append(\"ceramic_tiles\", changeData.ceramic_tiles);\n      FD.append(\"ceramic_tiles_qty\", changeData.ceramic_tiles_qty);\n    }\n\n    FD.append(\"mattress\", changeData.mattress);\n    FD.append(\"mattress_length\", changeData.mattress_length);\n    FD.append(\"mattress_breadth\", changeData.mattress_breadth);\n    FD.append(\"plywood\", changeData.plywood);\n\n    FD.append(\"range\", changeData.range);\n    FD.append(\"category_id\", changeData.category_name);\n    FD.append(\"back_style\", changeData.back_style);\n    FD.append(\"sub_category_id\", changeData.sub_category_name);\n    FD.append(\"polish_time\", changeData.polish_time);\n    FD.append(\"manufacturing_time\", changeData.manufacturing_time);\n    FD.append(\"product_title\", changeData.product_title);\n    FD.append(\"product_description\", changeData.product_description);\n    FD.append(\"selling_points\", JSON.stringify(changeData.selling_points));\n    FD.append(\"MRP\", changeData.MRP ? changeData.MRP : 0);\n    FD.append(\n      \"showroom_price\",\n      changeData.showroom_price ? changeData.showroom_price : 0\n    );\n    FD.append(\"seo_title\", changeData.seo_title);\n    FD.append(\"seo_description\", changeData.seo_description);\n    FD.append(\"seo_keyword\", changeData.seo_keyword);\n    FD.append(\"discount_limit\", changeData.discount_limit || 0);\n    FD.append(\"selling_price\", changeData.selling_price);\n    FD.append(\"warehouse\", changeData.warehouse);\n    // FD.append(\"polish\", changeData.polish);\n    FD.append(\"fabric\", changeData.fabric);\n\n    FD.append(\"drawer\", changeData.drawer);\n\n    FD.append(\"unit\", changeData.unit);\n    FD.append(\"quantity\", changeData.quantity ? changeData.quantity : 1);\n\n    if (changeData.drawer !== undefined || changeData.drawer !== \"none\")\n      FD.append(\n        \"drawer_count\",\n        changeData.drawer_count ? changeData.drawer_count : 0\n      );\n\n    //  // //console.log(secMaterial)\n    if (changeData.secondary_material_weight !== undefined)\n      FD.append(\n        \"secondary_material_weight\",\n        changeData.secondary_material_weight\n      );\n    FD.append(\n      \"length_main\",\n      changeData.length_main ? changeData.length_main : 0\n    );\n    FD.append(\"assembly_level\", changeData.assembly_level);\n\n    FD.append(\n      \"package_length\",\n      changeData.package_length ? changeData.package_length : 0\n    );\n    FD.append(\n      \"package_height\",\n      changeData.package_height ? changeData.package_height : 0\n    );\n    FD.append(\n      \"package_breadth\",\n      changeData.package_breadth ? changeData.package_breadth : 0\n    );\n\n    FD.append(\"breadth\", changeData.breadth ? changeData.breadth : 0);\n    FD.append(\"height\", changeData.height ? changeData.height : 0);\n    FD.append(\"weight\", changeData.weight ? changeData.weight : 0);\n\n    FD.append(\"top_size_length\", changeData.top_size_length);\n    FD.append(\"top_size_breadth\", changeData.top_size_breadth);\n    FD.append(\"dial_size\", changeData.dial_size);\n    FD.append(\n      \"seating_size_width\",\n      changeData.seating_size_width ? changeData.seating_size_width : 0\n    );\n    FD.append(\n      \"seating_size_depth\",\n      changeData.seating_size_depth ? changeData.seating_size_depth : 0\n    );\n    FD.append(\n      \"seating_size_height\",\n      changeData.seating_size_height ? changeData.seating_size_height : 0\n    );\n    FD.append(\"weight_capacity\", changeData.weight_capacity);\n    FD.append(\"assembly_required\", changeData.assembly_required);\n\n    if (changeData.jodhpur_stock && changeData.jodhpur_stock > 0)\n      FD.append(\"jodhpur_stock\", changeData.jodhpur_stock);\n\n    if (changeData.bangalore_stock && changeData.bangalore_stock > 0)\n      FD.append(\"bangalore_stock\", changeData.bangalore_stock);\n\n    if (changeData.assembly_required === \"shipping\")\n      FD.append(\"assembly_part\", changeData.assembly_part);\n    if (changeData.assembly_required === \"yes\")\n      FD.append(\"legs\", changeData.legs);\n\n    if (changeData.silver === \"yes\")\n      FD.append(\n        \"silver_weight\",\n        changeData.silver_weight ? changeData.silver_weight : 0\n      );\n\n    if (changeData.trolley === \"yes\")\n      FD.append(\"trolley_material\", changeData.trolley_material);\n\n    if (changeData.upholstery === \"Yes\") FD.append(\"fabric\", changeData.fabric);\n\n    FD.append(\"mirror\", changeData.mirror);\n\n    if (changeData.mirror === \"yes\") {\n      FD.append(\n        \"mirror_length\",\n        changeData.mirror_length ? changeData.mirror_length : 0\n      );\n      FD.append(\n        \"mirror_width\",\n        changeData.mirror_width ? changeData.mirror_width : 0\n      );\n    }\n    FD.append(\"joints\", changeData.joints ? changeData.joints : \"\");\n    FD.append(\n      \"upholstery\",\n      changeData.upholstery ? changeData.upholstery : \"no\"\n    );\n    FD.append(\"trolley\", changeData.trolley ? changeData.trolley : \"no\");\n    FD.append(\"silver\", changeData.silver ? changeData.silver : \"no\");\n    FD.append(\n      \"rotating_seats\",\n      changeData.rotating_seats ? changeData.rotating_seats : false\n    );\n    FD.append(\n      \"eatable_oil_polish\",\n      changeData.eatable_oil_polish ? changeData.eatable_oil_polish : false\n    );\n    FD.append(\n      \"no_chemical\",\n      changeData.no_chemical ? changeData.no_chemical : false\n    );\n    FD.append(\"weaving\", changeData.weaving ? changeData.weaving : false);\n    FD.append(\"knife\", changeData.knife ? changeData.knife : false);\n    FD.append(\n      \"mobile_store\",\n      changeData.mobile_store ? changeData.mobile_store : true\n    );\n    FD.append(\n      \"online_store\",\n      changeData.online_store ? changeData.online_store : true\n    );\n    FD.append(\n      \"continue_selling\",\n      changeData.continue_selling ? changeData.continue_selling : true\n    );\n\n    FD.append(\n      \"wall_hanging\",\n      changeData.wall_hanging ? changeData.wall_hanging : false\n    );\n\n    FD.append(\n      \"not_suitable_for_Micro_Dish\",\n      changeData.not_suitable_for_Micro_Dish\n        ? changeData.not_suitable_for_Micro_Dish\n        : false\n    );\n\n    FD.append(\"tilt_top\", changeData.tilt_top ? changeData.tilt_top : false);\n    FD.append(\n      \"inside_compartments\",\n      changeData.inside_compartments ? changeData.inside_compartments : false\n    );\n    FD.append(\"stackable\", changeData.stackable ? changeData.stackable : false);\n    FD.append(\"tax_rate\", changeData.tax_rate);\n\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n  const handleVariation = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n    files.map((element) => {\n      if (element.validate) return FD.append(\"product_image\", element);\n    });\n    FD.append(\"savedImages\", JSON.stringify(changeData.savedImages));\n\n    FD.append(\"status\", true);\n    FD.append(\"parent_SKU\", changeData.SKU);\n\n    FD.append(\"SKU\", SKU);\n    FD.append(\"ACIN\", changeData.ACIN);\n\n    FD.append(\"variant_label\", changeData.variant_label);\n    FD.append(\"specification_image\", changeData.specification_image);\n    FD.append(\"featured_image\", changeData.featured_image);\n    FD.append(\"mannequin_image\", changeData.mannequin_image);\n    FD.append(\"wood_weight\", changeData.wood_weight);\n    FD.append(\"metal_weight\", changeData.metal_weight);\n    FD.append(\"package_weight\", changeData.package_weight);\n\n    console.log(changeData.primary_material);\n\n    FD.append(\n      \"primary_material_name\",\n      JSON.stringify(changeData.primary_material)\n    );\n\n    FD.append(\"warehouse_name\", JSON.stringify(changeData.warehouse));\n    FD.append(\"polish_name\", JSON.stringify(changeData.polish));\n\n    category.map((item) => {\n      return (\n        item._id === changeData.category_name &&\n        FD.append(\"category_name\", item.category_name)\n      );\n    });\n\n    subCategory.map((item) => {\n      return (\n        item._id === changeData.sub_category_name &&\n        FD.append(\"sub_category_name\", item.sub_category_name)\n      );\n    });\n\n    catalog.hinge.map((item) => {\n      return (\n        item.SKU === changeData.hinge && FD.append(\"hinge_name\", item.title)\n      );\n    });\n    catalog.fitting.map((item) => {\n      return (\n        item.SKU === changeData.fitting && FD.append(\"fitting_name\", item.title)\n      );\n    });\n    catalog.knob.map((item) => {\n      return item.SKU === changeData.knob && FD.append(\"knob_name\", item.title);\n    });\n    catalog.door.map((item) => {\n      return item.SKU === changeData.door && FD.append(\"door_name\", item.title);\n    });\n    catalog.wheel.map((item) => {\n      return (\n        item.SKU === changeData.wheel && FD.append(\"wheel_name\", item.title)\n      );\n    });\n    catalog.handle.map((item) => {\n      return (\n        item.SKU === changeData.handle && FD.append(\"handle_name\", item.title)\n      );\n    });\n    catalog.ceramic_tiles.map((item) => {\n      return (\n        item.SKU === changeData.ceramic_tiles &&\n        FD.append(\"ceramic_tiles_name\", item.title)\n      );\n    });\n    catalog.ceramic_drawer.map((item) => {\n      return (\n        item.SKU === changeData.ceramic_drawer &&\n        FD.append(\"ceramic_drawer_name\", item.title)\n      );\n    });\n\n    catalog.fabric.map((item) => {\n      return (\n        item.fabric === changeData.fabric &&\n        FD.append(\"fabric_name\", item.title)\n      );\n    });\n\n    catalog.wheel.map((item) => {\n      return (\n        item.wheel === changeData.wheel && FD.append(\"wheel_name\", item.title)\n      );\n    });\n\n    FD.append(\"parentProduct\", changeData.SKU);\n    FD.append(\"returnDays\", changeData.returnable ? changeData.returnDays : 0);\n    FD.append(\"returnable\", changeData.returnable);\n    FD.append(\"COD\", changeData.COD);\n    FD.append(\"polish\", changeData.polish);\n    FD.append(\"hinge\", changeData.hinge);\n    FD.append(\"knob\", changeData.knob);\n    FD.append(\"handle\", changeData.handle);\n    FD.append(\"door\", changeData.door);\n    FD.append(\"fitting\", changeData.fitting);\n    FD.append(\"amazon_url\", changeData.amazon_url);\n    FD.append(\"flipkart_url\", changeData.flipkart_url);\n    FD.append(\"jiomart_url\", changeData.jiomart_url);\n\n    FD.append(\"cradle_bed\", changeData.cradle_bed);\n    if (changeData.cradle_bed) {\n      FD.append(\"cradle_bed_depth\", changeData.cradle_bed_depth);\n      FD.append(\"cradle_bed_height\", changeData.cradle_bed_height);\n      FD.append(\"cradle_bed_width\", changeData.cradle_bed_width);\n    }\n\n    FD.append(\"wheel_included\", changeData.wheel_included);\n\n    if (changeData.wheel_included) {\n      FD.append(\"wheel_qty\", changeData.wheel_qty);\n      FD.append(\"wheel\", changeData.wheel);\n    }\n    if (changeData.handle !== \"None\") {\n      FD.append(\"handle_qty\", changeData.handle_qty);\n    }\n    if (changeData.hinge !== \"None\") {\n      FD.append(\"hinge_qty\", changeData.hinge_qty);\n    }\n    if (changeData.door !== \"None\") {\n      FD.append(\"door_qty\", changeData.door_qty);\n    }\n    if (changeData.knob !== \"None\") {\n      FD.append(\"knob_qty\", changeData.knob_qty);\n    }\n    if (changeData.fabric !== \"None\") {\n      FD.append(\"fabric_qty\", changeData.fabric_qty);\n    }\n\n    FD.append(\"ceramic_drawer_included\", changeData.ceramic_drawer_included);\n\n    if (changeData.ceramic_drawer_included) {\n      FD.append(\"ceramic_drawer\", changeData.ceramic_drawer);\n      FD.append(\"ceramic_drawer_qty\", changeData.ceramic_drawer_qty);\n    }\n\n    FD.append(\"ceramic_tiles_included\", changeData.ceramic_tiles_included);\n\n    if (changeData.ceramic_tiles_included) {\n      FD.append(\"ceramic_tiles\", changeData.ceramic_tiles);\n      FD.append(\"ceramic_tiles_qty\", changeData.ceramic_tiles_qty);\n    }\n\n    FD.append(\"mattress\", changeData.mattress);\n    FD.append(\"mattress_length\", changeData.mattress_length);\n    FD.append(\"mattress_breadth\", changeData.mattress_breadth);\n    FD.append(\"plywood\", changeData.plywood);\n\n    FD.append(\"range\", changeData.range);\n    FD.append(\"category_id\", changeData.category_name);\n    FD.append(\"back_style\", changeData.back_style);\n    FD.append(\"sub_category_id\", changeData.sub_category_name);\n    FD.append(\"polish_time\", changeData.polish_time);\n    FD.append(\"manufacturing_time\", changeData.manufacturing_time);\n    FD.append(\"product_title\", changeData.product_title);\n    FD.append(\"product_description\", changeData.product_description);\n    FD.append(\"selling_points\", JSON.stringify(changeData.selling_points));\n    FD.append(\"MRP\", changeData.MRP ? changeData.MRP : 0);\n    FD.append(\n      \"showroom_price\",\n      changeData.showroom_price ? changeData.showroom_price : 0\n    );\n    FD.append(\"seo_title\", changeData.seo_title);\n    FD.append(\"seo_description\", changeData.seo_description);\n    FD.append(\"seo_keyword\", changeData.seo_keyword);\n    FD.append(\"discount_limit\", changeData.discount_limit || 0);\n    FD.append(\"selling_price\", changeData.selling_price);\n    FD.append(\"primary_material\", changeData.primary_material);\n    FD.append(\"warehouse\", changeData.warehouse);\n    // FD.append(\"polish\", changeData.polish);\n    FD.append(\"fabric\", changeData.fabric);\n    FD.append(\"CVW\", changeData.CVW);\n\n    FD.append(\"drawer\", changeData.drawer);\n\n    FD.append(\"unit\", changeData.unit);\n    FD.append(\"quantity\", changeData.quantity ? changeData.quantity : 1);\n\n    if (changeData.drawer !== undefined || changeData.drawer !== \"none\")\n      FD.append(\n        \"drawer_count\",\n        changeData.drawer_count ? changeData.drawer_count : 0\n      );\n\n    //  // //console.log(secMaterial)\n    if (changeData.secondary_material_weight !== undefined)\n      FD.append(\n        \"secondary_material_weight\",\n        changeData.secondary_material_weight\n      );\n    FD.append(\n      \"length_main\",\n      changeData.length_main ? changeData.length_main : 0\n    );\n    FD.append(\"assembly_level\", changeData.assembly_level);\n\n    FD.append(\n      \"package_length\",\n      changeData.package_length ? changeData.package_length : 0\n    );\n    FD.append(\n      \"package_height\",\n      changeData.package_height ? changeData.package_height : 0\n    );\n    FD.append(\n      \"package_breadth\",\n      changeData.package_breadth ? changeData.package_breadth : 0\n    );\n\n    FD.append(\"breadth\", changeData.breadth ? changeData.breadth : 0);\n    FD.append(\"height\", changeData.height ? changeData.height : 0);\n    FD.append(\"weight\", changeData.weight ? changeData.weight : 0);\n\n    FD.append(\"top_size_length\", changeData.top_size_length);\n    FD.append(\"top_size_breadth\", changeData.top_size_breadth);\n    FD.append(\"dial_size\", changeData.dial_size);\n    FD.append(\n      \"seating_size_width\",\n      changeData.seating_size_width ? changeData.seating_size_width : 0\n    );\n    FD.append(\n      \"seating_size_depth\",\n      changeData.seating_size_depth ? changeData.seating_size_depth : 0\n    );\n    FD.append(\n      \"seating_size_height\",\n      changeData.seating_size_height ? changeData.seating_size_height : 0\n    );\n    FD.append(\"weight_capacity\", changeData.weight_capacity);\n    FD.append(\"assembly_required\", changeData.assembly_required);\n\n    if (changeData.jodhpur_stock && changeData.jodhpur_stock > 0)\n      FD.append(\"jodhpur_stock\", changeData.jodhpur_stock);\n\n    if (changeData.bangalore_stock && changeData.bangalore_stock > 0)\n      FD.append(\"bangalore_stock\", changeData.bangalore_stock);\n\n    if (changeData.assembly_required === \"shipping\")\n      FD.append(\"assembly_part\", changeData.assembly_part);\n    if (changeData.assembly_required === \"yes\")\n      FD.append(\"legs\", changeData.legs);\n\n    if (changeData.silver === \"yes\")\n      FD.append(\n        \"silver_weight\",\n        changeData.silver_weight ? changeData.silver_weight : 0\n      );\n\n    if (changeData.trolley === \"yes\")\n      FD.append(\"trolley_material\", changeData.trolley_material);\n\n    if (changeData.upholstery === \"Yes\") FD.append(\"fabric\", changeData.fabric);\n\n    FD.append(\"mirror\", changeData.mirror);\n\n    if (changeData.mirror === \"yes\") {\n      FD.append(\n        \"mirror_length\",\n        changeData.mirror_length ? changeData.mirror_length : 0\n      );\n      FD.append(\n        \"mirror_width\",\n        changeData.mirror_width ? changeData.mirror_width : 0\n      );\n    }\n    FD.append(\"joints\", changeData.joints ? changeData.joints : \"\");\n    FD.append(\n      \"upholstery\",\n      changeData.upholstery ? changeData.upholstery : \"no\"\n    );\n    FD.append(\"trolley\", changeData.trolley ? changeData.trolley : \"no\");\n    FD.append(\"silver\", changeData.silver ? changeData.silver : \"no\");\n    FD.append(\n      \"rotating_seats\",\n      changeData.rotating_seats ? changeData.rotating_seats : false\n    );\n    FD.append(\n      \"eatable_oil_polish\",\n      changeData.eatable_oil_polish ? changeData.eatable_oil_polish : false\n    );\n    FD.append(\n      \"no_chemical\",\n      changeData.no_chemical ? changeData.no_chemical : false\n    );\n    FD.append(\"weaving\", changeData.weaving ? changeData.weaving : false);\n    FD.append(\"knife\", changeData.knife ? changeData.knife : false);\n    FD.append(\n      \"mobile_store\",\n      changeData.mobile_store ? changeData.mobile_store : true\n    );\n    FD.append(\n      \"online_store\",\n      changeData.online_store ? changeData.online_store : true\n    );\n    FD.append(\n      \"continue_selling\",\n      changeData.continue_selling ? changeData.continue_selling : true\n    );\n\n    FD.append(\n      \"wall_hanging\",\n      changeData.wall_hanging ? changeData.wall_hanging : false\n    );\n\n    FD.append(\n      \"not_suitable_for_Micro_Dish\",\n      changeData.not_suitable_for_Micro_Dish\n        ? changeData.not_suitable_for_Micro_Dish\n        : false\n    );\n\n    FD.append(\"tilt_top\", changeData.tilt_top ? changeData.tilt_top : false);\n    FD.append(\n      \"inside_compartments\",\n      changeData.inside_compartments ? changeData.inside_compartments : false\n    );\n    FD.append(\"stackable\", changeData.stackable ? changeData.stackable : false);\n    FD.append(\"tax_rate\", changeData.tax_rate);\n\n    const res = variation(FD);\n\n    res\n      .then((data) => {\n        if (data.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          form.setRow((old) => ({\n            ...old,\n            data: [\n              ...old.data,\n              {\n                id: old.data.length + 1,\n                SKU: data.data.response.SKU,\n                CVW: data.data.response.CVW,\n                product_title: data.data.response.product_title,\n                category_name: data.data.response.category_name,\n                category_id: data.data.response.category_id,\n                sub_category_name: data.data.response.sub_category_name,\n                sub_category_id: data.data.response.sub_category_id,\n                product_description: data.data.response.product_description,\n                seo_title: data.data.response.seo_title,\n                seo_description: data.data.response.seo_description,\n                seo_keyword: data.data.response.seo_keyword,\n                product_image: data.data.response.product_image,\n                featured_image: data.data.response.featured_image,\n                mannequin_image: data.data.response.mannequin_image,\n                specification_image: data.data.response.specification_image,\n                primary_material: data.data.response.primary_material,\n                primary_material_name: data.data.response.primary_material_name,\n                warehouse: data.data.response.warehouse,\n                warehouse_name: data.data.response.warehouse_name,\n                length_main: data.data.response.length_main,\n                breadth: data.data.response.breadth,\n                height: data.data.response.height,\n                bangalore_stock: data.data.response.bangalore_stock,\n                jodhpur_stock: data.data.response.jodhpur_stock,\n                weight: data.data.response.weight,\n                polish: data.data.response.polish,\n                polish_name: data.data.response.polish_name,\n                hinge: data.data.response.hinge,\n                hinge_qty: data.data.response.hinge_qty,\n                hinge_name: data.data.response.hinge_name,\n                knob: data.data.response.knob,\n                knob_qty: data.data.response.knob_qty,\n                knob_name: data.data.response.knob_name,\n                handle: data.data.response.handle,\n                handle_qty: data.data.response.handle_qty,\n                handle_name: data.data.response.handle_name,\n                door: data.data.response.door,\n                door_qty: data.data.response.door_qty,\n                door_name: data.data.response.door_name,\n                fitting: data.data.response.fitting,\n                fitting_name: data.data.response.fitting_name,\n                selling_points: data.data.response.selling_points,\n                dial_size: data.data.response.dial_size,\n                seating_size_width: data.data.response.seating_size_width,\n                seating_size_depth: data.data.response.seating_size_depth,\n                seating_size_height: data.data.response.seating_size_height,\n                weight_capacity: data.data.response.weight_capacity,\n                fabric: data.data.response.fabric,\n                fabric_qty: data.data.response.fabric_qty,\n                fabric_name: data.data.response.fabric_name,\n                wall_hanging: data.data.response.wall_hanging,\n                assembly_required: data.data.response.assembly_required,\n                assembly_part: data.data.response.assembly_part,\n                legs: data.data.response.legs,\n                mirror: data.data.response.mirror,\n                mirror_length: data.data.response.mirror_length,\n                mirror_width: data.data.response.mirror_width,\n                silver: data.data.response.silver,\n                silver_weight: data.data.response.silver_weight,\n                joints: data.data.response.joints,\n                upholstery: data.data.response.upholstery,\n                trolley: data.data.response.trolley,\n                trolley_material: data.data.response.trolley_material,\n                rotating_seats: data.data.response.rotating_seats,\n                eatable_oil_polish: data.data.response.eatable_oil_polish,\n                no_chemical: data.data.response.no_chemical,\n                straight_back: data.data.response.straight_back,\n                lean_back: data.data.response.lean_back,\n                weaving: data.data.response.weaving,\n                knife: data.data.response.knife,\n                not_suitable_for_Micro_Dish:\n                  data.data.response.not_suitable_for_Micro_Dish,\n                tilt_top: data.data.response.tilt_top,\n                inside_compartments: data.data.response.inside_compartments,\n                stackable: data.data.response.stackable,\n                MRP: data.data.response.MRP,\n                tax_rate: data.data.response.tax_rate,\n                selling_price: data.data.response.selling_price,\n                showroom_price: data.data.response.showroom_price,\n                discount_limit: data.data.response.discount_limit,\n                polish_time: data.data.response.polish_time,\n                manufacturing_time: data.data.response.manufacturing_time,\n                status: data.data.response.status,\n                returnDays: data.data.response.returnDays,\n                COD: data.data.response.COD,\n                returnable: data.data.response.returnable,\n                drawer: data.data.response.drawer,\n                drawer_count: data.data.response.drawer_count,\n                mobile_store: data.data.response.mobile_store,\n                online_store: data.data.response.online_store,\n                range: data.data.response.range,\n                back_style: data.data.response.back_style,\n                package_length: data.data.response.package_length,\n                package_height: data.data.response.package_height,\n                package_breadth: data.data.response.package_breadth,\n                quantity: data.data.response.quantity,\n                unit: data.data.response.unit,\n                assembly_level: data.data.response.assembly_level,\n                continue_selling: data.data.response.continue_selling,\n                wheel: data.data.response.wheel,\n                wheel_included: data.data.response.wheel_included,\n                wheel_qty: data.data.response.wheel_qty,\n                wheel_name: data.data.response.wheel_name,\n                ceramic_tiles: data.data.response.ceramic_tiles,\n                ceramic_tiles_qty: data.data.response.ceramic_tiles_qty,\n                ceramic_tiles_included:\n                  data.data.response.ceramic_tiles_included,\n                ceramic_tiles_name: data.data.response.ceramic_tiles_name,\n                ceramic_drawers: data.data.response.ceramic_drawers,\n                ceramic_drawers_included:\n                  data.data.response.ceramic_drawers_included,\n                ceramic_drawers_name: data.data.response.ceramic_drawers_name,\n                mattress: data.data.response.mattress,\n                mattress_length: data.data.response.mattress_length,\n                mattress_breadth: data.data.response.mattress_breadth,\n                plywood: data.data.response.plywood,\n                top_size_breadth: data.data.response.top_size_breadth,\n                top_size_length: data.data.response.top_size_length,\n                ceramic_drawers_qty: data.data.response.ceramic_drawers_qty,\n                variations: data.data.response.variations,\n                variant_label: data.data.response.variant_label,\n                parent_SKU: data.data.response.parent_SKU,\n                amazon_url: data.data.response.amazon_url,\n                flipkart_url: data.data.response.flipkart_url,\n                jiomart_url: data.data.response.jiomart_url,\n\n                action: data.data.response,\n              },\n            ],\n          }));\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleUpdateProduct = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", changeData.SKU);\n    FD.append(\"type\", \"Product\");\n    FD.append(\"operation\", \"updateProduct\");\n    FD.append(\"parentProduct\", changeData.SKU);\n    FD.append(\"variations\", changeData.variations);\n    FD.append(\"variant_label\", changeData.variant_label);\n    FD.append(\"amazon_url\", changeData.amazon_url);\n    FD.append(\"flipkart_url\", changeData.flipkart_url);\n    FD.append(\"jiomart_url\", changeData.jiomart_url);\n    FD.append(\"wood_weight\", changeData.wood_weight);\n    FD.append(\"metal_weight\", changeData.metal_weight);\n    FD.append(\"package_weight\", changeData.package_weight);\n\n    files.map((element) => {\n      if (element.validate) return FD.append(\"product_image\", element);\n    });\n    FD.append(\"savedImages\", JSON.stringify(changeData.savedImages));\n\n    FD.append(\"_id\", changeData._id);\n\n    FD.append(\"specification_image\", changeData.specification_image);\n    FD.append(\"featured_image\", changeData.featured_image);\n    FD.append(\"mannequin_image\", changeData.mannequin_image);\n\n    console.log(changeData.primary_material);\n\n    FD.append(\n      \"primary_material_name\",\n      JSON.stringify(changeData.primary_material)\n    );\n\n    FD.append(\"warehouse_name\", JSON.stringify(changeData.warehouse));\n    FD.append(\"polish_name\", JSON.stringify(changeData.polish));\n\n    category.map((item) => {\n      return (\n        item._id === changeData.category_name &&\n        FD.append(\"category_name\", item.category_name)\n      );\n    });\n\n    subCategory.map((item) => {\n      return (\n        item._id === changeData.sub_category_name &&\n        FD.append(\"sub_category_name\", item.sub_category_name)\n      );\n    });\n\n    catalog.hinge.map((item) => {\n      return (\n        item.SKU === changeData.hinge && FD.append(\"hinge_name\", item.title)\n      );\n    });\n    catalog.fitting.map((item) => {\n      return (\n        item.SKU === changeData.fitting && FD.append(\"fitting_name\", item.title)\n      );\n    });\n    catalog.knob.map((item) => {\n      return item.SKU === changeData.knob && FD.append(\"knob_name\", item.title);\n    });\n    catalog.door.map((item) => {\n      return item.SKU === changeData.door && FD.append(\"door_name\", item.title);\n    });\n    catalog.wheel.map((item) => {\n      return (\n        item.SKU === changeData.wheel && FD.append(\"wheel_name\", item.title)\n      );\n    });\n    catalog.handle.map((item) => {\n      return (\n        item.SKU === changeData.handle && FD.append(\"handle_name\", item.title)\n      );\n    });\n    catalog.ceramic_tiles.map((item) => {\n      return (\n        item.SKU === changeData.ceramic_tiles &&\n        FD.append(\"ceramic_tiles_name\", item.title)\n      );\n    });\n    catalog.ceramic_drawer.map((item) => {\n      return (\n        item.SKU === changeData.ceramic_drawer &&\n        FD.append(\"ceramic_drawer_name\", item.title)\n      );\n    });\n\n    catalog.fabric.map((item) => {\n      return (\n        item.fabric === changeData.fabric &&\n        FD.append(\"fabric_name\", item.title)\n      );\n    });\n\n    catalog.wheel.map((item) => {\n      return (\n        item.wheel === changeData.wheel && FD.append(\"wheel_name\", item.title)\n      );\n    });\n\n    FD.append(\"parentProduct\", changeData.SKU);\n    FD.append(\"returnDays\", changeData.returnable ? changeData.returnDays : 0);\n    FD.append(\"returnable\", changeData.returnable);\n    FD.append(\"COD\", changeData.COD);\n    FD.append(\"polish\", changeData.polish);\n    FD.append(\"hinge\", changeData.hinge);\n    FD.append(\"knob\", changeData.knob);\n    FD.append(\"handle\", changeData.handle);\n    FD.append(\"door\", changeData.door);\n    FD.append(\"fitting\", changeData.fitting);\n\n    FD.append(\"cradle_bed\", changeData.cradle_bed);\n    if (changeData.cradle_bed) {\n      FD.append(\"cradle_bed_depth\", changeData.cradle_bed_depth);\n      FD.append(\"cradle_bed_height\", changeData.cradle_bed_height);\n      FD.append(\"cradle_bed_width\", changeData.cradle_bed_width);\n    }\n\n    FD.append(\"wheel_included\", changeData.wheel_included);\n\n    if (changeData.wheel_included) {\n      FD.append(\"wheel_qty\", changeData.wheel_qty);\n      FD.append(\"wheel\", changeData.wheel);\n    }\n    if (changeData.handle !== \"None\") {\n      FD.append(\"handle_qty\", changeData.handle_qty);\n    }\n    if (changeData.hinge !== \"None\") {\n      FD.append(\"hinge_qty\", changeData.hinge_qty);\n    }\n    if (changeData.door !== \"None\") {\n      FD.append(\"door_qty\", changeData.door_qty);\n    }\n    if (changeData.knob !== \"None\") {\n      FD.append(\"knob_qty\", changeData.knob_qty);\n    }\n    if (changeData.fabric !== \"None\") {\n      FD.append(\"fabric_qty\", changeData.fabric_qty);\n    }\n\n    FD.append(\"ceramic_drawer_included\", changeData.ceramic_drawer_included);\n\n    if (changeData.ceramic_drawer_included) {\n      FD.append(\"ceramic_drawer\", changeData.ceramic_drawer);\n      FD.append(\"ceramic_drawer_qty\", changeData.ceramic_drawer_qty);\n    }\n\n    FD.append(\"ceramic_tiles_included\", changeData.ceramic_tiles_included);\n\n    if (changeData.ceramic_tiles_included) {\n      FD.append(\"ceramic_tiles\", changeData.ceramic_tiles);\n      FD.append(\"ceramic_tiles_qty\", changeData.ceramic_tiles_qty);\n    }\n\n    FD.append(\"mattress\", changeData.mattress);\n    FD.append(\"mattress_length\", changeData.mattress_length);\n    FD.append(\"mattress_breadth\", changeData.mattress_breadth);\n    FD.append(\"plywood\", changeData.plywood);\n\n    FD.append(\"range\", changeData.range);\n    FD.append(\"category_id\", changeData.category_name);\n    FD.append(\"back_style\", changeData.back_style);\n    FD.append(\"sub_category_id\", changeData.sub_category_name);\n    FD.append(\"polish_time\", changeData.polish_time);\n    FD.append(\"manufacturing_time\", changeData.manufacturing_time);\n    FD.append(\"product_title\", changeData.product_title);\n    FD.append(\"product_description\", changeData.product_description);\n    FD.append(\"selling_points\", JSON.stringify(changeData.selling_points));\n    FD.append(\"MRP\", changeData.MRP ? changeData.MRP : 0);\n    FD.append(\n      \"showroom_price\",\n      changeData.showroom_price ? changeData.showroom_price : 0\n    );\n    FD.append(\"seo_title\", changeData.seo_title);\n    FD.append(\"seo_description\", changeData.seo_description);\n    FD.append(\"seo_keyword\", changeData.seo_keyword);\n    FD.append(\"discount_limit\", changeData.discount_limit || 0);\n    FD.append(\"selling_price\", changeData.selling_price);\n    FD.append(\"primary_material\", changeData.primary_material);\n    FD.append(\"warehouse\", changeData.warehouse);\n    // FD.append(\"polish\", changeData.polish);\n    FD.append(\"fabric\", changeData.fabric);\n    FD.append(\"CVW\", changeData.CVW);\n\n    FD.append(\"drawer\", changeData.drawer);\n\n    FD.append(\"unit\", changeData.unit);\n    FD.append(\"quantity\", changeData.quantity ? changeData.quantity : 1);\n\n    if (changeData.drawer !== undefined || changeData.drawer !== \"none\")\n      FD.append(\n        \"drawer_count\",\n        changeData.drawer_count ? changeData.drawer_count : 0\n      );\n\n    //  // //console.log(secMaterial)\n    if (changeData.secondary_material_weight !== undefined)\n      FD.append(\n        \"secondary_material_weight\",\n        changeData.secondary_material_weight\n      );\n    FD.append(\n      \"length_main\",\n      changeData.length_main ? changeData.length_main : 0\n    );\n    FD.append(\"assembly_level\", changeData.assembly_level);\n\n    FD.append(\n      \"package_length\",\n      changeData.package_length ? changeData.package_length : 0\n    );\n    FD.append(\n      \"package_height\",\n      changeData.package_height ? changeData.package_height : 0\n    );\n    FD.append(\n      \"package_breadth\",\n      changeData.package_breadth ? changeData.package_breadth : 0\n    );\n\n    FD.append(\"breadth\", changeData.breadth ? changeData.breadth : 0);\n    FD.append(\"height\", changeData.height ? changeData.height : 0);\n    FD.append(\"weight\", changeData.weight ? changeData.weight : 0);\n\n    FD.append(\"top_size_length\", changeData.top_size_length);\n    FD.append(\"top_size_breadth\", changeData.top_size_breadth);\n    FD.append(\"dial_size\", changeData.dial_size);\n    FD.append(\n      \"seating_size_width\",\n      changeData.seating_size_width ? changeData.seating_size_width : 0\n    );\n    FD.append(\n      \"seating_size_depth\",\n      changeData.seating_size_depth ? changeData.seating_size_depth : 0\n    );\n    FD.append(\n      \"seating_size_height\",\n      changeData.seating_size_height ? changeData.seating_size_height : 0\n    );\n    FD.append(\"weight_capacity\", changeData.weight_capacity);\n    FD.append(\"assembly_required\", changeData.assembly_required);\n\n    if (changeData.jodhpur_stock && changeData.jodhpur_stock > 0)\n      FD.append(\"jodhpur_stock\", changeData.jodhpur_stock);\n\n    if (changeData.bangalore_stock && changeData.bangalore_stock > 0)\n      FD.append(\"bangalore_stock\", changeData.bangalore_stock);\n\n    if (changeData.assembly_required === \"shipping\")\n      FD.append(\"assembly_part\", changeData.assembly_part);\n    if (changeData.assembly_required === \"yes\")\n      FD.append(\"legs\", changeData.legs);\n\n    if (changeData.silver === \"yes\")\n      FD.append(\n        \"silver_weight\",\n        changeData.silver_weight ? changeData.silver_weight : 0\n      );\n\n    if (changeData.trolley === \"yes\")\n      FD.append(\"trolley_material\", changeData.trolley_material);\n\n    if (changeData.upholstery === \"Yes\") FD.append(\"fabric\", changeData.fabric);\n\n    FD.append(\"mirror\", changeData.mirror);\n\n    if (changeData.mirror === \"yes\") {\n      FD.append(\n        \"mirror_length\",\n        changeData.mirror_length ? changeData.mirror_length : 0\n      );\n      FD.append(\n        \"mirror_width\",\n        changeData.mirror_width ? changeData.mirror_width : 0\n      );\n    }\n    FD.append(\"joints\", changeData.joints ? changeData.joints : \"\");\n    FD.append(\n      \"upholstery\",\n      changeData.upholstery ? changeData.upholstery : \"no\"\n    );\n    FD.append(\"trolley\", changeData.trolley ? changeData.trolley : \"no\");\n    FD.append(\"silver\", changeData.silver ? changeData.silver : \"no\");\n    FD.append(\n      \"rotating_seats\",\n      changeData.rotating_seats ? changeData.rotating_seats : false\n    );\n    FD.append(\n      \"eatable_oil_polish\",\n      changeData.eatable_oil_polish ? changeData.eatable_oil_polish : false\n    );\n    FD.append(\n      \"no_chemical\",\n      changeData.no_chemical ? changeData.no_chemical : false\n    );\n    FD.append(\"weaving\", changeData.weaving ? changeData.weaving : false);\n    FD.append(\"knife\", changeData.knife ? changeData.knife : false);\n    FD.append(\n      \"mobile_store\",\n      changeData.mobile_store ? changeData.mobile_store : true\n    );\n    FD.append(\n      \"online_store\",\n      changeData.online_store ? changeData.online_store : true\n    );\n    FD.append(\n      \"continue_selling\",\n      changeData.continue_selling ? changeData.continue_selling : true\n    );\n\n    FD.append(\n      \"wall_hanging\",\n      changeData.wall_hanging ? changeData.wall_hanging : false\n    );\n\n    FD.append(\n      \"not_suitable_for_Micro_Dish\",\n      changeData.not_suitable_for_Micro_Dish\n        ? changeData.not_suitable_for_Micro_Dish\n        : false\n    );\n\n    FD.append(\"tilt_top\", changeData.tilt_top ? changeData.tilt_top : false);\n    FD.append(\n      \"inside_compartments\",\n      changeData.inside_compartments ? changeData.inside_compartments : false\n    );\n    FD.append(\"stackable\", changeData.stackable ? changeData.stackable : false);\n    FD.append(\"tax_rate\", changeData.tax_rate);\n\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleMergeProduct = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    files.map((element) => {\n      if (element.validate) return FD.append(\"product_image\", element);\n    });\n\n    FD.append(\"specification_image\", changeData.specification_image || \"\");\n    FD.append(\"featured_image\", changeData.featured_image || \"\");\n    FD.append(\"mannequin_image\", changeData.mannequin_image || \"\");\n\n    category.map((item) => {\n      return (\n        item._id === changeData.category_name &&\n        FD.append(\"category_name\", item.category_name)\n      );\n    });\n\n    subCategory.map((item) => {\n      return (\n        item._id === changeData.sub_category_name &&\n        FD.append(\"sub_category_name\", item.sub_category_name)\n      );\n    });\n\n    let Product_SKU = [];\n\n    if (changeData.product_articles.length > 0)\n      Product_SKU = changeData.product_articles.map((SKU) => ({\n        SKU: SKU,\n        qty: changeData[SKU] || 1,\n      }));\n\n    FD.append(\"product_articles\", JSON.stringify(Product_SKU));\n\n    FD.append(\"product_description\", changeData.product_description);\n    FD.append(\"seo_title\", changeData.seo_title);\n    FD.append(\"seo_description\", changeData.seo_description);\n    FD.append(\"seo_keyword\", changeData.seo_keyword);\n    FD.append(\"selling_points\", JSON.stringify(changeData.selling_points));\n\n    if (changeData.jodhpur_stock && changeData.jodhpur_stock > 0)\n      FD.append(\"jodhpur_stock\", changeData.jodhpur_stock);\n\n    if (changeData.bangalore_stock && changeData.bangalore_stock > 0)\n      FD.append(\"bangalore_stock\", changeData.bangalore_stock);\n\n    FD.append(\"category_id\", changeData.category_name);\n    FD.append(\"sub_category_id\", changeData.sub_category_name);\n    FD.append(\"product_title\", changeData.product_title);\n    FD.append(\"COD\", changeData.COD);\n    FD.append(\"returnDays\", changeData.returnable ? changeData.returnDays : 0);\n    FD.append(\"returnable\", changeData.returnable);\n    FD.append(\"M\", SKU);\n    FD.append(\"polish_time\", changeData.polish_time);\n    FD.append(\"manufacturing_time\", changeData.manufacturing_time);\n    FD.append(\n      \"package_length\",\n      changeData.package_length ? changeData.package_length : 0\n    );\n    FD.append(\n      \"package_height\",\n      changeData.package_height ? changeData.package_height : 0\n    );\n    FD.append(\n      \"package_breadth\",\n      changeData.package_breadth ? changeData.package_breadth : 0\n    );\n    FD.append(\"warehouse\", changeData.warehouse);\n\n    FD.append(\n      \"showroom_price\",\n      changeData.showroom_price ? changeData.showroom_price : 0\n    );\n\n    FD.append(\"discount_limit\", changeData.discount_limit);\n    FD.append(\"selling_price\", changeData.selling_price);\n\n    FD.append(\n      \"mobile_store\",\n      changeData.mobile_store ? changeData.mobile_store : true\n    );\n    FD.append(\n      \"online_store\",\n      changeData.online_store ? changeData.online_store : true\n    );\n    FD.append(\n      \"continue_selling\",\n      changeData.continue_selling ? changeData.continue_selling : true\n    );\n\n    const res = addMergeProduct(FD);\n\n    res\n      .then((data) => {\n        if (data.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          form.setRow((old) => ({\n            ...old,\n            total: old.total + 1,\n            data: [\n              ...form.row,\n              {\n                id: form.row.length + 1,\n                M: data.data.response.M,\n                product_articles: data.data.response.product_articles,\n                product_title: data.data.response.product_title,\n                category_name: data.data.response.category_name,\n                sub_category_name: data.data.response.category_name,\n                category_id: data.data.response.category_id,\n                sub_category_id: data.data.response.category_id,\n                warehouse: data.data.response.warehouse,\n                warehouse_name: data.data.response.warehouse_name,\n                bangalore_stock: data.data.response.bangalore_stock,\n                jodhpur_stock: data.data.response.jodhpur_stock,\n                product_description: data.data.response.product_description,\n                product_image: data.data.response.product_image,\n                featured_image: data.data.response.featured_image,\n                mannequin_image: data.data.response.mannequin_image,\n                specification_image: data.data.response.specification_image,\n                selling_points: data.data.response.selling_points,\n                selling_price: data.data.response.selling_price,\n                showroom_price: data.data.response.showroom_price,\n                discount_limit: data.data.response.discount_limit,\n                mobile_store: data.data.response.mobile_store,\n                online_store: data.data.response.online_store,\n                continue_selling: data.data.response.continue_selling,\n                COD: data.data.response.COD,\n                returnDays: data.data.response.returnDays,\n                returnable: data.data.response.returnable,\n                polish_time: data.data.response.polish_time,\n                manufacturing_time: data.data.response.manufacturing_time,\n                package_length: data.data.response.package_length,\n                package_height: data.data.response.package_height,\n                package_breadth: data.data.response.package_breadth,\n                seo_title: data.data.response.seo_title,\n                seo_description: data.data.response.seo_description,\n                seo_keyword: data.data.response.seo_keyword,\n                action: data.data.response._id,\n              },\n            ],\n          }));\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n  const handleUpdateMergeProduct = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"_id\", form.payload.row.action);\n\n    files.map((element) => {\n      if (element.validate) return FD.append(\"product_image\", element);\n    });\n\n    FD.append(\"specification_image\", changeData.specification_image || \"\");\n    FD.append(\"featured_image\", changeData.featured_image || \"\");\n    FD.append(\"mannequin_image\", changeData.mannequin_image || \"\");\n\n    category.map((item) => {\n      return (\n        item._id === changeData.category_name &&\n        FD.append(\"category_name\", item.category_name)\n      );\n    });\n\n    subCategory.map((item) => {\n      return (\n        item._id === changeData.sub_category_name &&\n        FD.append(\"sub_category_name\", item.sub_category_name)\n      );\n    });\n\n    let Product_SKU = [];\n\n    if (changeData.product_articles.length > 0)\n      Product_SKU = changeData.product_articles.map((SKU) => ({\n        SKU: SKU,\n        qty: changeData[SKU] || 0,\n      }));\n\n    FD.append(\"product_articles\", JSON.stringify(Product_SKU));\n\n    FD.append(\"product_description\", changeData.product_description);\n    FD.append(\"savedImages\", JSON.stringify(changeData.savedImages));\n    FD.append(\"seo_title\", changeData.seo_title);\n    FD.append(\"seo_description\", changeData.seo_description);\n    FD.append(\"seo_keyword\", changeData.seo_keyword);\n    FD.append(\"selling_points\", JSON.stringify(changeData.selling_points));\n\n    if (changeData.jodhpur_stock && changeData.jodhpur_stock > 0)\n      FD.append(\"jodhpur_stock\", changeData.jodhpur_stock);\n\n    if (changeData.bangalore_stock && changeData.bangalore_stock > 0)\n      FD.append(\"bangalore_stock\", changeData.bangalore_stock);\n\n    FD.append(\"category_id\", changeData.category_name);\n    FD.append(\"sub_category_id\", changeData.sub_category_name);\n    FD.append(\"product_title\", changeData.product_title);\n    FD.append(\"COD\", changeData.COD);\n    FD.append(\"returnDays\", changeData.returnable ? changeData.returnDays : 0);\n    FD.append(\"returnable\", changeData.returnable);\n\n    FD.append(\"polish_time\", changeData.polish_time);\n    FD.append(\"manufacturing_time\", changeData.manufacturing_time);\n    FD.append(\n      \"package_length\",\n      changeData.package_length ? changeData.package_length : 0\n    );\n    FD.append(\n      \"package_height\",\n      changeData.package_height ? changeData.package_height : 0\n    );\n    FD.append(\n      \"package_breadth\",\n      changeData.package_breadth ? changeData.package_breadth : 0\n    );\n    FD.append(\"warehouse\", changeData.warehouse);\n\n    FD.append(\n      \"showroom_price\",\n      changeData.showroom_price ? changeData.showroom_price : 0\n    );\n\n    FD.append(\"discount_limit\", changeData.discount_limit);\n    FD.append(\"selling_price\", changeData.selling_price);\n\n    FD.append(\n      \"mobile_store\",\n      changeData.mobile_store ? changeData.mobile_store : true\n    );\n    FD.append(\n      \"online_store\",\n      changeData.online_store ? changeData.online_store : true\n    );\n    FD.append(\n      \"continue_selling\",\n      changeData.continue_selling ? changeData.continue_selling : true\n    );\n\n    const res = updateMergeProduct(FD);\n\n    res\n      .then((data) => {\n        if (data.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          console.log(data.data.updates.product_articles);\n          form.setRow((old) => ({\n            ...old,\n            data: form.row.map((set) => {\n              if (set.action === form.payload.row.action) {\n                set.product_title = changeData.product_title;\n                set.product_articles = data.data.updates.product_articles;\n                set.category_name = data.data.updates.category_name;\n                set.category_id = data.data.updates.category_id;\n                set.sub_category_name = data.data.updates.sub_category_name;\n                set.sub_category_id = data.data.updates.sub_category_id;\n                set.featured_image = data.data.updates.featured_image;\n                set.mannequin_image = data.data.updates.mannequin_image;\n                set.specification_image = data.data.updates.specification_image;\n                set.warehouse = data.data.updates.warehouse;\n                set.warehouse_name = data.data.updates.warehouse_name;\n                set.bangalore_stock = data.data.updates.bangalore_stock;\n                set.jodhpur_stock = data.data.updates.jodhpur_stock;\n                set.product_description = data.data.updates.product_description;\n                set.product_image = data.data.updates.product_image;\n                set.selling_points = data.data.updates.selling_points;\n                set.selling_price = data.data.updates.selling_price;\n                set.showroom_price = data.data.updates.showroom_price;\n                set.discount_limit = data.data.updates.discount_limit;\n                set.mobile_store = data.data.updates.mobile_store;\n                set.online_store = data.data.updates.online_store;\n                set.continue_selling = data.data.updates.continue_selling;\n                set.COD = data.data.updates.COD;\n                set.returnDays = data.data.updates.returnDays;\n                set.returnable = data.data.updates.returnable;\n                set.polish_time = data.data.updates.polish_time;\n                set.manufacturing_time = data.data.updates.manufacturing_time;\n                set.package_length = data.data.updates.package_length;\n                set.package_height = data.data.updates.package_height;\n                set.package_breadth = data.data.updates.package_breadth;\n                set.seo_title = data.data.updates.seo_title;\n                set.seo_description = data.data.updates.seo_description;\n                set.seo_keyword = data.data.updates.seo_keyword;\n                return set;\n              } else return set;\n            }),\n          }));\n\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handlePrimaryMaterial = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", \"Not Assigned \" + SKU);\n    FD.append(\"type\", \"Matrial\");\n    FD.append(\"operation\", \"insertMaterial\");\n\n    Image.map((element) => {\n      return FD.append(\"primaryMaterial_image\", element);\n    });\n    FD.append(\n      \"primaryMaterial_description\",\n      e.target.primaryMaterial_description.value\n    );\n\n    FD.append(\"primaryMaterial_name\", e.target.primaryMaterial_name.value);\n    FD.append(\n      \"primaryMaterial_status\",\n      e.target.primaryMaterial_status.checked\n    );\n    FD.append(\"customizations\", e.target.customizations.checked);\n\n    // // //console.log(acceptedFiles[0].name, e.target.category_name.value)\n\n    // const res = addPrimaryMaterial(FD);\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          // form.setRow([\n          //   ...form.row,\n          //   {\n          //     id: form.row.length + 1,\n          //     primaryMaterial_name: data.data.response.primaryMaterial_name,\n          //     primaryMaterial_description:\n          //       data.data.response.primaryMaterial_description,\n          //     primaryMaterial_image: data.data.response.primaryMaterial_image,\n          //     primaryMaterial_status: data.data.response.primaryMaterial_status,\n          //     action: data.data.response,\n          //   },\n          // ]);\n          // form.setCheck((old) => [\n          //   ...old,\n          //   data.data.response.primaryMaterial_status,\n          // ]);\n          setImages([]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleUpdatePrimaryMaterial = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", form.payload.row.action);\n    FD.append(\"type\", \"Material\");\n    FD.append(\"operation\", \"updateMaterial\");\n\n    FD.append(\"_id\", form.payload.row.action);\n\n    Image.map((element) => {\n      return FD.append(\"primaryMaterial_image\", element);\n    });\n    FD.append(\n      \"primaryMaterial_description\",\n      e.target.primaryMaterial_description.value\n    );\n\n    e.target.primaryMaterial_name.value !== \"\" &&\n      FD.append(\"primaryMaterial_name\", e.target.primaryMaterial_name.value);\n\n    FD.append(\"customizations\", e.target.customizations.checked);\n\n    // const res = editPrimaryMaterial(FD);\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          // form.setRow(\n          //   form.row.map((set) => {\n          //     if (set.action === form.payload.row.action) {\n          //       set.primaryMaterial_description =\n          //         e.target.primaryMaterial_description.value;\n          //       set.primaryMaterial_name = e.target.primaryMaterial_name.value;\n          //       set.customizations = changeData.customizations;\n          //       set.primaryMaterial_image =\n          //         Image[0] !== undefined\n          //           ? `${imageLink}${Image[0].path}`\n          //           : changeData.primaryMaterial_image;\n          //     }\n          //     return set;\n          //   })\n          // );\n          setImages([]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleSupplier = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"supplier_name\", e.target.supplier_name.value);\n    FD.append(\"mobile\", e.target.mobile.value);\n    FD.append(\"gst_no\", e.target.gst_no.value);\n    FD.append(\"alt_mobile\", e.target.alt_mobile.value);\n    FD.append(\"specialization\", e.target.specialization.value);\n    FD.append(\"SID\", e.target.SID.value);\n    FD.append(\"address\", e.target.address.value);\n\n    const res = addSupplier(FD);\n\n    res\n      .then((data) => {\n        //console.log(data.status);\n\n        if (data.status === 200) {\n          form.setRow([\n            ...form.row,\n            {\n              id: form.row.length + 1,\n              supplier_name: data.data.response.supplier_name,\n              mobile: data.data.response.mobile,\n              gst_no: data.data.response.gst_no,\n              alt_mobile: data.data.response.alt_mobile,\n              specialization: data.data.response.specialization,\n              SID: data.data.response.SID,\n              address: data.data.response.address,\n              action: data.data.response._id,\n            },\n          ]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        //console.log(err);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleUpdateSupplier = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n    FD.append(\"_id\", form.payload.row.action);\n\n    FD.append(\"supplier_name\", e.target.supplier_name.value);\n    FD.append(\"mobile\", e.target.mobile.value);\n    FD.append(\"gst_no\", e.target.gst_no.value);\n    FD.append(\"alt_mobile\", e.target.alt_mobile.value);\n    FD.append(\"specialization\", e.target.specialization.value);\n    FD.append(\"SID\", e.target.SID.value);\n    FD.append(\"address\", e.target.address.value);\n\n    const res = editSupplier(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          form.setRow(\n            form.row.map((set) => {\n              if (set.action === form.payload.row.action) {\n                set.supplier_name = e.target.supplier_name.value;\n                set.mobile = e.target.mobile.value;\n                set.gst_no = e.target.gst_no.value;\n                set.alt_mobile = e.target.alt_mobile.value;\n                set.specialization = e.target.specialization.value;\n                set.SID = e.target.SID.value;\n                set.address = e.target.address.value;\n              }\n              return set;\n            })\n          );\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleApplyDiscount = async (e) => {\n    e.preventDefault();\n\n    try {\n      const FD = new FormData();\n\n      console.log(changeData.category_discount);\n      // merge the discount with category name\n\n      let discount_array = [];\n\n      if (changeData.category_discount.length > 0)\n        discount_array = changeData.category_discount.map((name) => ({\n          name: name,\n          discount: changeData[name] || 0,\n        }));\n\n      FD.append(\"discount_array\", JSON.stringify(discount_array));\n\n      const res = await applyDiscount(FD);\n\n      if (res.status === 203) {\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: res.data.message,\n          })\n        );\n      } else {\n        setProductSKU({\n          P_SKU: [],\n          H_SKU: [],\n          supplier: [],\n          category: [],\n        });\n\n        form.setRow(\n          form.row.map((set) => {\n            let response = changeData.category_discount.filter((name) => {\n              return name === set.category_name;\n            });\n            console.log(response);\n            if (response.length > 0)\n              set.discount_limit = changeData[set.category_name];\n            return set;\n          })\n        );\n        handleClose();\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"success\",\n            message: res.data.message,\n          })\n        );\n      }\n    } catch (err) {\n      console.log(err);\n      dispatch(\n        setAlert({\n          open: true,\n          variant: \"error\",\n          message: \"Something Went Wrong !!!\",\n        })\n      );\n    }\n  };\n  const handleInward = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    // merge the Quantities with product SKU number\n\n    let Product_SKU = [];\n    let Hardware_SKU = [];\n\n    if (changeData.product_articles.length > 0)\n      Product_SKU = changeData.product_articles.map((SKU) => ({\n        [SKU]: changeData[SKU] || 0,\n      }));\n\n    if (changeData.hardware_articles.length > 0)\n      Hardware_SKU = changeData.hardware_articles.map((SKU) => ({\n        [SKU]: changeData[SKU] || 0,\n      }));\n\n    FD.append(\"product_articles\", JSON.stringify(Product_SKU));\n    FD.append(\"hardware_articles\", JSON.stringify(Hardware_SKU));\n    FD.append(\"challan_no\", e.target.challan_no.value);\n    FD.append(\"warehouse\", changeData.warehouse);\n    FD.append(\"supplier\", changeData.supplier);\n    FD.append(\"vehicle_no\", e.target.vehicle_no.value.toUpperCase());\n    FD.append(\"driver_name\", e.target.driver_name.value);\n    FD.append(\"driver_no\", e.target.driver_no.value);\n    FD.append(\"purpose\", changeData.purpose);\n\n    const res = addInward(FD);\n\n    res\n      .then((data) => {\n        if (data.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          setProductSKU({\n            P_SKU: [],\n            H_SKU: [],\n            supplier: [],\n            category: [],\n          });\n          form.setRow([\n            ...form.row,\n            {\n              id: form.row.length + 1,\n              inward_id: data.data.response.inward_id,\n              order_no: data.data.response.order_no,\n              driver_name: data.data.response.driver_name,\n              driver_no: data.data.response.driver_no,\n              vehicle_no: data.data.response.vehicle_no,\n              supplier: data.data.response.supplier,\n              product_articles: data.data.response.product_articles,\n              hardware_articles: data.data.response.hardware_articles,\n              warehouse: data.data.response.warehouse,\n              date: data.data.response.date,\n            },\n          ]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n  const handleOutward = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    // merge the Quantities with product SKU number\n    console.log(changeData);\n\n    let Product_SKU = [];\n    let Hardware_SKU = [];\n\n    if (changeData.product_articles.length > 0)\n      Product_SKU = changeData.product_articles.map((SKU) => {\n        let cred = SKU.split(\"Stock :\");\n        return { [cred[0].trim()]: changeData[SKU] || parseInt(cred[1]) };\n      });\n\n    if (changeData.hardware_articles.length > 0)\n      Hardware_SKU = changeData.hardware_articles.map((SKU) => {\n        let cred = SKU.split(\"Stock :\");\n        return { [cred[0].trim()]: changeData[SKU] || parseInt(cred[1]) };\n      });\n\n    FD.append(\"product_articles\", JSON.stringify(Product_SKU));\n    FD.append(\"hardware_articles\", JSON.stringify(Hardware_SKU));\n    FD.append(\"warehouse\", changeData.warehouse);\n    FD.append(\"supplier\", changeData.supplier);\n    FD.append(\"purpose\", changeData.purpose);\n    FD.append(\"reason\", e.target.reason.value);\n    FD.append(\"challan_no\", e.target.challan_no.value);\n    FD.append(\"vehicle_no\", e.target.vehicle_no.value.toUpperCase());\n    FD.append(\"driver_name\", e.target.driver_name.value);\n    FD.append(\"driver_no\", e.target.driver_no.value);\n\n    const res = addOutward(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          setProductSKU({\n            P_SKU: [],\n            H_SKU: [],\n            supplier: [],\n          });\n          form.setRow([\n            ...form.row,\n            {\n              id: form.row.length + 1,\n              outward_id: data.data.response.outward_id,\n              order_no: data.data.response.order_no,\n              driver_name: data.data.response.driver_name,\n              driver_no: data.data.response.driver_no,\n              vehicle_no: data.data.response.vehicle_no,\n              supplier: data.data.response.supplier,\n              product_articles: data.data.response.product_articles,\n              hardware_articles: data.data.response.hardware_articles,\n              warehouse: data.data.response.warehouse,\n              purpose: data.data.response.purpose,\n              reason: data.data.response.reason,\n              date: data.data.response.date,\n            },\n          ]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n  const handleTransfer = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    // merge the Quantities with product SKU number\n\n    let Product_SKU = [];\n    let Hardware_SKU = [];\n\n    if (changeData.product_articles.length > 0)\n      Product_SKU = changeData.product_articles.map((SKU) => {\n        let cred = SKU.split(\"Stock :\");\n        return { [cred[0].trim()]: changeData[SKU] || parseInt(cred[1]) };\n      });\n    if (changeData.hardware_articles.length > 0)\n      Hardware_SKU = changeData.hardware_articles.map((SKU) => {\n        let cred = SKU.split(\"Stock :\");\n        return { [cred[0].trim()]: changeData[SKU] || parseInt(cred[1]) };\n      });\n\n    FD.append(\"product_articles\", JSON.stringify(Product_SKU));\n    FD.append(\"hardware_articles\", JSON.stringify(Hardware_SKU));\n    FD.append(\"purpose\", changeData.purpose);\n    FD.append(\"reason\", e.target.reason.value);\n    FD.append(\"warehouse\", changeData.warehouse);\n    FD.append(\"warehouse_to\", changeData.warehouse_to);\n\n    const res = addTransfer(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          setProductSKU({\n            P_SKU: [],\n            H_SKU: [],\n            supplier: [],\n          });\n          form.setRow([\n            ...form.row,\n            {\n              id: form.row.length + 1,\n              transfer_id: data.data.response.transfer_id,\n              order_no: data.data.response.order_no,\n              warehouse: data.data.response.warehouse,\n              product_articles: data.data.response.product_articles,\n              hardware_articles: data.data.response.hardware_articles,\n              quantity: data.data.response.quantity,\n              purpose: data.data.response.purpose,\n              reason: data.data.response.reason,\n              date: data.data.response.date,\n            },\n          ]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleSubCategories = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", changeData._id);\n    FD.append(\"type\", \"Sub Category\");\n    FD.append(\"operation\", \"insertSubCategory\");\n\n    category.map((item) => {\n      item._id === e.target.category_id.value &&\n        FD.append(\"category_name\", item.category_name);\n    });\n\n    FD.append(\"sub_category_image\", Image[0]);\n    FD.append(\"category_id\", e.target.category_id.value);\n    FD.append(\"sub_category_name\", e.target.sub_category_name.value);\n    FD.append(\"sub_category_status\", e.target.sub_category_status.checked);\n    FD.append(\"seo_title\", changeData.seo_title);\n    FD.append(\"seo_description\", changeData.seo_description);\n    FD.append(\"seo_keyword\", changeData.seo_keyword);\n    FD.append(\"product_description\", changeData.product_description);\n\n    // // //console.log(acceptedFiles[0].name, e.target.category_name.value)\n\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          // form.setRow([\n          //   ...form.row,\n          //   {\n          //     id: form.row.length + 1,\n          //     category_id: data.data.response.category_id,\n          //     category_name: data.data.response.category_name,\n          //     sub_category_image: data.data.response.sub_category_image,\n          //     sub_category_name: data.data.response.sub_category_name,\n          //     sub_category_status: data.data.response.sub_category_status,\n          //     seo_title: data.data.response.seo_title,\n          //     seo_description: data.data.response.seo_description,\n          //     seo_keyword: data.data.response.seo_keyword,\n          //     product_description: data.data.response.product_description,\n          //     action: data.data.response,\n          //   },\n          // ]);\n          // form.setCheck((old) => [\n          //   ...old,\n          //   data.data.response.sub_category_status,\n          // ]);\n          setImages([]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n  const handleUpdateSubCategories = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n    let catName = \"\";\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", changeData._id);\n    FD.append(\"type\", \"Sub Category\");\n    FD.append(\"operation\", \"updateSubCategory\");\n\n    // //console.log(form.payload);\n    Image[0] !== undefined && FD.append(\"sub_category_image\", Image[0]);\n\n    FD.append(\"_id\", changeData._id);\n\n    category.map((item) => {\n      if (item._id === e.target.category_id.value) catName = item.category_name;\n      return (\n        item._id === e.target.category_id.value &&\n        FD.append(\"category_name\", catName)\n      );\n    });\n\n    e.target.category_id.value !== \"\" &&\n      FD.append(\"category_id\", e.target.category_id.value);\n    e.target.sub_category_name.value !== \"\" &&\n      FD.append(\"sub_category_name\", e.target.sub_category_name.value);\n\n    FD.append(\"seo_title\", changeData.seo_title);\n    FD.append(\"seo_description\", changeData.seo_description);\n    FD.append(\"seo_keyword\", changeData.seo_keyword);\n    FD.append(\"product_description\", changeData.product_description);\n\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          // form.setRow(\n          //   form.row.map((set) => {\n          //     if (set.action === form.payload.row.action) {\n          //       set.sub_category_name = e.target.sub_category_name.value;\n          //       set.category_name = catName;\n          //       Image[0] !== undefined\n          //         ? (set.sub_category_image = `https://admin.woodshala.in/upload/${Image[0].path}`)\n          //         : console.log();\n          //       set.seo_title = changeData.seo_title;\n          //       set.seo_description = changeData.seo_description;\n          //       set.seo_keyword = changeData.seo_keyword;\n          //       set.product_description = changeData.product_description;\n          //     }\n          //     return set;\n          //   })\n          // );\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const [url, setUrl] = useState(\"\");\n\n  const handleUpload = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    Image.map((element) => {\n      return FD.append(\"banner_image\", element);\n    });\n\n    const res = uploadImage(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          setImages([]);\n          setUrl(data.data.url);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleAddBlog = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", \"Not Assigned \" + SKU);\n    FD.append(\"type\", \"Blog\");\n    FD.append(\"operation\", \"insertBlog\");\n\n    featured.map((element) => {\n      return FD.append(\"banner_image\", element);\n    });\n\n    FD.append(\"description\", editorRef.current.getContent());\n    FD.append(\"title\", e.target.title.value);\n    FD.append(\"card_description\", e.target.card_description.value);\n    FD.append(\"seo_title\", e.target.seo_title.value);\n    FD.append(\"seo_description\", e.target.seo_description.value);\n    // const res = createBlog(FD);\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          // form.setRow([\n          //   ...form.row,\n          //   {\n          //     id: form.row.length + 1,\n          //     uuid: data.data.response.uuid,\n          //     seo_title: data.data.response.seo_title,\n          //     seo_description: data.data.response.seo_description,\n          //     title: data.data.response.title,\n          //     card_image: data.data.response.card_image,\n          //     card_description: data.data.response.card_description,\n          //     description: data.data.response.description,\n          //     action: data.data.response,\n          //   },\n          // ]);\n          setImages([]);\n          setUrl(data.data.url);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleUpdateBlog = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", form.payload.value._id);\n    FD.append(\"type\", \"Blog\");\n    FD.append(\"operation\", \"updateBlog\");\n\n    featured.map((element) => {\n      return FD.append(\"banner_image\", element);\n    });\n\n    FD.append(\"_id\", form.payload.value._id);\n\n    FD.append(\"description\", editorRef.current.getContent());\n    FD.append(\"title\", e.target.title.value);\n    FD.append(\"seo_title\", e.target.seo_title.value);\n    FD.append(\"seo_description\", e.target.seo_description.value);\n    FD.append(\"card_description\", e.target.card_description.value);\n\n    // const res = updateBlog(FD);\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          // form.setRow(\n          //   form.row.map((set) => {\n          //     if (set.action === form.payload.row.action) {\n          //       set.seo_title = e.target.seo_title.value;\n          //       set.seo_description = e.target.seo_description.value;\n          //       set.title = e.target.title.value;\n          //       set.card_image =\n          //         featured[0] !== undefined\n          //           ? `${imageLink}${Image[0].path}`\n          //           : changeData.card_image;\n          //       set.card_description = e.target.card_description.value;\n          //       set.description =\n          //         editorRef.current.getContent() || set.description;\n          //     }\n          //     return set;\n          //   })\n          // );\n          setImages([]);\n          setUrl(data.data.url);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleOrder = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"products\", changeData.product_array);\n    FD.append(\"OID\", SKU);\n    FD.append(\"status\", \"processing\");\n\n    if (changeData.searchCustomer === \"\") {\n      FD.append(\"customer_name\", e.target.customer_name.value);\n      FD.append(\"customer_email\", e.target.customer_email.value);\n      FD.append(\"customer_mobile\", e.target.customer_mobile.value);\n      FD.append(\"shipping\", e.target.shipping.value);\n      FD.append(\"city\", e.target.city.value);\n      FD.append(\"state\", e.target.state.value);\n    } else FD.append(\"searchCustomer\", changeData.searchCustomer);\n\n    FD.append(\"paid_amount\", e.target.paid_amount.value);\n    FD.append(\"total_amount\", e.target.total_amount.value);\n\n    const res = addOrder(FD);\n\n    res\n      .then((data) => {\n        if (data.status !== 200) {\n          // setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message || \"Something Went Wrong !!!\",\n            })\n          );\n        } else {\n          // setImages([]);\n          // setUrl(data.data.url);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleAddress = (e) => {\n    e.preventDefault();\n    setAddress([\n      ...address,\n      {\n        name: e.target.customer_name.value,\n        mobile: e.target.mobile.value,\n        pincode: e.target.pincode.value,\n        city: e.target.city.value,\n        state: e.target.state.value,\n        shipping: e.target.address.value,\n        type: e.target.type.value,\n      },\n    ]);\n    console.log(address);\n  };\n\n  async function handleHardware(e) {\n    try {\n      e.preventDefault();\n\n      const FD = new FormData();\n\n      FD.append(\"DID\", SKU);\n      FD.append(\"AID\", \"Not Assigned \" + SKU);\n      FD.append(\"type\", \"Hardware\");\n      FD.append(\"operation\", \"insertHardware\");\n\n      files.map((element) => {\n        if (element.validate) return FD.append(\"hardware_image\", element);\n      });\n\n      FD.append(\"specification_image\", changeData.specification_image || \"\");\n      FD.append(\"featured_image\", changeData.featured_image || \"\");\n\n      FD.append(\"status\", changeData.status);\n      FD.append(\"online_store\", changeData.online_store);\n      FD.append(\"mobile_store\", changeData.mobile_store);\n\n      category.map((item) => {\n        return (\n          item._id === changeData.category_name &&\n          FD.append(\"category_name\", item.category_name)\n        );\n      });\n\n      subCategory.map((item) => {\n        return (\n          item._id === changeData.sub_category_name &&\n          FD.append(\"sub_category_name\", item.sub_category_name)\n        );\n      });\n\n      FD.append(\n        \"primary_material_name\",\n        JSON.stringify(changeData.primary_material)\n      );\n      FD.append(\"primary_material\", changeData.primary_material);\n      FD.append(\"discount_limit\", changeData.discount_limit || 0);\n      FD.append(\"tax_rate\", changeData.tax_rate);\n      FD.append(\"restocking_time\", changeData.restocking_time);\n      FD.append(\"selling_points\", JSON.stringify(changeData.selling_points));\n      FD.append(\"seo_title\", changeData.seo_title);\n      FD.append(\"seo_description\", changeData.seo_description);\n      FD.append(\"seo_keyword\", changeData.seo_keyword);\n      FD.append(\"hardware_polish\", changeData.hardware_polish);\n      FD.append(\"min_quantity\", changeData.min_quantity);\n      FD.append(\n        \"continue_selling\",\n        changeData.continue_selling ? changeData.continue_selling : true\n      );\n\n      FD.append(\n        \"returnDays\",\n        changeData.returnable ? changeData.returnDays : 0\n      );\n      FD.append(\"returnable\", changeData.returnable);\n      FD.append(\"COD\", changeData.COD);\n\n      FD.append(\"category_id\", changeData.category_name);\n      FD.append(\"sub_category_id\", changeData.sub_category_name);\n      FD.append(\"polish_time\", changeData.polish_time);\n      FD.append(\"manufacturing_time\", changeData.manufacturing_time);\n      FD.append(\"title\", changeData.title);\n\n      FD.append(\"SKU\", SKU);\n\n      FD.append(\n        \"showroom_price\",\n        changeData.showroom_price ? changeData.showroom_price : 0\n      );\n      FD.append(\"selling_price\", changeData.selling_price);\n      FD.append(\"warehouse\", changeData.warehouse);\n\n      FD.append(\"unit\", changeData.unit);\n      FD.append(\"quantity\", changeData.quantity);\n\n      FD.append(\"weight\", changeData.weight ? changeData.weight : 0);\n\n      FD.append(\n        \"package_weight\",\n        changeData.package_weight ? changeData.package_weight : 0\n      );\n      FD.append(\n        \"package_length\",\n        changeData.package_length ? changeData.package_length : 0\n      );\n      FD.append(\n        \"package_height\",\n        changeData.package_height ? changeData.package_height : 0\n      );\n      FD.append(\n        \"package_breadth\",\n        changeData.package_breadth ? changeData.package_breadth : 0\n      );\n\n      if (changeData.jodhpur_stock && changeData.jodhpur_stock > 0)\n        FD.append(\"jodhpur_stock\", changeData.jodhpur_stock);\n\n      if (changeData.bangalore_stock && changeData.bangalore_stock > 0)\n        FD.append(\"bangalore_stock\", changeData.bangalore_stock);\n\n      const res = await addDraft(FD);\n\n      if (res.status === 203) {\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: res.data.message,\n          })\n        );\n      } else {\n        // form.setRow([\n        //   ...form.row,\n        //   {\n        //     id: form.row.length + 1,\n        //     SKU: data.data.response.SKU,\n        //     title: data.data.response.title,\n        //     category_name: data.data.response.category_name,\n        //     category_id: data.data.response.category_id,\n        //     sub_category_name: data.data.response.sub_category_name,\n        //     sub_category_id: data.data.response.sub_category_id,\n        //     hardware_image: data.data.response.hardware_image,\n        //     warehouse: data.data.response.warehouse,\n        //     bangalore_stock: data.data.response.bangalore_stock,\n        //     jodhpur_stock: data.data.response.jodhpur_stock,\n        //     manufacturing_time: data.data.response.manufacturing_time,\n        //     status: data.data.response.status,\n        //     returnDays: data.data.response.returnDays,\n        //     COD: data.data.response.COD,\n        //     returnable: data.data.response.returnable,\n        //     quantity: data.data.response.quantity,\n        //     package_length: data.data.response.package_length,\n        //     package_height: data.data.response.package_height,\n        //     package_breadth: data.data.response.package_breadth,\n        //     unit: data.data.response.unit,\n        //     range: data.data.response.range,\n        //     action: data.data.response._id,\n        //   },\n        // ]);\n        handleClose();\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"success\",\n            message: res.data.message,\n          })\n        );\n      }\n    } catch (err) {\n      console.log(err);\n      dispatch(\n        setAlert({\n          open: true,\n          variant: \"error\",\n          message: \"Something Went Wrong !!!\",\n        })\n      );\n    }\n  }\n\n  async function handleUpdateHardware(e) {\n    try {\n      e.preventDefault();\n\n      const FD = new FormData();\n\n      FD.append(\"DID\", SKU);\n      FD.append(\"AID\", changeData.SKU);\n      FD.append(\"type\", \"Hardware\");\n      FD.append(\"operation\", \"updateHardware\");\n\n      // console.log(form.payload.row.action);\n\n      FD.append(\"_id\", form.payload.row.action);\n\n      files.map((element) => {\n        if (element.validate) return FD.append(\"hardware_image\", element);\n      });\n      FD.append(\"savedImages\", JSON.stringify(changeData.savedImages));\n\n      FD.append(\"specification_image\", changeData.specification_image);\n      FD.append(\"featured_image\", changeData.featured_image);\n\n      FD.append(\"status\", changeData.status);\n      FD.append(\"online_store\", changeData.online_store);\n      FD.append(\"mobile_store\", changeData.mobile_store);\n\n      FD.append(\n        \"primary_material_name\",\n        JSON.stringify(changeData.primary_material)\n      );\n      FD.append(\"primary_material\", changeData.primary_material);\n\n      let multiOBJ = {};\n\n      category.map((item) => {\n        if (item._id === changeData.category_name)\n          multiOBJ = { ...multiOBJ, category_name: item.category_name };\n\n        return (\n          item._id === changeData.category_name &&\n          FD.append(\"category_name\", item.category_name)\n        );\n      });\n\n      subCategory.map((item) => {\n        if (item._id === changeData.sub_category_name)\n          multiOBJ = { ...multiOBJ, sub_category_name: item.sub_category_name };\n\n        return (\n          item._id === changeData.sub_category_name &&\n          FD.append(\"sub_category_name\", item.sub_category_name)\n        );\n      });\n      FD.append(\"discount_limit\", changeData.discount_limit || 0);\n      FD.append(\"tax_rate\", changeData.tax_rate);\n      FD.append(\"restocking_time\", changeData.restocking_time || 0);\n      FD.append(\"selling_points\", JSON.stringify(changeData.selling_points));\n      FD.append(\"seo_title\", changeData.seo_title);\n      FD.append(\"seo_description\", changeData.seo_description);\n      FD.append(\"seo_keyword\", changeData.seo_keyword);\n      FD.append(\"hardware_polish\", changeData.hardware_polish);\n      FD.append(\"min_quantity\", changeData.min_quantity);\n      FD.append(\n        \"continue_selling\",\n        changeData.continue_selling ? changeData.continue_selling : true\n      );\n\n      FD.append(\n        \"returnDays\",\n        changeData.returnable ? changeData.returnDays : 0\n      );\n      FD.append(\"returnable\", changeData.returnable);\n      FD.append(\"COD\", changeData.COD);\n\n      FD.append(\"category_id\", changeData.category_name);\n      FD.append(\"sub_category_id\", changeData.sub_category_name);\n      FD.append(\"polish_time\", changeData.polish_time);\n      FD.append(\"manufacturing_time\", changeData.manufacturing_time);\n      FD.append(\"title\", changeData.title);\n\n      FD.append(\"SKU\", changeData.SKU);\n\n      FD.append(\n        \"showroom_price\",\n        changeData.showroom_price ? changeData.showroom_price : 0\n      );\n      FD.append(\"selling_price\", changeData.selling_price);\n      FD.append(\"warehouse\", changeData.warehouse);\n\n      FD.append(\"unit\", changeData.unit);\n      FD.append(\"quantity\", changeData.quantity);\n\n      FD.append(\"weight\", changeData.weight ? changeData.weight : 0);\n\n      FD.append(\n        \"package_weight\",\n        changeData.package_weight ? changeData.package_weight : 0\n      );\n      FD.append(\n        \"package_length\",\n        changeData.package_length ? changeData.package_length : 0\n      );\n      FD.append(\n        \"package_height\",\n        changeData.package_height ? changeData.package_height : 0\n      );\n      FD.append(\n        \"package_breadth\",\n        changeData.package_breadth ? changeData.package_breadth : 0\n      );\n\n      if (changeData.jodhpur_stock && changeData.jodhpur_stock > 0)\n        FD.append(\"jodhpur_stock\", changeData.jodhpur_stock);\n\n      if (changeData.bangalore_stock && changeData.bangalore_stock > 0)\n        FD.append(\"bangalore_stock\", changeData.bangalore_stock);\n\n      const res = await addDraft(FD);\n\n      if (res) {\n        if (res.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: res.data.message,\n            })\n          );\n        } else {\n          // form.setRow(\n          //   form.row.map((set) => {\n          //     if (set.action === form.payload.row.action) {\n          //       set.title = changeData.title;\n          //       set.category_name = multiOBJ.category_name;\n          //       set.category_id = changeData.category_id;\n          //       set.sub_category_name = multiOBJ.sub_category_name;\n          //       set.sub_category_id = changeData.sub_category_id;\n          //       set.hardware_image = changeData.hardware_image;\n          //       set.warehouse = changeData.warehouse.join(\",\");\n          //       set.bangalore_stock = changeData.bangalore_stock;\n          //       set.jodhpur_stock = changeData.jodhpur_stock;\n          //       set.manufacturing_time = changeData.manufacturing_time;\n          //       set.status = changeData.status;\n          //       set.returnDays = changeData.returnDays;\n          //       set.COD = changeData.COD;\n          //       set.returnable = changeData.returnable;\n          //       set.quantity = changeData.quantity;\n          //       set.package_length = changeData.package_length;\n          //       set.package_height = changeData.package_height;\n          //       set.package_breadth = changeData.package_breadth;\n          //       set.unit = changeData.unit;\n          //       set.range = changeData.range;\n          //     }\n          //     return set;\n          //   })\n          // );\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: res.data.message,\n            })\n          );\n        }\n      }\n    } catch (err) {\n      console.log(\"error>>\", err);\n      dispatch(\n        setAlert({\n          open: true,\n          variant: \"error\",\n          message: \"Something Went Wrong !!!\",\n        })\n      );\n    }\n  }\n\n  const handlePolish = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", \"Not Assigned \" + SKU);\n    FD.append(\"type\", \"Polish\");\n    FD.append(\"operation\", \"insertPolish\");\n\n    FD.append(\"polish_name\", e.target.polish_name.value);\n    FD.append(\"polish_type\", changeData.polish_type);\n    FD.append(\"polish_finish\", changeData.polish_finish);\n    FD.append(\"level\", changeData.level);\n    FD.append(\"lock\", e.target.lock.checked);\n    FD.append(\"price\", e.target.price.value);\n\n    files.map((element) => {\n      if (element.validate) return FD.append(\"outDoor_image\", element);\n    });\n    Indoor.map((element) => {\n      if (element.validate) return FD.append(\"inDoor_image\", element);\n    });\n\n    // const res = addPolish(FD);\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          // form.setRow([\n          //   ...form.row,\n          //   {\n          //     id: form.row.length + 1,\n          //     polish_name: data.data.response.polish_name,\n          //     polish_type: data.data.response.polish_type,\n          //     polish_finish: data.data.response.polish_finish,\n          //     outDoor_image: data.data.response.outDoor_image,\n          //     inDoor_image: data.data.response.inDoor_image,\n          //     lock: data.data.response.lock,\n          //     price: data.data.response.price,\n          //     action: data.data.response,\n          //   },\n          // ]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n  const handleUpdatePolish = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", changeData._id);\n    FD.append(\"type\", \"Polish\");\n    FD.append(\"operation\", \"updatePolish\");\n\n    FD.append(\"_id\", changeData._id);\n\n    FD.append(\"polish_type\", changeData.polish_type);\n    FD.append(\"polish_finish\", changeData.polish_finish);\n    FD.append(\"level\", changeData.level);\n    FD.append(\"polish_name\", changeData.polish_name);\n    FD.append(\"lock\", changeData.lock);\n    FD.append(\"price\", changeData.price);\n    FD.append(\"savedOutDoor\", JSON.stringify(changeData.savedImages));\n    FD.append(\"savedIndoor\", JSON.stringify(changeData.indoorSavedImage));\n\n    files.map((element) => {\n      if (element.validate) return FD.append(\"outDoor_image\", element);\n    });\n    Indoor.map((element) => {\n      if (element.validate) return FD.append(\"inDoor_image\", element);\n    });\n\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          // form.setRow(\n          //   form.row.map((set) => {\n          //     if (set.action === form.payload.row.action) {\n          //       set.polish_name = changeData.polish_name;\n          //       set.polish_type = changeData.polish_type;\n          //       set.polish_finish = changeData.polish_finish;\n          //       set.level = changeData.level;\n          //       set.outDoor_image = changeData.outDoor_image;\n          //       set.inDoor_image = changeData.inDoor_image;\n          //       set.lock = changeData.lock;\n          //       set.price = changeData.price;\n          //     }\n          //     return set;\n          //   })\n          // );\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        //console.log(err);\n        setImages([]);\n        setIndoor([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  async function handleReview(e) {\n    try {\n      e.preventDefault();\n\n      const FD = new FormData();\n\n      console.log(changeData);\n\n      FD.append(\"product_id\", changeData.product_id);\n      FD.append(\"rating\", changeData.rating);\n      FD.append(\"review\", changeData.review);\n      FD.append(\"review_title\", changeData.review_title);\n      FD.append(\"yourTube_url\", changeData.yourTube_url);\n      FD.append(\"reviewer_name\", changeData.reviewer_name);\n      FD.append(\"reviewer_email\", changeData.reviewer_email);\n      files.map((element) => {\n        if (element.validate) return FD.append(\"review_images\", element);\n      });\n      const res = await addReview(FD);\n      if (res) {\n        //console.log(data.status);\n\n        if (res.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: res.data.message,\n            })\n          );\n        } else {\n          form.setCheck((old) => [...old, true]);\n          form.setRow((old) => ({\n            ...old,\n            data: [\n              ...old.data,\n              {\n                id: old.data.length + 1,\n                CID: res.data.response.CID,\n                product_id: res.data.response.product_id,\n                rating: res.data.response.rating,\n                review: res.data.response.review,\n                admin_reply: res.data.response.admin_reply,\n                review_title: res.data.response.review_title,\n                review_images: res.data.response.review_images,\n                review_videos: res.data.response.review_videos,\n                yourTube_url: res.data.response.yourTube_url,\n                reviewer_name: res.data.response.reviewer_name,\n                reviewer_email: res.data.response.reviewer_email,\n                hide: res.data.response.hide,\n                date: res.data.response.date,\n                action: res.data.response,\n              },\n            ],\n          }));\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: res.data.message,\n            })\n          );\n        }\n      }\n    } catch (err) {\n      //console.log(err);\n      setImages([]);\n      setIndoor([]);\n      dispatch(\n        setAlert({\n          open: true,\n          variant: \"error\",\n          message: \"Something Went Wrong !!!\",\n        })\n      );\n    }\n  }\n  async function handleUpdateReview(e) {\n    try {\n      e.preventDefault();\n\n      const FD = new FormData();\n\n      console.log(changeData);\n\n      FD.append(\"_id\", changeData._id);\n      FD.append(\"rating\", changeData.rating);\n      FD.append(\"review\", changeData.review);\n      FD.append(\"review_title\", changeData.review_title);\n      FD.append(\"yourTube_url\", changeData.yourTube_url);\n      const res = await updateReview(FD);\n      if (res) {\n        //console.log(data.status);\n\n        if (res.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: res.data.message,\n            })\n          );\n        } else {\n          form.setRow((old) => ({\n            ...old,\n            data: old.data.map((row, index) => {\n              console.log(row);\n              if (row.action._id === changeData._id) {\n                row.rating = changeData.rating;\n                row.review = changeData.review;\n                row.review_title = changeData.review_title;\n                row.yourTube_url = changeData.yourTube_url;\n              }\n              return row;\n            }),\n          }));\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: res.data.message,\n            })\n          );\n        }\n      }\n    } catch (err) {\n      console.log(err);\n      setImages([]);\n      setIndoor([]);\n      dispatch(\n        setAlert({\n          open: true,\n          variant: \"error\",\n          message: \"Something Went Wrong !!!\",\n        })\n      );\n    }\n  }\n\n  // load new searchList\n  const handleSupplierList = async (e) => {\n    const delayDebounceFn = setTimeout(() => {\n      getSupplierDropdown(e.target.value)\n        .then((res) => {\n          setProductSKU((old) => ({\n            ...old,\n            supplier: res.data.Suppliers,\n          }));\n        })\n        .catch((err) => {\n          setProductSKU((old) => ({\n            ...old,\n            supplier: [],\n          }));\n        });\n    }, 1000);\n    return () => clearTimeout(delayDebounceFn);\n  };\n  async function handleSearchStockSKU(e) {\n    const delayDebounceFn = setTimeout(() => {\n      getStockSKU({ search: e.target.value, warehouse: changeData.warehouse })\n        .then((res) => {\n          setProductSKU((old) => ({\n            ...old,\n            P_SKU: res.data.P_SKU,\n            H_SKU: res.data.H_SKU,\n          }));\n        })\n        .catch((err) => {\n          setProductSKU((old) => ({\n            ...old,\n            P_SKU: [],\n            H_SKU: [],\n          }));\n        });\n    }, 1000);\n    return () => clearTimeout(delayDebounceFn);\n  }\n  async function handleSearch(e) {\n    const delayDebounceFn = setTimeout(() => {\n      getArticlesId(e.target.value)\n        .then((res) => {\n          setProductSKU((old) => ({\n            ...old,\n            P_SKU: res.data.P_SKU,\n            H_SKU: res.data.H_SKU,\n          }));\n        })\n        .catch((err) => {\n          setProductSKU((old) => ({\n            ...old,\n            P_SKU: [],\n            H_SKU: [],\n          }));\n        });\n    }, 1000);\n    return () => clearTimeout(delayDebounceFn);\n  }\n  async function handleSearchCategory(e) {\n    const delayDebounceFn = setTimeout(() => {\n      getCategoryList(e.target.value)\n        .then((res) => {\n          setProductSKU((old) => ({\n            ...old,\n            category: res.data,\n          }));\n        })\n        .catch((err) => {\n          setProductSKU((old) => ({\n            ...old,\n            category: [],\n          }));\n        });\n    }, 1000);\n    return () => clearTimeout(delayDebounceFn);\n  }\n\n  // function for handling banner\n  async function handleBanner(e) {\n    try {\n      e.preventDefault();\n\n      const FD = new FormData();\n\n      FD.append(\"DID\", SKU);\n      FD.append(\"AID\", \"Not Assigned \" + SKU);\n      FD.append(\"type\", \"Banner\");\n      FD.append(\"operation\", \"addBanner\");\n      FD.append(\"banner_title\", changeData.banner_title);\n      FD.append(\"web_banner\", webBanner[0]);\n      FD.append(\"mobile_banner\", mobileBanner[0]);\n      FD.append(\"mobile_url\", changeData.mobile_url);\n      FD.append(\"web_url\", changeData.web_url);\n      FD.append(\"web_banner_status\", changeData.web_banner_status);\n      FD.append(\"mobile_banner_status\", changeData.mobile_banner_status);\n      FD.append(\"sequence_no\", changeData.sequence_no);\n\n      // // //console.log(acceptedFiles[0].name, e.target.category_name.value)\n\n      const res = await addDraft(FD);\n\n      if (res.status === 203) {\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: res.data.message,\n          })\n        );\n      } else {\n        // form.setRow([\n        //   ...form.row,\n        //   {\n        //     id: form.row.length + 1,\n        //     category_name: data.data.response.category_name,\n        //     category_status: data.data.response.category_status,\n        //     category_image: data.data.response.category_image,\n        //     seo_title: data.data.response.seo_title,\n        //     seo_description: data.data.response.seo_description,\n        //     seo_keyword: data.data.response.seo_keyword,\n        //     product_description: data.data.response.product_description,\n        //     action: data.data.response,\n        //   },\n        // ]);\n        // form.setCheck((old) => [...old, data.data.response.category_status]);\n        handleClose();\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"success\",\n            message: res.data.message,\n          })\n        );\n      }\n    } catch (err) {\n      console.log(err);\n      dispatch(\n        setAlert({\n          open: true,\n          variant: \"error\",\n          message: \"Something Went Wrong !!!\",\n        })\n      );\n    }\n  }\n  async function handleUpdateBanner(e) {\n    try {\n      e.preventDefault();\n\n      const FD = new FormData();\n\n      FD.append(\"DID\", SKU);\n      FD.append(\"AID\", changeData.uuid);\n      FD.append(\"type\", \"Banner\");\n      FD.append(\"operation\", \"updateBanner\");\n      FD.append(\"banner_title\", changeData.banner_title);\n      webBanner.length > 0 && FD.append(\"web_banner\", webBanner[0]);\n      mobileBanner.length > 0 && FD.append(\"mobile_banner\", mobileBanner[0]);\n      FD.append(\"mobile_url\", changeData.mobile_url);\n      FD.append(\"web_url\", changeData.web_url);\n      FD.append(\"web_banner_status\", changeData.web_banner_status);\n      FD.append(\"mobile_banner_status\", changeData.mobile_banner_status);\n      FD.append(\"sequence_no\", changeData.sequence_no);\n\n      // // //console.log(acceptedFiles[0].name, e.target.category_name.value)\n\n      const res = await addDraft(FD);\n\n      if (res.status === 203) {\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: res.data.message,\n          })\n        );\n      } else {\n        // form.setRow([\n        //   ...form.row,\n        //   {\n        //     id: form.row.length + 1,\n        //     category_name: data.data.response.category_name,\n        //     category_status: data.data.response.category_status,\n        //     category_image: data.data.response.category_image,\n        //     seo_title: data.data.response.seo_title,\n        //     seo_description: data.data.response.seo_description,\n        //     seo_keyword: data.data.response.seo_keyword,\n        //     product_description: data.data.response.product_description,\n        //     action: data.data.response,\n        //   },\n        // ]);\n        // form.setCheck((old) => [...old, data.data.response.category_status]);\n        handleClose();\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"success\",\n            message: res.data.message,\n          })\n        );\n      }\n    } catch (err) {\n      console.log(err);\n      dispatch(\n        setAlert({\n          open: true,\n          variant: \"error\",\n          message: \"Something Went Wrong !!!\",\n        })\n      );\n    }\n  }\n\n  return (\n    <>\n      <Slide direction=\"left\" in={form.state} mountOnEnter unmountOnExit>\n        <Backdrop\n          sx={{ zIndex: (theme) => theme.zIndex.drawer + 1 }}\n          open={form.state}\n        >\n          <Box\n            className={\n              mode.type === true ? \"mainDarkContainer\" : \"mainContainer\"\n            }\n            sx={\n              form.formType === \"product\" || form.formType === \"update_product\"\n                ? { width: \"100vw !important\", padding: \"0 5% !important\" }\n                : {}\n            }\n          >\n            <IconButton\n              onClick={handleClose}\n              color=\"primary\"\n              className=\"crossButton\"\n            >\n              <CancelIcon />\n            </IconButton>\n\n            {/* add Products */}\n\n            {form.formType === \"product\" && (\n              <Grid container p={5} className=\"productPadding\">\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Product\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add your product and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleProduct);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <Stepper\n                      className=\"stepper\"\n                      activeStep={activeStep}\n                      orientation=\"vertical\"\n                    >\n                      {/* // Specification */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(0)}\n                        >\n                          Specifications\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // // required\n                              label=\"SKU\"\n                              type=\"text\"\n                              value={SKU}\n                              disabled\n                              variant=\"outlined\"\n                              name=\"SKU\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              required\n                              id=\"outlined-select\"\n                              select\n                              name=\"category_name\"\n                              label=\"Category\"\n                              value={changeData.category_name || \"\"}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your category\"\n                            >\n                              {category.map(\n                                (option) =>\n                                  option.category_status && (\n                                    <MenuItem\n                                      key={option._id}\n                                      value={option._id}\n                                    >\n                                      {option.category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"sub_category_name\"\n                              label=\"Sub Category\"\n                              multiple\n                              value={changeData.sub_category_name || \"\"}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your sub category\"\n                            >\n                              {subCategory.map(\n                                (option) =>\n                                  changeData.category_name ===\n                                    option.category_id && (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option._id}\n                                    >\n                                      {option.sub_category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"product_title\"\n                              value={changeData.product_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Showroom Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"showroom_price\"\n                              value={changeData.showroom_price}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              onChange={(e) => {\n                                handleDiscount(e);\n                                handleProductFields(e);\n                              }}\n                              label=\"Discount Limit\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"discount_limit\"\n                              value={changeData.discount_limit}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // disabled\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Selling Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              value={\n                                // changeData.MRP > 0 &&\n                                //   changeData.discount_limit > 0\n                                //   ? (changeData.selling_price =\n                                //     changeData.MRP -\n                                //     (changeData.MRP / 100) *\n                                //     changeData.discount_limit)\n                                //   : 0\n                                changeData.selling_price\n                              }\n                              onChange={handleProductFields}\n                              variant=\"outlined\"\n                              name=\"selling_price\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Length\"\n                              type=\"number\"\n                              value={changeData.length_main}\n                              onChange={handleProductFields}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"length_main\"\n                              helperText=\"From left to right\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"breadth\"\n                              value={changeData.breadth}\n                              onChange={handleProductFields}\n                              helperText=\"From front to back\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"height\"\n                              value={changeData.height}\n                              onChange={handleProductFields}\n                              helperText=\"From bottom to top\"\n                            />\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Material\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.primary_material}\n                              name=\"primary_material\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                              // MenuProps={MenuProps}\n                            >\n                              {materialCatalog.map((option) => (\n                                <MenuItem\n                                  key={option._id}\n                                  value={option.primaryMaterial_name}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.primary_material.indexOf(\n                                        option.primaryMaterial_name\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText\n                                    primary={option.primaryMaterial_name}\n                                  />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            {/* <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"range\"\n                              label=\"Range\"\n                              multiple\n                              value={changeData.range || \"\"}\n                              onChange={handleProductFields}\n                              helperText=\"Please select the range.\"\n                            >\n                              {rangeCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField> */}\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Polish\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.polish}\n                              name=\"polish\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                              // MenuProps={MenuProps}\n                            >\n                              {catalog.polish.length > 0 &&\n                                catalog.polish.map((option, index) => (\n                                  <MenuItem\n                                    key={option.polish_name}\n                                    value={option.polish_name}\n                                  >\n                                    <Checkbox\n                                      checked={\n                                        changeData.polish.indexOf(\n                                          option.polish_name\n                                        ) > -1\n                                      }\n                                    />\n                                    <ListItemText\n                                      primary={option.polish_name}\n                                    />\n                                  </MenuItem>\n                                ))}\n                            </Select>\n                            {/* \n                            <TextField sx={{ mb : 1 }}\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"polish\"\n                              label=\"Polish\"\n                              value={changeData.polish || \"\"}\n                              onChange={handleProductFields}\n                              multiple\n                              helperText=\"Please select your Polish.\"\n                            >\n                              {polishCatalog.map(\n                                (option) =>\n                                  option.polish_status && (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option._id}\n                                    >\n                                      {option.polish_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField> */}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Assembly\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"assembly_required\"\n                                value={changeData.assembly_required || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"shipping\"\n                                  control={<Radio />}\n                                  label=\"Shipping In Part\"\n                                />\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.assembly_required === \"shipping\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"fullWidth\"\n                                  label=\"Assemble Part\"\n                                  type=\"number\"\n                                  InputProps={{\n                                    startAdornment: (\n                                      <InputAdornment position=\"start\">\n                                        No. of parts\n                                      </InputAdornment>\n                                    ),\n                                  }}\n                                  variant=\"outlined\"\n                                  name=\"assembly_part\"\n                                  value={\n                                    changeData.assembly_part > -1 &&\n                                    changeData.assembly_part < 3\n                                      ? changeData.assembly_part\n                                      : 0\n                                  }\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            {changeData.assembly_required === \"yes\" && (\n                              <>\n                                <TextField\n                                  sx={{ mt: 1, mb: 1 }}\n                                  size=\"small\"\n                                  fullWidth\n                                  // required\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"legs\"\n                                  label=\"Table Legs\"\n                                  value={changeData.legs || \"\"}\n                                  onChange={handleProductFields}\n                                  multiple\n                                  helperText=\"Please select your leg \"\n                                >\n                                  {legCatalog.map((option) => (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option.value}\n                                    >\n                                      {option.label}\n                                    </MenuItem>\n                                  ))}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // required\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"assembly_level\"\n                                  label=\"Assembly Level\"\n                                  value={changeData.assembly_level || \"\"}\n                                  onChange={handleProductFields}\n                                  multiple\n                                  helperText=\"Please select your assembly level \"\n                                >\n                                  {assemblyLevelCatalog.map((option) => (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option.value}\n                                    >\n                                      {option.label}\n                                    </MenuItem>\n                                  ))}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n                              </>\n                            )}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Availability\n                            </FormLabel>\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.mobile_store}\n                                  onChange={handleProductFields}\n                                  name=\"mobile_store\"\n                                  helperText=\"Check it if want it on mobile.\"\n                                />\n                              }\n                              label=\"Mobile Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.online_store}\n                                  onChange={handleProductFields}\n                                  name=\"online_store\"\n                                  helperText=\"Check it if want it on online store.\"\n                                />\n                              }\n                              label=\"Online Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.continue_selling}\n                                  onChange={handleProductFields}\n                                  name=\"continue_selling\"\n                                  helperText=\"Check it if want it to sell when out of Inventory.\"\n                                />\n                              }\n                              label=\"Continue Selling\"\n                            />\n                            {/*                            \n                             <TextField sx = {{mb : 2}}\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"MRP\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"MRP\"\n                              onChange={handleProductFields}\n                              value={changeData.MRP}\n                            /> */}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* // Specification Ends*/}\n\n                      {/* Images */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(1)}\n                        >\n                          Images\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            {/* <AcceptMaxFiles className=\"dorpContainer\"/> */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Images\n                            </FormLabel>\n                            <ProductsPreviews\n                              text={\n                                \"Make Sure the picture ratio should be in 1:1.\"\n                              }\n                            ></ProductsPreviews>\n                            {files.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                <Grid xs={12}>\n                                  <Typography variant=\"h6\">\n                                    Uploaded Images\n                                  </Typography>\n                                </Grid>\n                                {files.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = files;\n                                            console.log(\">>>>>>\", temp, files);\n                                            temp.splice(index, 1);\n                                            setFiles([...temp]);\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={URL.createObjectURL(img)}\n                                          alt={img.name}\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // image Squence  Images */}\n                            {files.length > 0 && (\n                              <ImageSquence\n                                text={\"New Images\"}\n                                image={files}\n                                setImage={setFiles}\n                                savedImage={false}\n                              />\n                            )}\n                            {/* // featured images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"featured_image\"\n                              label=\"Feature Image\"\n                              value={changeData.featured_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Featured Image\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // specification images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"specification_image\"\n                              label=\"Specification Image\"\n                              value={changeData.specification_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your specification image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // Mannequin images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"mannequin_image\"\n                              label=\"Mannequin Image\"\n                              value={changeData.mannequin_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Mannequin Image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Images End */}\n\n                      {/* Features */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(2)}\n                        >\n                          Features\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <FormGroup>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.rotating_seats}\n                                    onChange={handleProductFields}\n                                    name=\"rotating_seats\"\n                                  />\n                                }\n                                label=\"Rotating Seats\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.eatable_oil_polish}\n                                    onChange={handleProductFields}\n                                    name=\"eatable_oil_polish\"\n                                  />\n                                }\n                                label=\"Eatable Oil Polished\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.no_chemical}\n                                    onChange={handleProductFields}\n                                    name=\"no_chemical\"\n                                  />\n                                }\n                                label=\"No Chemical Used\"\n                              />\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.weaving}\n                                    onChange={handleProductFields}\n                                    name=\"weaving\"\n                                  />\n                                }\n                                label=\"Weaving\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={\n                                      changeData.not_suitable_for_Micro_Dish\n                                    }\n                                    onChange={handleProductFields}\n                                    name=\"not_suitable_for_Micro_Dish\"\n                                  />\n                                }\n                                label=\"Not Suitable For Microwave/Dishwasher\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.tilt_top}\n                                    onChange={handleProductFields}\n                                    name=\"tilt_top\"\n                                  />\n                                }\n                                label=\"Tilt Top\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.inside_compartments}\n                                    onChange={handleProductFields}\n                                    name=\"inside_compartments\"\n                                  />\n                                }\n                                label=\"Inside Compartments\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.stackable}\n                                    onChange={handleProductFields}\n                                    name=\"stackable\"\n                                  />\n                                }\n                                label=\"Stackable\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.knife}\n                                    onChange={handleProductFields}\n                                    name=\"knife\"\n                                  />\n                                }\n                                label=\"Knife Friendly Surface\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.wall_hanging}\n                                    onChange={handleProductFields}\n                                    name=\"wall_hanging\"\n                                  />\n                                }\n                                label=\"Wall Hanging\"\n                              />\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.ceramic_drawer_included}\n                                    onChange={handleProductFields}\n                                    name=\"ceramic_drawer_included\"\n                                  />\n                                }\n                                label=\"Ceramic Drawers\"\n                              />\n\n                              {changeData.ceramic_drawer_included && (\n                                <>\n                                  <TextField\n                                    sx={{ mt: 2, mb: 1 }}\n                                    size=\"small\"\n                                    fullWidth\n                                    id=\"outlined-select\"\n                                    select\n                                    name=\"ceramic_drawer\"\n                                    label=\"Ceramic Drawer\"\n                                    multiple\n                                    value={changeData.ceramic_drawer}\n                                    onChange={handleProductFields}\n                                    helperText=\"Please select your Ceramic Tiles.\"\n                                  >\n                                    {catalog.ceramic_drawer.map(\n                                      (option) =>\n                                        option.status && (\n                                          <MenuItem\n                                            key={option.SKU}\n                                            value={option.SKU}\n                                          >\n                                            {option.title}\n                                          </MenuItem>\n                                        )\n                                    )}\n                                    <MenuItem key={\"none\"} value=\"None\">\n                                      {\"None\"}\n                                    </MenuItem>\n                                  </TextField>\n                                  <TextField\n                                    value={changeData.ceramic_drawer_qty}\n                                    onChange={handleProductFields}\n                                    size={\"small\"}\n                                    fullWidth\n                                    label=\"Ceramic Drawer Quantity\"\n                                    type=\"number\"\n                                    helperText=\"Enter the number of ceramic drawer included.\"\n                                    name=\"ceramic_drawer_qty\"\n                                  />\n                                </>\n                              )}\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.ceramic_tiles_included}\n                                    onChange={handleProductFields}\n                                    name=\"ceramic_tiles_included\"\n                                  />\n                                }\n                                label=\"Ceramic Tiles\"\n                              />\n                            </FormGroup>\n                            {changeData.ceramic_tiles_included && (\n                              <>\n                                <TextField\n                                  sx={{ mt: 2, mb: 1 }}\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"ceramic_tiles\"\n                                  label=\"Ceramic Tiles\"\n                                  multiple\n                                  value={changeData.ceramic_tiles}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your Ceramic Tiles.\"\n                                >\n                                  {catalog.ceramic_tiles.map(\n                                    (option) =>\n                                      option.status && (\n                                        <MenuItem\n                                          key={option.SKU}\n                                          value={option.SKU}\n                                        >\n                                          {option.title}\n                                        </MenuItem>\n                                      )\n                                  )}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n                                <TextField\n                                  value={changeData.ceramic_tiles_qty}\n                                  onChange={handleProductFields}\n                                  size={\"small\"}\n                                  fullWidth\n                                  label=\"Ceramic Tiles Quantity\"\n                                  type=\"number\"\n                                  helperText=\"Enter the number of ceramic tiles included.\"\n                                  name=\"ceramic_tiles_qty\"\n                                />\n                              </>\n                            )}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Features ends */}\n\n                      {/* Miscellaneous */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(3)}\n                        >\n                          Miscellaneous\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"back_style\"\n                              label=\"Back Style\"\n                              multiple\n                              value={changeData.back_style || \"\"}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Back Style.\"\n                            >\n                              {backStyleCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"weight_capacity\"\n                              label=\"Weight Capacity\"\n                              multiple\n                              value={changeData.weight_capacity}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Weight Capacity.\"\n                            >\n                              {weightCapCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Drawer\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.drawer || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"drawer\"\n                              >\n                                <FormControlLabel\n                                  value=\"mechanical\"\n                                  control={<Radio />}\n                                  label=\"Mechanical\"\n                                />\n                                <FormControlLabel\n                                  value=\"wooden\"\n                                  control={<Radio />}\n                                  label=\"Wooden\"\n                                />\n                                <FormControlLabel\n                                  value=\"none\"\n                                  control={<Radio />}\n                                  label=\"None\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {(changeData.drawer === \"mechanical\" ||\n                              changeData.drawer === \"wooden\") && (\n                              <TextField\n                                size=\"small\"\n                                fullWidth\n                                type=\"number\"\n                                id=\"outlined-select\"\n                                name=\"drawer_count\"\n                                label=\"Drawer Count\"\n                                value={changeData.drawer_count}\n                                onChange={handleProductFields}\n                              />\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Joints ((Useful in products where info about\n                                joints are shown))\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"joints\"\n                                value={changeData.joints}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"single\"\n                                  control={<Radio />}\n                                  label=\"Single\"\n                                />\n                                <FormControlLabel\n                                  value=\"multi\"\n                                  control={<Radio />}\n                                  label=\"Multiple\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Miscellaneous ends */}\n\n                      {/* Inventory & Shipping */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(4)}\n                        >\n                          Inventory & Shipping\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <FormGroup>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Return & Payment Policy\n                              </FormLabel>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.COD}\n                                    onChange={handleProductFields}\n                                    name=\"COD\"\n                                  />\n                                }\n                                label=\"COD Available\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.returnable}\n                                    onChange={handleProductFields}\n                                    name=\"returnable\"\n                                  />\n                                }\n                                label=\"Return Item\"\n                              />\n                            </FormGroup>\n                            {changeData.returnable && (\n                              <>\n                                <Typography\n                                  component={\"span\"}\n                                  variant=\"Caption\"\n                                >\n                                  {\" \"}\n                                  Return in {changeData.returnDays} Days\n                                </Typography>\n                                <Slider\n                                  aria-label=\"Return Days\"\n                                  defaultValue={0}\n                                  size=\"small\"\n                                  name=\"returnDays\"\n                                  value={changeData.returnDays}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your return days\"\n                                  valueLabelDisplay=\"auto\"\n                                />\n                              </>\n                            )}\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Polish in {changeData.polish_time} Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"Construction Days\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"polish_time\"\n                              value={changeData.polish_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your polish time\"\n                            />\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Manufactured in {\n                                changeData.manufacturing_time\n                              }{\" \"}\n                              Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"Construction Days\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"manufacturing_time\"\n                              value={changeData.manufacturing_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your manufacturing time\"\n                            />\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Stock Warehouse\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.warehouse}\n                              name=\"warehouse\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                            >\n                              {warehouse.map((option) => (\n                                <MenuItem\n                                  key={option.label}\n                                  value={option.value}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.warehouse.indexOf(\n                                        option.value\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText primary={option.value} />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            {changeData.warehouse.map((row) => {\n                              let stock;\n                              row === \"Jodhpur (Rajasthan)\"\n                                ? (stock = \"jodhpur_stock\")\n                                : (stock = \"bangalore_stock\");\n                              return (\n                                <>\n                                  <TextField\n                                    size=\"small\"\n                                    fullWidth\n                                    name={stock}\n                                    label={row + \" Stock\"}\n                                    type=\"number\"\n                                    value={changeData[stock] || \"\"}\n                                    onChange={handleProductFields}\n                                  />\n                                </>\n                              );\n                            })}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Length\"\n                              type=\"number\"\n                              value={changeData.package_length}\n                              onChange={handleProductFields}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_length\"\n                              helperText=\"From left to right\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_breadth\"\n                              value={changeData.package_breadth}\n                              onChange={handleProductFields}\n                              helperText=\"From front to back\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_height\"\n                              value={changeData.package_height}\n                              onChange={handleProductFields}\n                              helperText=\"From bottom to top\"\n                            />\n                            <Box sx={{ display: \"flex\", mb: 1 }}>\n                              <TextField\n                                size=\"small\"\n                                sx={{ width: \"90%\" }}\n                                id=\"fullWidth\"\n                                label=\"Quantity\"\n                                type=\"Number\"\n                                variant=\"outlined\"\n                                name=\"quantity\"\n                                value={changeData.quantity}\n                                onChange={handleProductFields}\n                              />\n\n                              <TextField\n                                id=\"outlined-select-currency\"\n                                select\n                                sx={{ ml: 1, width: \"10%\" }}\n                                size=\"small\"\n                                label=\"Unit\"\n                                name=\"unit\"\n                                value={changeData.unit || \"\"}\n                                onChange={handleProductFields}\n                              >\n                                {unitCatalog.map((option) => (\n                                  <MenuItem\n                                    key={option.value}\n                                    value={option.value}\n                                  >\n                                    {option.label}\n                                  </MenuItem>\n                                ))}\n                              </TextField>\n                            </Box>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Inventory & Shipping End */}\n\n                      {/* SEO */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(5)}\n                        >\n                          SEO\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_title\"\n                              value={changeData.seo_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Description\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_description\"\n                              value={changeData.seo_description}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Keyword\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_keyword\"\n                              value={changeData.seo_keyword}\n                              onChange={handleProductFields}\n                            />\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n                            <Grid container sx={{ mt: 1 }}>\n                              <Grid item xs={12}>\n                                <Grid\n                                  container\n                                  sx={{\n                                    display: \"flex\",\n                                    alignItem: \"center\",\n                                    justifyContent: \"space-between\",\n                                  }}\n                                >\n                                  <Grid item xs={11}>\n                                    <TextField\n                                      fullWidth\n                                      value={changeData.item || \"\"}\n                                      size={\"small\"}\n                                      type=\"text\"\n                                      name=\"item\"\n                                      onChange={handleProductFields}\n                                      label=\"Write a point...\"\n                                    />\n                                  </Grid>\n                                  <Grid item xs={0.8}>\n                                    {changeData.select === undefined ? (\n                                      <Button\n                                        fullWidth\n                                        onClick={() => {\n                                          changeData.item !== \"\" &&\n                                            setData({\n                                              ...changeData,\n                                              selling_points: [\n                                                ...changeData.selling_points,\n                                                changeData.item,\n                                              ],\n                                              item: \"\",\n                                            });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Add\n                                      </Button>\n                                    ) : (\n                                      <Button\n                                        onClick={() => {\n                                          setData({\n                                            ...changeData,\n                                            selling_points:\n                                              changeData.selling_points.filter(\n                                                (row, i) => {\n                                                  return (\n                                                    i !== changeData.select\n                                                  );\n                                                }\n                                              ),\n                                            select: undefined,\n                                          });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Remove\n                                      </Button>\n                                    )}\n                                  </Grid>\n                                </Grid>\n                              </Grid>\n                              {changeData.selling_points.length > 0 && (\n                                <Grid\n                                  sx={{\n                                    maxHeight: \"100px\",\n                                    overflowY: \"scroll\",\n                                    mb: 1,\n                                    border: \"2px solid #91441f\",\n                                    padding: \"7px\",\n                                  }}\n                                  item\n                                  xs={12}\n                                >\n                                  <ul style={{ listStyleType: \"square\" }}>\n                                    {changeData.selling_points &&\n                                      changeData.selling_points.map(\n                                        (item, index) => {\n                                          return (\n                                            <li>\n                                              <Typography\n                                                sx={{ cursor: \"pointer\" }}\n                                                onClick={() => {\n                                                  setData({\n                                                    ...changeData,\n                                                    select: index,\n                                                    item: item,\n                                                  });\n                                                }}\n                                                variant=\"body\"\n                                              >\n                                                {index + 1 + \". \"}\n                                                {item}\n                                              </Typography>\n                                            </li>\n                                          );\n                                        }\n                                      )}\n                                  </ul>\n                                </Grid>\n                              )}\n                            </Grid>\n                            {/* product description  */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Description\n                            </FormLabel>\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"product_description\"\n                              onChange={handleProductFields}\n                              defaultValue={changeData.product_description}\n                              type=\"text\"\n                              helperText=\"Please enter your product description\"\n                            />\n                            {/* <Editor\n                              apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                              onInit={(event, editor) =>\n                                (editorRef.current = editor)\n                              }\n                              init={{\n                                height: 300,\n                                menubar: true,\n                              }}\n                            /> */}\n                            {/* selling points  */}\n                            {/* <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"selling_points\"\n                              defaultValue={\"Selling Points\" || changeData.selling_points}\n                              type=\"text\"\n                              helperText=\"Please enter your selling points.\"\n                            /> */}\n                            {/* <Editor\n                              apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                              onInit={(event, editor) =>\n                                (sellingRef.current = editor)\n                              }\n                              init={{\n                                height: 400,\n                                menubar: true,\n                              }}\n                            /> */}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* SEO End */}\n\n                      {/* Extra-details */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(6)}\n                        >\n                          Extra-Details\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              type=\"number\"\n                              name=\"CVW\"\n                              label=\"CVW Number\"\n                              value={changeData.CVW || \"\"}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Wood Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"wood_weight\"\n                              value={changeData.wood_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\" Metallic Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"metal_weight\"\n                              value={changeData.metal_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Packaging Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_weight\"\n                              value={changeData.package_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"tax_rate\"\n                              label=\"Tax Rate\"\n                              value={changeData.tax_rate}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your tax rate.\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                            >\n                              {taxRateCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Silver\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.silver || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"silver\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.silver === \"yes\" && (\n                              <TextField\n                                size=\"small\"\n                                fullWidth\n                                // autoComplete={false}\n                                id=\"fullWidth\"\n                                label=\"Sliver Weight\"\n                                type=\"text\"\n                                InputProps={{\n                                  startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                      Gram\n                                    </InputAdornment>\n                                  ),\n                                }}\n                                variant=\"outlined\"\n                                name=\"silver_weight\"\n                                value={changeData.silver_weight}\n                                onChange={handleProductFields}\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"hinge\"\n                              label=\"Hinge\"\n                              multiple\n                              value={changeData.hinge}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your hinge.\"\n                            >\n                              {catalog.hinge.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.hinge !== \"None\" && (\n                              <TextField\n                                value={changeData.hinge_qty}\n                                size={\"small\"}\n                                helperText=\"Enter the number of hinges pieces .\"\n                                fullWidth\n                                onChange={handleProductFields}\n                                label=\"Hinge Quantity\"\n                                type=\"number\"\n                                name=\"hinge_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"knob\"\n                              label=\"Knob\"\n                              multiple\n                              value={changeData.knob}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your knob.\"\n                            >\n                              {console.log(catalog)}\n                              {catalog.knob.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.knob !== \"None\" && (\n                              <TextField\n                                size={\"small\"}\n                                fullWidth\n                                helperText=\"Enter the number of knob pieces .\"\n                                value={changeData.knob_qty}\n                                onChange={handleProductFields}\n                                label=\"Knob Quantity\"\n                                type=\"number\"\n                                name=\"knob_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"door\"\n                              label=\"Door\"\n                              multiple\n                              value={changeData.door}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your door.\"\n                            >\n                              {catalog.door.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.door !== \"None\" && (\n                              <TextField\n                                value={changeData.door_qty}\n                                helperText=\"Enter the number of doors.\"\n                                size={\"small\"}\n                                fullWidth\n                                onChange={handleProductFields}\n                                label=\"Door Quantity\"\n                                type=\"number\"\n                                name=\"door_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"handle\"\n                              label=\"Handle\"\n                              multiple\n                              value={changeData.handle}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your handle.\"\n                            >\n                              {catalog.handle.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.handle !== \"None\" && (\n                              <TextField\n                                value={changeData.handle_qty}\n                                helperText=\"Enter the number of handles.\"\n                                onChange={handleProductFields}\n                                size={\"small\"}\n                                fullWidth\n                                label=\"Handle Quantity\"\n                                type=\"number\"\n                                name=\"handle_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              label=\"Fitting\"\n                              name=\"fitting\"\n                              multiple\n                              value={changeData.fitting}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your fitting.\"\n                            >\n                              {catalog.fitting.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Mirror\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"mirror\"\n                                value={changeData.mirror || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.mirror === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // autoComplete={false}\n                                  id=\"fullWidth\"\n                                  label=\"Mirror Length\"\n                                  type=\"text\"\n                                  InputProps={{\n                                    startAdornment: (\n                                      <InputAdornment position=\"start\">\n                                        Inch\n                                      </InputAdornment>\n                                    ),\n                                  }}\n                                  variant=\"outlined\"\n                                  value={changeData.mirror_length}\n                                  onChange={handleProductFields}\n                                  name=\"mirror_length\"\n                                />\n\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // autoComplete={false}\n                                  id=\"fullWidth\"\n                                  label=\"Mirror Width\"\n                                  type=\"text\"\n                                  InputProps={{\n                                    startAdornment: (\n                                      <InputAdornment position=\"start\">\n                                        Inch\n                                      </InputAdornment>\n                                    ),\n                                  }}\n                                  variant=\"outlined\"\n                                  name=\"mirror_width\"\n                                  value={changeData.mirror_width}\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Top Size Length\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"top_size_length\"\n                              value={changeData.top_size_length}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Top Size Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"top_size_breadth\"\n                              value={changeData.top_size_breadth}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Dial Size (Only Applicable on Clock And Clock Containing Items )\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              value={changeData.dial_size}\n                              onChange={handleProductFields}\n                              name=\"dial_size\"\n                            />\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Wheel Included\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"wheel_included\"\n                                value={changeData.wheel_included || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.wheel_included === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"wheel\"\n                                  label=\"Wheel\"\n                                  multiple\n                                  value={changeData.wheel}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your wheel.\"\n                                >\n                                  {catalog.wheel.map(\n                                    (option) =>\n                                      option.status && (\n                                        <MenuItem\n                                          key={option.SKU}\n                                          value={option.SKU}\n                                        >\n                                          {option.title}\n                                        </MenuItem>\n                                      )\n                                  )}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n                                <TextField\n                                  value={changeData.wheel_qty}\n                                  onChange={handleProductFields}\n                                  size={\"small\"}\n                                  fullWidth\n                                  label=\"Wheel Quantity\"\n                                  type=\"number\"\n                                  helperText=\"Enter the number of wheel included.\"\n                                  name=\"wheel_qty\"\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Trolley\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"trolley\"\n                                value={changeData.trolley || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.trolley === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"trolley_material\"\n                                  label=\"Trolly Material\"\n                                  multiple\n                                  value={changeData.trolley_material}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your Trolly Material \"\n                                >\n                                  {trollyMaterial.map((option) => (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option.value}\n                                    >\n                                      {option.label}\n                                    </MenuItem>\n                                  ))}\n                                </TextField>\n                              </>\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Seating Size Width\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"seating_size_width\"\n                              value={changeData.seating_size_width}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Seating Size Width Depth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"seating_size_depth\"\n                              value={changeData.seating_size_depth}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Seating Size Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"seating_size_height\"\n                              value={changeData.seating_size_height}\n                              onChange={handleProductFields}\n                            />\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Plywood Included\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.plywood || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"plywood\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Mattress\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.mattress || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"mattress\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.mattress === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  type=\"number\"\n                                  id=\"outlined-select\"\n                                  name=\"mattress_length\"\n                                  label=\"Mattress Length\"\n                                  value={changeData.mattress_length}\n                                  onChange={handleProductFields}\n                                />\n                                <TextField\n                                  size=\"small\"\n                                  type=\"number\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  name=\"mattress_breadth\"\n                                  label=\"Mattress Breadth\"\n                                  value={changeData.mattress_breadth}\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Cradle Bed\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.cradle_bed || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"cradle_bed\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.cradle_bed === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  type=\"number\"\n                                  id=\"outlined-select\"\n                                  name=\"cradle_bed_height\"\n                                  label=\"Cradle Bed Height\"\n                                  value={changeData.cradle_bed_height}\n                                  onChange={handleProductFields}\n                                />\n                                <TextField\n                                  size=\"small\"\n                                  type=\"number\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  name=\"cradle_bed_width\"\n                                  label=\"Cradle Bed Width\"\n                                  value={changeData.cradle_bed_width}\n                                  onChange={handleProductFields}\n                                />\n                                <TextField\n                                  size=\"small\"\n                                  type=\"number\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  name=\"cradle_bed_depth\"\n                                  label=\"Cradle Bed Depth\"\n                                  value={changeData.cradle_bed_depth}\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Upholstery\n                              </FormLabel>\n                              <RadioGroup\n                                defaultValue=\"no\"\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                // onChange={(e) => {\n                                //   setShowFabric(e.target.value);\n                                // }}\n\n                                value={changeData.upholstery || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"upholstery\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.upholstery === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"fabric\"\n                                  label=\"Fabric\"\n                                  multiple\n                                  value={changeData.fabric}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your fabric.\"\n                                >\n                                  {catalog.fabric.map(\n                                    (option) =>\n                                      option.status && (\n                                        <MenuItem\n                                          key={option.SKU}\n                                          value={option.SKU}\n                                        >\n                                          {option.title}\n                                        </MenuItem>\n                                      )\n                                  )}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n\n                                <TextField\n                                  value={changeData.fabric_qty}\n                                  onChange={handleProductFields}\n                                  size={\"small\"}\n                                  fullWidth\n                                  label=\"Fabric Quantity\"\n                                  type=\"number\"\n                                  helperText=\"Enter the fabric quantity in meter.\"\n                                  name=\"fabric_qty\"\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Vendor URLs\n                              </FormLabel>\n                            </FormControl>\n                            <TextField\n                              type=\"url\"\n                              fullWidth\n                              size=\"small\"\n                              name=\"amazon_url\"\n                              label=\"Amazon\"\n                              onChange={handleProductFields}\n                              value={changeData.amazon_url}\n                              placeholder=\"https://example.com\"\n                              pattern=\"https://.*\"\n                            />\n                            <TextField\n                              type=\"url\"\n                              size=\"small\"\n                              fullWidth\n                              placeholder=\"https://example.com\"\n                              pattern=\"https://.*\"\n                              name=\"flipkart_url\"\n                              label=\"Flipkart\"\n                              onChange={handleProductFields}\n                              value={changeData.flipkart_url}\n                            />\n                            <TextField\n                              type=\"url\"\n                              size=\"small\"\n                              fullWidth\n                              placeholder=\"https://example.com\"\n                              pattern=\"https://.*\"\n                              name=\"jiomart_url\"\n                              label=\"Jio Mart\"\n                              onChange={handleProductFields}\n                              value={changeData.jiomart_url}\n                            />\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Extra-details End */}\n                    </Stepper>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Product\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* add Products Ends */}\n            {/* Update Products */}\n\n            {form.formType === \"update_product\" && (\n              <Grid container p={5} className=\"productPadding\">\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Product\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update your product and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateProduct);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <Stepper\n                      className=\"stepper\"\n                      activeStep={activeStep}\n                      orientation=\"vertical\"\n                    >\n                      {/* // Specification */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(0)}\n                        >\n                          Specifications\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"SKU\"\n                              type=\"text\"\n                              value={changeData.SKU || \"\"}\n                              disabled\n                              variant=\"outlined\"\n                              name=\"SKU\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              required\n                              id=\"outlined-select\"\n                              select\n                              name=\"category_name\"\n                              label=\"Category\"\n                              value={changeData.category_name || \"\"}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your category\"\n                            >\n                              {category.map(\n                                (option) =>\n                                  option.category_status && (\n                                    <MenuItem\n                                      key={option._id}\n                                      value={option._id}\n                                    >\n                                      {option.category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"sub_category_name\"\n                              label=\"Sub Category\"\n                              multiple\n                              value={changeData.sub_category_name || \"\"}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your sub category\"\n                            >\n                              {subCategory.map(\n                                (option) =>\n                                  changeData.category_name ===\n                                    option.category_id && (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option._id}\n                                    >\n                                      {option.sub_category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"product_title\"\n                              value={changeData.product_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Showroom Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"showroom_price\"\n                              value={changeData.showroom_price}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              onChange={(e) => {\n                                handleDiscount(e);\n                                handleProductFields(e);\n                              }}\n                              label=\"Discount Limit\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"discount_limit\"\n                              value={changeData.discount_limit}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // disabled\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Selling Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              value={\n                                // changeData.MRP > 0 &&\n                                //   changeData.discount_limit > 0\n                                //   ? (changeData.selling_price =\n                                //     changeData.MRP -\n                                //     (changeData.MRP / 100) *\n                                //     changeData.discount_limit)\n                                //   : 0\n                                changeData.selling_price\n                              }\n                              onChange={handleProductFields}\n                              variant=\"outlined\"\n                              name=\"selling_price\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Length\"\n                              type=\"number\"\n                              value={changeData.length_main}\n                              onChange={handleProductFields}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"length_main\"\n                              helperText=\"From left to right\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"breadth\"\n                              value={changeData.breadth}\n                              onChange={handleProductFields}\n                              helperText=\"From front to back\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"height\"\n                              value={changeData.height}\n                              onChange={handleProductFields}\n                              helperText=\"From bottom to top\"\n                            />\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Material\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.primary_material || []}\n                              name=\"primary_material\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                              // MenuProps={MenuProps}\n                            >\n                              {materialCatalog.map((option) => (\n                                <MenuItem\n                                  key={option._id}\n                                  value={option.primaryMaterial_name}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.primary_material.indexOf(\n                                        option.primaryMaterial_name\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText\n                                    primary={option.primaryMaterial_name}\n                                  />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            {/* <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"range\"\n                              label=\"Range\"\n                              multiple\n                              value={changeData.range || \"\"}\n                              onChange={handleProductFields}\n                              helperText=\"Please select the range.\"\n                            >\n                              {rangeCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField> */}\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Polish\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.polish || []}\n                              name=\"polish\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                              // MenuProps={MenuProps}\n                            >\n                              {catalog.polish.length > 0 &&\n                                catalog.polish.map((option, index) => (\n                                  <MenuItem\n                                    key={option.polish_name}\n                                    value={option.polish_name}\n                                  >\n                                    <Checkbox\n                                      checked={\n                                        changeData.polish.indexOf(\n                                          option.polish_name\n                                        ) > -1\n                                      }\n                                    />\n                                    <ListItemText\n                                      primary={option.polish_name}\n                                    />\n                                  </MenuItem>\n                                ))}\n                            </Select>\n                            {/* <TextField sx={{ mb : 1 }}\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"polish\"\n                              label=\"Polish\"\n                              value={changeData.polish || \"\"}\n                              onChange={handleProductFields}\n                              multiple\n                              helperText=\"Please select your Polish.\"\n                            >\n                              {polishCatalog.map(\n                                (option) =>\n                                  option.polish_status && (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option._id}\n                                    >\n                                      {option.polish_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField> */}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Assembly\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"assembly_required\"\n                                value={changeData.assembly_required || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"shipping\"\n                                  control={<Radio />}\n                                  label=\"Shipping In Part\"\n                                />\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.assembly_required === \"shipping\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // required\n                                  // autoComplete={false}\n                                  id=\"fullWidth\"\n                                  label=\"Assemble Part\"\n                                  type=\"number\"\n                                  InputProps={{\n                                    startAdornment: (\n                                      <InputAdornment position=\"start\">\n                                        No. of parts\n                                      </InputAdornment>\n                                    ),\n                                  }}\n                                  variant=\"outlined\"\n                                  name=\"assembly_part\"\n                                  value={\n                                    changeData.assembly_part > -1 &&\n                                    changeData.assembly_part < 3\n                                      ? changeData.assembly_part\n                                      : 0\n                                  }\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            {changeData.assembly_required === \"yes\" && (\n                              <>\n                                <TextField\n                                  sx={{ mt: 1, mb: 1 }}\n                                  size=\"small\"\n                                  fullWidth\n                                  // required\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"legs\"\n                                  label=\"Table Legs\"\n                                  value={changeData.legs || \"\"}\n                                  onChange={handleProductFields}\n                                  multiple\n                                  helperText=\"Please select your leg \"\n                                >\n                                  {legCatalog.map((option) => (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option.value}\n                                    >\n                                      {option.label}\n                                    </MenuItem>\n                                  ))}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // required\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"assembly_level\"\n                                  label=\"Assembly Level\"\n                                  value={changeData.assembly_level || \"\"}\n                                  onChange={handleProductFields}\n                                  multiple\n                                  helperText=\"Please select your assembly level \"\n                                >\n                                  {assemblyLevelCatalog.map((option) => (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option.value}\n                                    >\n                                      {option.label}\n                                    </MenuItem>\n                                  ))}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n                              </>\n                            )}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Availability\n                            </FormLabel>\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.mobile_store}\n                                  onChange={handleProductFields}\n                                  name=\"mobile_store\"\n                                  helperText=\"Check it if want it on mobile.\"\n                                />\n                              }\n                              label=\"Mobile Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.online_store}\n                                  onChange={handleProductFields}\n                                  name=\"online_store\"\n                                  helperText=\"Check it if want it on online store.\"\n                                />\n                              }\n                              label=\"Online Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.continue_selling}\n                                  onChange={handleProductFields}\n                                  name=\"continue_selling\"\n                                  helperText=\"Check it if want it to sell when out of Inventory.\"\n                                />\n                              }\n                              label=\"Continue Selling\"\n                            />\n                            {/*                            \n                             <TextField sx = {{mb : 2}}\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"MRP\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"MRP\"\n                              onChange={handleProductFields}\n                              value={changeData.MRP}\n                            /> */}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* // Specification Ends*/}\n\n                      {/* Images */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(1)}\n                        >\n                          Images\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            {/* <AcceptMaxFiles className=\"dorpContainer\"/> */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Images\n                            </FormLabel>\n                            <ProductsPreviews\n                              text={\"Please Drag and Drop the product images\"}\n                            ></ProductsPreviews>\n                            {/* // image selection  */}\n                            {files.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                {files.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = files;\n                                            console.log(\">>>>>>\", temp, files);\n                                            temp.splice(index, 1);\n                                            setFiles([...temp]);\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={URL.createObjectURL(img)}\n                                          alt={img.name}\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // image Squence  Images */}\n                            {files.length > 0 && (\n                              <ImageSquence\n                                text={\"New Images\"}\n                                image={files}\n                                setImage={setFiles}\n                                savedImage={false}\n                              />\n                            )}\n                            {/* saved Image */}\n                            {changeData.savedImages.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                <FormLabel id=\"demo-radio-buttons-group-label\">\n                                  Saved Images\n                                </FormLabel>\n                                {changeData.savedImages.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = changeData.savedImages;\n                                            temp.splice(index, 1);\n                                            setData({\n                                              ...changeData,\n                                              savedImages: temp,\n                                            });\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={img}\n                                          alt=\"productImage\"\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // image Squence saved Images */}\n                            {changeData.savedImages.length > 0 && (\n                              <ImageSquence\n                                text={\"Saved Images\"}\n                                image={changeData.savedImages}\n                                setImage={setData}\n                                savedImage={true}\n                              />\n                            )}\n                            {/* // featured images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"featured_image\"\n                              label=\"Feature Image\"\n                              value={changeData.featured_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Featured Image\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              {/* {console.log(changeData.savedImages)} */}\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // specification images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"specification_image\"\n                              label=\"Specification Image\"\n                              value={changeData.specification_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your specification image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // Mannequin images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"mannequin_image\"\n                              label=\"Mannequin Image\"\n                              value={changeData.mannequin_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Mannequin Image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Images End */}\n\n                      {/* Features */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(2)}\n                        >\n                          Features\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <FormGroup>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.rotating_seats}\n                                    onChange={handleProductFields}\n                                    name=\"rotating_seats\"\n                                  />\n                                }\n                                label=\"Rotating Seats\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.eatable_oil_polish}\n                                    onChange={handleProductFields}\n                                    name=\"eatable_oil_polish\"\n                                  />\n                                }\n                                label=\"Eatable Oil Polished\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.no_chemical}\n                                    onChange={handleProductFields}\n                                    name=\"no_chemical\"\n                                  />\n                                }\n                                label=\"No Chemical Used\"\n                              />\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.weaving}\n                                    onChange={handleProductFields}\n                                    name=\"weaving\"\n                                  />\n                                }\n                                label=\"Weaving\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={\n                                      changeData.not_suitable_for_Micro_Dish\n                                    }\n                                    onChange={handleProductFields}\n                                    name=\"not_suitable_for_Micro_Dish\"\n                                  />\n                                }\n                                label=\"Not Suitable For Microwave/Dishwasher\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.tilt_top}\n                                    onChange={handleProductFields}\n                                    name=\"tilt_top\"\n                                  />\n                                }\n                                label=\"Tilt Top\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.inside_compartments}\n                                    onChange={handleProductFields}\n                                    name=\"inside_compartments\"\n                                  />\n                                }\n                                label=\"Inside Compartments\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.stackable}\n                                    onChange={handleProductFields}\n                                    name=\"stackable\"\n                                  />\n                                }\n                                label=\"Stackable\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.knife}\n                                    onChange={handleProductFields}\n                                    name=\"knife\"\n                                  />\n                                }\n                                label=\"Knife Friendly Surface\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.wall_hanging}\n                                    onChange={handleProductFields}\n                                    name=\"wall_hanging\"\n                                  />\n                                }\n                                label=\"Wall Hanging\"\n                              />\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.ceramic_drawer_included}\n                                    onChange={handleProductFields}\n                                    name=\"ceramic_drawer_included\"\n                                  />\n                                }\n                                label=\"Ceramic Drawers\"\n                              />\n\n                              {changeData.ceramic_drawer_included && (\n                                <>\n                                  <TextField\n                                    sx={{ mt: 2, mb: 1 }}\n                                    size=\"small\"\n                                    fullWidth\n                                    id=\"outlined-select\"\n                                    select\n                                    name=\"ceramic_drawer\"\n                                    label=\"Ceramic Drawer\"\n                                    multiple\n                                    value={changeData.ceramic_drawer}\n                                    onChange={handleProductFields}\n                                    helperText=\"Please select your Ceramic Tiles.\"\n                                  >\n                                    {catalog.ceramic_drawer.map(\n                                      (option) =>\n                                        option.status && (\n                                          <MenuItem\n                                            key={option.SKU}\n                                            value={option.SKU}\n                                          >\n                                            {option.title}\n                                          </MenuItem>\n                                        )\n                                    )}\n                                    <MenuItem key={\"none\"} value=\"None\">\n                                      {\"None\"}\n                                    </MenuItem>\n                                  </TextField>\n                                  <TextField\n                                    value={changeData.ceramic_drawer_qty}\n                                    onChange={handleProductFields}\n                                    size={\"small\"}\n                                    fullWidth\n                                    label=\"Ceramic Drawer Quantity\"\n                                    type=\"number\"\n                                    helperText=\"Enter the number of ceramic drawer included.\"\n                                    name=\"ceramic_drawer_qty\"\n                                  />\n                                </>\n                              )}\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.ceramic_tiles_included}\n                                    onChange={handleProductFields}\n                                    name=\"ceramic_tiles_included\"\n                                  />\n                                }\n                                label=\"Ceramic Tiles\"\n                              />\n                            </FormGroup>\n                            {changeData.ceramic_tiles_included && (\n                              <>\n                                <TextField\n                                  sx={{ mt: 2, mb: 1 }}\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"ceramic_tiles\"\n                                  label=\"Ceramic Tiles\"\n                                  multiple\n                                  value={changeData.ceramic_tiles}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your Ceramic Tiles.\"\n                                >\n                                  {catalog.ceramic_tiles.map(\n                                    (option) =>\n                                      option.status && (\n                                        <MenuItem\n                                          key={option.SKU}\n                                          value={option.SKU}\n                                        >\n                                          {option.title}\n                                        </MenuItem>\n                                      )\n                                  )}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n                                <TextField\n                                  value={changeData.ceramic_tiles_qty}\n                                  onChange={handleProductFields}\n                                  size={\"small\"}\n                                  fullWidth\n                                  label=\"Ceramic Tiles Quantity\"\n                                  type=\"number\"\n                                  helperText=\"Enter the number of ceramic tiles included.\"\n                                  name=\"ceramic_tiles_qty\"\n                                />\n                              </>\n                            )}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Features ends */}\n\n                      {/* Miscellaneous */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(3)}\n                        >\n                          Miscellaneous\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"back_style\"\n                              label=\"Back Style\"\n                              multiple\n                              value={changeData.back_style || \"\"}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Back Style.\"\n                            >\n                              {backStyleCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"weight_capacity\"\n                              label=\"Weight Capacity\"\n                              multiple\n                              value={changeData.weight_capacity}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Weight Capacity.\"\n                            >\n                              {weightCapCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Drawer\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.drawer || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"drawer\"\n                              >\n                                <FormControlLabel\n                                  value=\"mechanical\"\n                                  control={<Radio />}\n                                  label=\"Mechanical\"\n                                />\n                                <FormControlLabel\n                                  value=\"wooden\"\n                                  control={<Radio />}\n                                  label=\"Wooden\"\n                                />\n                                <FormControlLabel\n                                  value=\"none\"\n                                  control={<Radio />}\n                                  label=\"None\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {(changeData.drawer === \"mechanical\" ||\n                              changeData.drawer === \"wooden\") && (\n                              <TextField\n                                size=\"small\"\n                                fullWidth\n                                type=\"number\"\n                                id=\"outlined-select\"\n                                name=\"drawer_count\"\n                                label=\"Drawer Count\"\n                                value={changeData.drawer_count}\n                                onChange={handleProductFields}\n                              />\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Joints ((Useful in products where info about\n                                joints are shown))\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"joints\"\n                                value={changeData.joints}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"single\"\n                                  control={<Radio />}\n                                  label=\"Single\"\n                                />\n                                <FormControlLabel\n                                  value=\"multi\"\n                                  control={<Radio />}\n                                  label=\"Multiple\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Miscellaneous ends */}\n\n                      {/* Inventory & Shipping */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(4)}\n                        >\n                          Inventory & Shipping\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <FormGroup>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Return & Payment Policy\n                              </FormLabel>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.COD}\n                                    onChange={handleProductFields}\n                                    name=\"COD\"\n                                  />\n                                }\n                                label=\"COD Available\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.returnable}\n                                    onChange={handleProductFields}\n                                    name=\"returnable\"\n                                  />\n                                }\n                                label=\"Return Item\"\n                              />\n                            </FormGroup>\n                            {changeData.returnable && (\n                              <>\n                                <Typography\n                                  component={\"span\"}\n                                  variant=\"Caption\"\n                                >\n                                  {\" \"}\n                                  Return in {changeData.returnDays} Days\n                                </Typography>\n                                <Slider\n                                  aria-label=\"Return Days\"\n                                  defaultValue={0}\n                                  size=\"small\"\n                                  name=\"returnDays\"\n                                  value={changeData.returnDays}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your return days\"\n                                  valueLabelDisplay=\"auto\"\n                                />\n                              </>\n                            )}\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Polish in {changeData.polish_time} Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"Construction Days\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"polish_time\"\n                              value={changeData.polish_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your polish time\"\n                            />\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Manufactured in {\n                                changeData.manufacturing_time\n                              }{\" \"}\n                              Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"Construction Days\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"manufacturing_time\"\n                              value={changeData.manufacturing_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your manufacturing time\"\n                            />\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Stock Warehouse\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.warehouse}\n                              name=\"warehouse\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                            >\n                              {warehouse.map((option) => (\n                                <MenuItem\n                                  key={option.label}\n                                  value={option.value}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.warehouse.indexOf(\n                                        option.value\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText primary={option.value} />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            {changeData.warehouse.map((row) => {\n                              let stock;\n                              row === \"Jodhpur (Rajasthan)\"\n                                ? (stock = \"jodhpur_stock\")\n                                : (stock = \"bangalore_stock\");\n                              return (\n                                <>\n                                  <TextField\n                                    size=\"small\"\n                                    fullWidth\n                                    name={stock}\n                                    label={row + \" Stock\"}\n                                    type=\"number\"\n                                    value={changeData[stock] || \"\"}\n                                    onChange={handleProductFields}\n                                  />\n                                </>\n                              );\n                            })}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Length\"\n                              type=\"number\"\n                              value={changeData.package_length}\n                              onChange={handleProductFields}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_length\"\n                              helperText=\"From left to right\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_breadth\"\n                              value={changeData.package_breadth}\n                              onChange={handleProductFields}\n                              helperText=\"From front to back\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_height\"\n                              value={changeData.package_height}\n                              onChange={handleProductFields}\n                              helperText=\"From bottom to top\"\n                            />\n                            <Box sx={{ display: \"flex\", mb: 1 }}>\n                              <TextField\n                                size=\"small\"\n                                sx={{ width: \"90%\" }}\n                                id=\"fullWidth\"\n                                label=\"Quantity\"\n                                type=\"Number\"\n                                variant=\"outlined\"\n                                name=\"quantity\"\n                                value={changeData.quantity}\n                                onChange={handleProductFields}\n                              />\n\n                              <TextField\n                                id=\"outlined-select-currency\"\n                                select\n                                sx={{ ml: 1, width: \"10%\" }}\n                                size=\"small\"\n                                label=\"Unit\"\n                                name=\"unit\"\n                                value={changeData.unit || \"\"}\n                                onChange={handleProductFields}\n                              >\n                                {unitCatalog.map((option) => (\n                                  <MenuItem\n                                    key={option.value}\n                                    value={option.value}\n                                  >\n                                    {option.label}\n                                  </MenuItem>\n                                ))}\n                              </TextField>\n                            </Box>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Inventory & Shipping End */}\n\n                      {/* SEO */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(5)}\n                        >\n                          SEO\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_title\"\n                              value={changeData.seo_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Description\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_description\"\n                              value={changeData.seo_description}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Keyword\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_keyword\"\n                              value={changeData.seo_keyword}\n                              onChange={handleProductFields}\n                            />\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n                            <Grid container sx={{ mt: 1 }}>\n                              <Grid item xs={12}>\n                                <Grid\n                                  container\n                                  sx={{\n                                    display: \"flex\",\n                                    alignItem: \"center\",\n                                    justifyContent: \"space-between\",\n                                  }}\n                                >\n                                  <Grid item xs={11}>\n                                    <TextField\n                                      fullWidth\n                                      value={changeData.item || \"\"}\n                                      size={\"small\"}\n                                      type=\"text\"\n                                      name=\"item\"\n                                      onChange={handleProductFields}\n                                      label=\"Write a point...\"\n                                    />\n                                  </Grid>\n                                  <Grid item xs={0.8}>\n                                    {changeData.select === undefined ? (\n                                      <Button\n                                        fullWidth\n                                        onClick={() => {\n                                          changeData.item !== \"\" &&\n                                            setData({\n                                              ...changeData,\n                                              selling_points: [\n                                                ...changeData.selling_points,\n                                                changeData.item,\n                                              ],\n                                              item: \"\",\n                                            });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Add\n                                      </Button>\n                                    ) : (\n                                      <Button\n                                        onClick={() => {\n                                          setData({\n                                            ...changeData,\n                                            selling_points:\n                                              changeData.selling_points.filter(\n                                                (row, i) => {\n                                                  return (\n                                                    i !== changeData.select\n                                                  );\n                                                }\n                                              ),\n                                            select: undefined,\n                                          });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Remove\n                                      </Button>\n                                    )}\n                                  </Grid>\n                                </Grid>\n                              </Grid>\n                              {changeData.selling_points.length > 0 && (\n                                <Grid\n                                  sx={{\n                                    maxHeight: \"100px\",\n                                    overflowY: \"scroll\",\n                                    mb: 1,\n                                    border: \"2px solid #91441f\",\n                                    padding: \"7px\",\n                                  }}\n                                  item\n                                  xs={12}\n                                >\n                                  <ul style={{ listStyleType: \"square\" }}>\n                                    {changeData.selling_points &&\n                                      changeData.selling_points.map(\n                                        (item, index) => {\n                                          return (\n                                            <li>\n                                              <Typography\n                                                sx={{ cursor: \"pointer\" }}\n                                                onClick={() => {\n                                                  setData({\n                                                    ...changeData,\n                                                    select: index,\n                                                    item: item,\n                                                  });\n                                                }}\n                                                variant=\"body\"\n                                              >\n                                                {index + 1 + \". \"}\n                                                {item}\n                                              </Typography>\n                                            </li>\n                                          );\n                                        }\n                                      )}\n                                  </ul>\n                                </Grid>\n                              )}\n                            </Grid>\n                            {/* product description  */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Description\n                            </FormLabel>\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"product_description\"\n                              onChange={handleProductFields}\n                              defaultValue={changeData.product_description}\n                              type=\"text\"\n                              helperText=\"Please enter your product description\"\n                            />\n                            {/* <Editor\n                              apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                              onInit={(event, editor) =>\n                                (editorRef.current = editor)\n                              }\n                              init={{\n                                height: 300,\n                                menubar: true,\n                              }}\n                            /> */}\n                            {/* selling points  */}\n                            {/* <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"selling_points\"\n                              defaultValue={\"Selling Points\" || changeData.selling_points}\n                              type=\"text\"\n                              helperText=\"Please enter your selling points.\"\n                            /> */}\n                            {/* <Editor\n                              apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                              onInit={(event, editor) =>\n                                (sellingRef.current = editor)\n                              }\n                              init={{\n                                height: 400,\n                                menubar: true,\n                              }}\n                            /> */}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* SEO End */}\n\n                      {/* Extra-details */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(6)}\n                        >\n                          Extra-Details\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              type=\"number\"\n                              name=\"CVW\"\n                              label=\"CVW Number\"\n                              value={changeData.CVW || \"\"}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Wood Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"wood_weight\"\n                              value={changeData.wood_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\" Metallic Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"metal_weight\"\n                              value={changeData.metal_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Packaging Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_weight\"\n                              value={changeData.package_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"tax_rate\"\n                              label=\"Tax Rate\"\n                              value={changeData.tax_rate}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your tax rate.\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                            >\n                              {taxRateCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Silver\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.silver || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"silver\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.silver === \"yes\" && (\n                              <TextField\n                                size=\"small\"\n                                fullWidth\n                                // autoComplete={false}\n                                id=\"fullWidth\"\n                                label=\"Sliver Weight\"\n                                type=\"text\"\n                                InputProps={{\n                                  startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                      Gram\n                                    </InputAdornment>\n                                  ),\n                                }}\n                                variant=\"outlined\"\n                                name=\"silver_weight\"\n                                value={changeData.silver_weight}\n                                onChange={handleProductFields}\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"hinge\"\n                              label=\"Hinge\"\n                              multiple\n                              value={changeData.hinge}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your hinge.\"\n                            >\n                              {catalog.hinge.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.hinge !== \"None\" && (\n                              <TextField\n                                value={changeData.hinge_qty}\n                                size={\"small\"}\n                                helperText=\"Enter the number of hinges pieces .\"\n                                fullWidth\n                                onChange={handleProductFields}\n                                label=\"Hinge Quantity\"\n                                type=\"number\"\n                                name=\"hinge_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"knob\"\n                              label=\"Knob\"\n                              multiple\n                              value={changeData.knob}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your knob.\"\n                            >\n                              {console.log(catalog)}\n                              {catalog.knob.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.knob !== \"None\" && (\n                              <TextField\n                                size={\"small\"}\n                                fullWidth\n                                helperText=\"Enter the number of knob pieces .\"\n                                value={changeData.knob_qty}\n                                onChange={handleProductFields}\n                                label=\"Knob Quantity\"\n                                type=\"number\"\n                                name=\"knob_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"door\"\n                              label=\"Door\"\n                              multiple\n                              value={changeData.door}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your door.\"\n                            >\n                              {catalog.door.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.door !== \"None\" && (\n                              <TextField\n                                value={changeData.door_qty}\n                                helperText=\"Enter the number of doors.\"\n                                size={\"small\"}\n                                fullWidth\n                                onChange={handleProductFields}\n                                label=\"Door Quantity\"\n                                type=\"number\"\n                                name=\"door_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"handle\"\n                              label=\"Handle\"\n                              multiple\n                              value={changeData.handle}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your handle.\"\n                            >\n                              {catalog.handle.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.handle !== \"None\" && (\n                              <TextField\n                                value={changeData.handle_qty}\n                                helperText=\"Enter the number of handles.\"\n                                onChange={handleProductFields}\n                                size={\"small\"}\n                                fullWidth\n                                label=\"Handle Quantity\"\n                                type=\"number\"\n                                name=\"handle_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              label=\"Fitting\"\n                              name=\"fitting\"\n                              multiple\n                              value={changeData.fitting}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your fitting.\"\n                            >\n                              {catalog.fitting.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Mirror\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"mirror\"\n                                value={changeData.mirror || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.mirror === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // autoComplete={false}\n                                  id=\"fullWidth\"\n                                  label=\"Mirror Length\"\n                                  type=\"text\"\n                                  InputProps={{\n                                    startAdornment: (\n                                      <InputAdornment position=\"start\">\n                                        Inch\n                                      </InputAdornment>\n                                    ),\n                                  }}\n                                  variant=\"outlined\"\n                                  value={changeData.mirror_length}\n                                  onChange={handleProductFields}\n                                  name=\"mirror_length\"\n                                />\n\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // autoComplete={false}\n                                  id=\"fullWidth\"\n                                  label=\"Mirror Width\"\n                                  type=\"text\"\n                                  InputProps={{\n                                    startAdornment: (\n                                      <InputAdornment position=\"start\">\n                                        Inch\n                                      </InputAdornment>\n                                    ),\n                                  }}\n                                  variant=\"outlined\"\n                                  name=\"mirror_width\"\n                                  value={changeData.mirror_width}\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Top Size Length\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"top_size_length\"\n                              value={changeData.top_size_length}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Top Size Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"top_size_breadth\"\n                              value={changeData.top_size_breadth}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Dial Size (Only Applicable on Clock And Clock Containing Items )\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              value={changeData.dial_size}\n                              onChange={handleProductFields}\n                              name=\"dial_size\"\n                            />\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Wheel Included\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"wheel_included\"\n                                value={changeData.wheel_included || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.wheel_included === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"wheel\"\n                                  label=\"Wheel\"\n                                  multiple\n                                  value={changeData.wheel}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your wheel.\"\n                                >\n                                  {catalog.wheel.map(\n                                    (option) =>\n                                      option.status && (\n                                        <MenuItem\n                                          key={option.SKU}\n                                          value={option.SKU}\n                                        >\n                                          {option.title}\n                                        </MenuItem>\n                                      )\n                                  )}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n                                <TextField\n                                  value={changeData.wheel_qty}\n                                  onChange={handleProductFields}\n                                  size={\"small\"}\n                                  fullWidth\n                                  label=\"Wheel Quantity\"\n                                  type=\"number\"\n                                  helperText=\"Enter the number of wheel included.\"\n                                  name=\"wheel_qty\"\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Trolley\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"trolley\"\n                                value={changeData.trolley || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.trolley === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"trolley_material\"\n                                  label=\"Trolly Material\"\n                                  multiple\n                                  value={changeData.trolley_material}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your Trolly Material \"\n                                >\n                                  {trollyMaterial.map((option) => (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option.value}\n                                    >\n                                      {option.label}\n                                    </MenuItem>\n                                  ))}\n                                </TextField>\n                              </>\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Seating Size Width\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"seating_size_width\"\n                              value={changeData.seating_size_width}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Seating Size Width Depth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"seating_size_depth\"\n                              value={changeData.seating_size_depth}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Seating Size Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"seating_size_height\"\n                              value={changeData.seating_size_height}\n                              onChange={handleProductFields}\n                            />\n                            {/* \n                          <FormControl>\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Textile\n                            </FormLabel>\n                            <RadioGroup\n                              sx={{ mb : 1 }}\n\n                              aria-labelledby=\"demo-radio-buttons-group-label\"\n                              value={changeData.textile || \"no\"}\n                              onChange={handleProductFields}\n                              name=\"textile\"\n                            >\n                              <FormControlLabel\n                                value=\"yes\"\n                                control={<Radio />}\n                                label=\"Yes\"\n                              />\n                              <FormControlLabel\n                                value=\"no\"\n                                control={<Radio />}\n                                label=\"No\"\n                              />\n                            </RadioGroup>\n                          </FormControl>\n\n\n                          {changeData.textile === \"yes\" && (\n                            <TextField sx={{ mb : 1 }}\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"textile_type\"\n                              label=\"Textile\"\n                              value={changeData.textile_type}\n                              onChange={handleProductFields}\n                              multiple\n                              helperText=\"Please select your textile.\"\n                            >\n                              {catalog.textile.map(\n                                (option) => option.status && <MenuItem\n                                  key={option.SKU}\n                                  value={option.SKU}\n                                >\n                                  {option.title}\n                                </MenuItem>\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          )}\n\n                            */}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Plywood Included\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.plywood || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"plywood\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Mattress\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.mattress || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"mattress\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.mattress === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  type=\"number\"\n                                  id=\"outlined-select\"\n                                  name=\"mattress_length\"\n                                  label=\"Mattress Length\"\n                                  value={changeData.mattress_length}\n                                  onChange={handleProductFields}\n                                />\n                                <TextField\n                                  size=\"small\"\n                                  type=\"number\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  name=\"mattress_breadth\"\n                                  label=\"Mattress Breadth\"\n                                  value={changeData.mattress_breadth}\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Cradle Bed\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.cradle_bed || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"cradle_bed\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.cradle_bed === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  type=\"number\"\n                                  id=\"outlined-select\"\n                                  name=\"cradle_bed_height\"\n                                  label=\"Cradle Bed Height\"\n                                  value={changeData.cradle_bed_height}\n                                  onChange={handleProductFields}\n                                />\n                                <TextField\n                                  size=\"small\"\n                                  type=\"number\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  name=\"cradle_bed_width\"\n                                  label=\"Cradle Bed Width\"\n                                  value={changeData.cradle_bed_width}\n                                  onChange={handleProductFields}\n                                />\n                                <TextField\n                                  size=\"small\"\n                                  type=\"number\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  name=\"cradle_bed_depth\"\n                                  label=\"Cradle Bed Depth\"\n                                  value={changeData.cradle_bed_depth}\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Upholstery\n                              </FormLabel>\n                              <RadioGroup\n                                defaultValue=\"no\"\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                // onChange={(e) => {\n                                //   setShowFabric(e.target.value);\n                                // }}\n\n                                value={changeData.upholstery || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"upholstery\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.upholstery === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"fabric\"\n                                  label=\"Fabric\"\n                                  multiple\n                                  value={changeData.fabric}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your fabric.\"\n                                >\n                                  {catalog.fabric.map(\n                                    (option) =>\n                                      option.status && (\n                                        <MenuItem\n                                          key={option.SKU}\n                                          value={option.SKU}\n                                        >\n                                          {option.title}\n                                        </MenuItem>\n                                      )\n                                  )}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n\n                                <TextField\n                                  value={changeData.fabric_qty}\n                                  onChange={handleProductFields}\n                                  size={\"small\"}\n                                  fullWidth\n                                  label=\"Fabric Quantity\"\n                                  type=\"number\"\n                                  helperText=\"Enter the fabric quantity in meter.\"\n                                  name=\"fabric_qty\"\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Vendor URLs\n                              </FormLabel>\n                            </FormControl>\n                            <TextField\n                              type=\"url\"\n                              fullWidth\n                              size=\"small\"\n                              name=\"amazon_url\"\n                              label=\"Amazon\"\n                              onChange={handleProductFields}\n                              value={changeData.amazon_url || \"\"}\n                              placeholder=\"https://example.com\"\n                              pattern=\"https://.*\"\n                            />\n                            <TextField\n                              type=\"url\"\n                              size=\"small\"\n                              fullWidth\n                              placeholder=\"https://example.com\"\n                              pattern=\"https://.*\"\n                              name=\"flipkart_url\"\n                              label=\"Flipkart\"\n                              onChange={handleProductFields}\n                              value={changeData.flipkart_url || \"\"}\n                            />\n                            <TextField\n                              type=\"url\"\n                              size=\"small\"\n                              fullWidth\n                              placeholder=\"https://example.com\"\n                              pattern=\"https://.*\"\n                              name=\"jiomart_url\"\n                              label=\"Jio Mart\"\n                              onChange={handleProductFields}\n                              value={changeData.jiomart_url || \"\"}\n                            />\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Extra-details End */}\n                    </Stepper>\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Product\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* update Products Ends */}\n            {/* Variation Products */}\n\n            {form.formType === \"variation\" && (\n              <Grid container p={5} className=\"productPadding\">\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Create Variation\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add variation of product and necessary information from\n                      here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleVariation);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <Stepper\n                      className=\"stepper\"\n                      activeStep={activeStep}\n                      orientation=\"vertical\"\n                    >\n                      {/* // Specification */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(0)}\n                        >\n                          Specifications\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              disabled\n                              id=\"fullWidth\"\n                              required\n                              label=\"ACIN Number\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"ACIN\"\n                              value={changeData.ACIN}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // // required\n                              label=\"SKU\"\n                              type=\"text\"\n                              value={SKU}\n                              disabled\n                              variant=\"outlined\"\n                              name=\"SKU\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              required\n                              id=\"outlined-select\"\n                              select\n                              name=\"category_name\"\n                              label=\"Category\"\n                              value={changeData.category_name || \"\"}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your category\"\n                            >\n                              {category.map(\n                                (option) =>\n                                  option.category_status && (\n                                    <MenuItem\n                                      key={option._id}\n                                      value={option._id}\n                                    >\n                                      {option.category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"sub_category_name\"\n                              label=\"Sub Category\"\n                              multiple\n                              value={changeData.sub_category_name || \"\"}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your sub category\"\n                            >\n                              {subCategory.map(\n                                (option) =>\n                                  changeData.category_name ===\n                                    option.category_id && (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option._id}\n                                    >\n                                      {option.sub_category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"product_title\"\n                              value={changeData.product_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Showroom Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"showroom_price\"\n                              value={changeData.showroom_price}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              onChange={(e) => {\n                                handleDiscount(e);\n                                handleProductFields(e);\n                              }}\n                              label=\"Discount Limit\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"discount_limit\"\n                              value={changeData.discount_limit}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // disabled\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Selling Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              value={\n                                // changeData.MRP > 0 &&\n                                //   changeData.discount_limit > 0\n                                //   ? (changeData.selling_price =\n                                //     changeData.MRP -\n                                //     (changeData.MRP / 100) *\n                                //     changeData.discount_limit)\n                                //   : 0\n                                changeData.selling_price\n                              }\n                              onChange={handleProductFields}\n                              variant=\"outlined\"\n                              name=\"selling_price\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Length\"\n                              type=\"number\"\n                              value={changeData.length_main}\n                              onChange={handleProductFields}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"length_main\"\n                              helperText=\"From left to right\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"breadth\"\n                              value={changeData.breadth}\n                              onChange={handleProductFields}\n                              helperText=\"From front to back\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"height\"\n                              value={changeData.height}\n                              onChange={handleProductFields}\n                              helperText=\"From bottom to top\"\n                            />\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Material\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.primary_material || []}\n                              name=\"primary_material\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                              // MenuProps={MenuProps}\n                            >\n                              {materialCatalog.map((option) => (\n                                <MenuItem\n                                  key={option._id}\n                                  value={option.primaryMaterial_name}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.primary_material.indexOf(\n                                        option.primaryMaterial_name\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText\n                                    primary={option.primaryMaterial_name}\n                                  />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            {/* <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"range\"\n                              label=\"Range\"\n                              multiple\n                              value={changeData.range || \"\"}\n                              onChange={handleProductFields}\n                              helperText=\"Please select the range.\"\n                            >\n                              {rangeCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField> */}\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Polish\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.polish || []}\n                              name=\"polish\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                              // MenuProps={MenuProps}\n                            >\n                              {catalog.polish.length > 0 &&\n                                catalog.polish.map((option, index) => (\n                                  <MenuItem\n                                    key={option.polish_name}\n                                    value={option.polish_name}\n                                  >\n                                    <Checkbox\n                                      checked={\n                                        changeData.polish.indexOf(\n                                          option.polish_name\n                                        ) > -1\n                                      }\n                                    />\n                                    <ListItemText\n                                      primary={option.polish_name}\n                                    />\n                                  </MenuItem>\n                                ))}\n                            </Select>\n                            {/* <TextField sx={{ mb : 1 }}\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"polish\"\n                              label=\"Polish\"\n                              value={changeData.polish || \"\"}\n                              onChange={handleProductFields}\n                              multiple\n                              helperText=\"Please select your Polish.\"\n                            >\n                              {polishCatalog.map(\n                                (option) =>\n                                  option.polish_status && (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option._id}\n                                    >\n                                      {option.polish_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField> */}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Assembly\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"assembly_required\"\n                                value={changeData.assembly_required || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"shipping\"\n                                  control={<Radio />}\n                                  label=\"Shipping In Part\"\n                                />\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.assembly_required === \"shipping\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // required\n                                  // autoComplete={false}\n                                  id=\"fullWidth\"\n                                  label=\"Assemble Part\"\n                                  type=\"number\"\n                                  InputProps={{\n                                    startAdornment: (\n                                      <InputAdornment position=\"start\">\n                                        No. of parts\n                                      </InputAdornment>\n                                    ),\n                                  }}\n                                  variant=\"outlined\"\n                                  name=\"assembly_part\"\n                                  value={\n                                    changeData.assembly_part > -1 &&\n                                    changeData.assembly_part < 3\n                                      ? changeData.assembly_part\n                                      : 0\n                                  }\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            {changeData.assembly_required === \"yes\" && (\n                              <>\n                                <TextField\n                                  sx={{ mt: 1, mb: 1 }}\n                                  size=\"small\"\n                                  fullWidth\n                                  // required\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"legs\"\n                                  label=\"Table Legs\"\n                                  value={changeData.legs || \"\"}\n                                  onChange={handleProductFields}\n                                  multiple\n                                  helperText=\"Please select your leg \"\n                                >\n                                  {legCatalog.map((option) => (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option.value}\n                                    >\n                                      {option.label}\n                                    </MenuItem>\n                                  ))}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // required\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"assembly_level\"\n                                  label=\"Assembly Level\"\n                                  value={changeData.assembly_level || \"\"}\n                                  onChange={handleProductFields}\n                                  multiple\n                                  helperText=\"Please select your assembly level \"\n                                >\n                                  {assemblyLevelCatalog.map((option) => (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option.value}\n                                    >\n                                      {option.label}\n                                    </MenuItem>\n                                  ))}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n                              </>\n                            )}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Availability\n                            </FormLabel>\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.mobile_store}\n                                  onChange={handleProductFields}\n                                  name=\"mobile_store\"\n                                  helperText=\"Check it if want it on mobile.\"\n                                />\n                              }\n                              label=\"Mobile Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.online_store}\n                                  onChange={handleProductFields}\n                                  name=\"online_store\"\n                                  helperText=\"Check it if want it on online store.\"\n                                />\n                              }\n                              label=\"Online Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.continue_selling}\n                                  onChange={handleProductFields}\n                                  name=\"continue_selling\"\n                                  helperText=\"Check it if want it to sell when out of Inventory.\"\n                                />\n                              }\n                              label=\"Continue Selling\"\n                            />\n                            {/*                            \n                             <TextField sx = {{mb : 2}}\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"MRP\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"MRP\"\n                              onChange={handleProductFields}\n                              value={changeData.MRP}\n                            /> */}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* // Specification Ends*/}\n\n                      {/* Images */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(1)}\n                        >\n                          Images\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            {/* <AcceptMaxFiles className=\"dorpContainer\"/> */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Images\n                            </FormLabel>\n                            <ProductsPreviews\n                              text={\"Please Drag and Drop the product images\"}\n                            ></ProductsPreviews>\n                            {/* // image selection  */}\n                            {files.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                {files.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = files;\n                                            console.log(\">>>>>>\", temp, files);\n                                            temp.splice(index, 1);\n                                            setFiles([...temp]);\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={URL.createObjectURL(img)}\n                                          alt={img.name}\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // image Squence  Images */}\n                            {files.length > 0 && (\n                              <ImageSquence\n                                text={\"New Images\"}\n                                image={files}\n                                setImage={setFiles}\n                                savedImage={false}\n                              />\n                            )}\n                            {/* saved Image */}\n                            {changeData.savedImages.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                <FormLabel id=\"demo-radio-buttons-group-label\">\n                                  Saved Images\n                                </FormLabel>\n                                {changeData.savedImages.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = changeData.savedImages;\n                                            temp.splice(index, 1);\n                                            setData({\n                                              ...changeData,\n                                              savedImages: temp,\n                                            });\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={img}\n                                          alt=\"productImage\"\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // image Squence saved Images */}\n                            {changeData.savedImages.length > 0 && (\n                              <ImageSquence\n                                text={\"Saved Images\"}\n                                image={changeData.savedImages}\n                                setImage={setData}\n                                savedImage={true}\n                              />\n                            )}\n                            {/* // featured images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"featured_image\"\n                              label=\"Feature Image\"\n                              value={changeData.featured_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Featured Image\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              {/* {console.log(changeData.savedImages)} */}\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // specification images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"specification_image\"\n                              label=\"Specification Image\"\n                              value={changeData.specification_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your specification image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // Mannequin images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"mannequin_image\"\n                              label=\"Mannequin Image\"\n                              value={changeData.mannequin_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Mannequin Image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Images End */}\n\n                      {/* Features */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(2)}\n                        >\n                          Features\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <FormGroup>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.rotating_seats}\n                                    onChange={handleProductFields}\n                                    name=\"rotating_seats\"\n                                  />\n                                }\n                                label=\"Rotating Seats\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.eatable_oil_polish}\n                                    onChange={handleProductFields}\n                                    name=\"eatable_oil_polish\"\n                                  />\n                                }\n                                label=\"Eatable Oil Polished\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.no_chemical}\n                                    onChange={handleProductFields}\n                                    name=\"no_chemical\"\n                                  />\n                                }\n                                label=\"No Chemical Used\"\n                              />\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.weaving}\n                                    onChange={handleProductFields}\n                                    name=\"weaving\"\n                                  />\n                                }\n                                label=\"Weaving\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={\n                                      changeData.not_suitable_for_Micro_Dish\n                                    }\n                                    onChange={handleProductFields}\n                                    name=\"not_suitable_for_Micro_Dish\"\n                                  />\n                                }\n                                label=\"Not Suitable For Microwave/Dishwasher\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.tilt_top}\n                                    onChange={handleProductFields}\n                                    name=\"tilt_top\"\n                                  />\n                                }\n                                label=\"Tilt Top\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.inside_compartments}\n                                    onChange={handleProductFields}\n                                    name=\"inside_compartments\"\n                                  />\n                                }\n                                label=\"Inside Compartments\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.stackable}\n                                    onChange={handleProductFields}\n                                    name=\"stackable\"\n                                  />\n                                }\n                                label=\"Stackable\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.knife}\n                                    onChange={handleProductFields}\n                                    name=\"knife\"\n                                  />\n                                }\n                                label=\"Knife Friendly Surface\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.wall_hanging}\n                                    onChange={handleProductFields}\n                                    name=\"wall_hanging\"\n                                  />\n                                }\n                                label=\"Wall Hanging\"\n                              />\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.ceramic_drawer_included}\n                                    onChange={handleProductFields}\n                                    name=\"ceramic_drawer_included\"\n                                  />\n                                }\n                                label=\"Ceramic Drawers\"\n                              />\n\n                              {changeData.ceramic_drawer_included && (\n                                <>\n                                  <TextField\n                                    sx={{ mt: 2, mb: 1 }}\n                                    size=\"small\"\n                                    fullWidth\n                                    id=\"outlined-select\"\n                                    select\n                                    name=\"ceramic_drawer\"\n                                    label=\"Ceramic Drawer\"\n                                    multiple\n                                    value={changeData.ceramic_drawer}\n                                    onChange={handleProductFields}\n                                    helperText=\"Please select your Ceramic Tiles.\"\n                                  >\n                                    {catalog.ceramic_drawer.map(\n                                      (option) =>\n                                        option.status && (\n                                          <MenuItem\n                                            key={option.SKU}\n                                            value={option.SKU}\n                                          >\n                                            {option.title}\n                                          </MenuItem>\n                                        )\n                                    )}\n                                    <MenuItem key={\"none\"} value=\"None\">\n                                      {\"None\"}\n                                    </MenuItem>\n                                  </TextField>\n                                  <TextField\n                                    value={changeData.ceramic_drawer_qty}\n                                    onChange={handleProductFields}\n                                    size={\"small\"}\n                                    fullWidth\n                                    label=\"Ceramic Drawer Quantity\"\n                                    type=\"number\"\n                                    helperText=\"Enter the number of ceramic drawer included.\"\n                                    name=\"ceramic_drawer_qty\"\n                                  />\n                                </>\n                              )}\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.ceramic_tiles_included}\n                                    onChange={handleProductFields}\n                                    name=\"ceramic_tiles_included\"\n                                  />\n                                }\n                                label=\"Ceramic Tiles\"\n                              />\n                            </FormGroup>\n                            {changeData.ceramic_tiles_included && (\n                              <>\n                                <TextField\n                                  sx={{ mt: 2, mb: 1 }}\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"ceramic_tiles\"\n                                  label=\"Ceramic Tiles\"\n                                  multiple\n                                  value={changeData.ceramic_tiles}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your Ceramic Tiles.\"\n                                >\n                                  {catalog.ceramic_tiles.map(\n                                    (option) =>\n                                      option.status && (\n                                        <MenuItem\n                                          key={option.SKU}\n                                          value={option.SKU}\n                                        >\n                                          {option.title}\n                                        </MenuItem>\n                                      )\n                                  )}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n                                <TextField\n                                  value={changeData.ceramic_tiles_qty}\n                                  onChange={handleProductFields}\n                                  size={\"small\"}\n                                  fullWidth\n                                  label=\"Ceramic Tiles Quantity\"\n                                  type=\"number\"\n                                  helperText=\"Enter the number of ceramic tiles included.\"\n                                  name=\"ceramic_tiles_qty\"\n                                />\n                              </>\n                            )}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Features ends */}\n\n                      {/* Miscellaneous */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(3)}\n                        >\n                          Miscellaneous\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"back_style\"\n                              label=\"Back Style\"\n                              multiple\n                              value={changeData.back_style || \"\"}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Back Style.\"\n                            >\n                              {backStyleCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"weight_capacity\"\n                              label=\"Weight Capacity\"\n                              multiple\n                              value={changeData.weight_capacity}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Weight Capacity.\"\n                            >\n                              {weightCapCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Drawer\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.drawer || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"drawer\"\n                              >\n                                <FormControlLabel\n                                  value=\"mechanical\"\n                                  control={<Radio />}\n                                  label=\"Mechanical\"\n                                />\n                                <FormControlLabel\n                                  value=\"wooden\"\n                                  control={<Radio />}\n                                  label=\"Wooden\"\n                                />\n                                <FormControlLabel\n                                  value=\"none\"\n                                  control={<Radio />}\n                                  label=\"None\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {(changeData.drawer === \"mechanical\" ||\n                              changeData.drawer === \"wooden\") && (\n                              <TextField\n                                size=\"small\"\n                                fullWidth\n                                type=\"number\"\n                                id=\"outlined-select\"\n                                name=\"drawer_count\"\n                                label=\"Drawer Count\"\n                                value={changeData.drawer_count}\n                                onChange={handleProductFields}\n                              />\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Joints ((Useful in products where info about\n                                joints are shown))\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"joints\"\n                                value={changeData.joints}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"single\"\n                                  control={<Radio />}\n                                  label=\"Single\"\n                                />\n                                <FormControlLabel\n                                  value=\"multi\"\n                                  control={<Radio />}\n                                  label=\"Multiple\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Miscellaneous ends */}\n\n                      {/* Inventory & Shipping */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(4)}\n                        >\n                          Inventory & Shipping\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <FormGroup>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Return & Payment Policy\n                              </FormLabel>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.COD}\n                                    onChange={handleProductFields}\n                                    name=\"COD\"\n                                  />\n                                }\n                                label=\"COD Available\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.returnable}\n                                    onChange={handleProductFields}\n                                    name=\"returnable\"\n                                  />\n                                }\n                                label=\"Return Item\"\n                              />\n                            </FormGroup>\n                            {changeData.returnable && (\n                              <>\n                                <Typography\n                                  component={\"span\"}\n                                  variant=\"Caption\"\n                                >\n                                  {\" \"}\n                                  Return in {changeData.returnDays} Days\n                                </Typography>\n                                <Slider\n                                  aria-label=\"Return Days\"\n                                  defaultValue={0}\n                                  size=\"small\"\n                                  name=\"returnDays\"\n                                  value={changeData.returnDays}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your return days\"\n                                  valueLabelDisplay=\"auto\"\n                                />\n                              </>\n                            )}\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Polish in {changeData.polish_time} Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"Construction Days\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"polish_time\"\n                              value={changeData.polish_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your polish time\"\n                            />\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Manufactured in {\n                                changeData.manufacturing_time\n                              }{\" \"}\n                              Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"Construction Days\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"manufacturing_time\"\n                              value={changeData.manufacturing_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your manufacturing time\"\n                            />\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Stock Warehouse\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.warehouse}\n                              name=\"warehouse\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                            >\n                              {warehouse.map((option) => (\n                                <MenuItem\n                                  key={option.label}\n                                  value={option.value}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.warehouse.indexOf(\n                                        option.value\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText primary={option.value} />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            {changeData.warehouse.map((row) => {\n                              let stock;\n                              row === \"Jodhpur (Rajasthan)\"\n                                ? (stock = \"jodhpur_stock\")\n                                : (stock = \"bangalore_stock\");\n                              return (\n                                <>\n                                  <TextField\n                                    size=\"small\"\n                                    fullWidth\n                                    name={stock}\n                                    label={row + \" Stock\"}\n                                    type=\"number\"\n                                    value={changeData[stock] || \"\"}\n                                    onChange={handleProductFields}\n                                  />\n                                </>\n                              );\n                            })}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Length\"\n                              type=\"number\"\n                              value={changeData.package_length}\n                              onChange={handleProductFields}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_length\"\n                              helperText=\"From left to right\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_breadth\"\n                              value={changeData.package_breadth}\n                              onChange={handleProductFields}\n                              helperText=\"From front to back\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_height\"\n                              value={changeData.package_height}\n                              onChange={handleProductFields}\n                              helperText=\"From bottom to top\"\n                            />\n                            <Box sx={{ display: \"flex\", mb: 1 }}>\n                              <TextField\n                                size=\"small\"\n                                sx={{ width: \"90%\" }}\n                                id=\"fullWidth\"\n                                label=\"Quantity\"\n                                type=\"Number\"\n                                variant=\"outlined\"\n                                name=\"quantity\"\n                                value={changeData.quantity}\n                                onChange={handleProductFields}\n                              />\n\n                              <TextField\n                                id=\"outlined-select-currency\"\n                                select\n                                sx={{ ml: 1, width: \"10%\" }}\n                                size=\"small\"\n                                label=\"Unit\"\n                                name=\"unit\"\n                                value={changeData.unit || \"\"}\n                                onChange={handleProductFields}\n                              >\n                                {unitCatalog.map((option) => (\n                                  <MenuItem\n                                    key={option.value}\n                                    value={option.value}\n                                  >\n                                    {option.label}\n                                  </MenuItem>\n                                ))}\n                              </TextField>\n                            </Box>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Inventory & Shipping End */}\n\n                      {/* SEO */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(5)}\n                        >\n                          SEO\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_title\"\n                              value={changeData.seo_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Description\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_description\"\n                              value={changeData.seo_description}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Keyword\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_keyword\"\n                              value={changeData.seo_keyword}\n                              onChange={handleProductFields}\n                            />\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n                            <Grid container sx={{ mt: 1 }}>\n                              <Grid item xs={12}>\n                                <Grid\n                                  container\n                                  sx={{\n                                    display: \"flex\",\n                                    alignItem: \"center\",\n                                    justifyContent: \"space-between\",\n                                  }}\n                                >\n                                  <Grid item xs={11}>\n                                    <TextField\n                                      fullWidth\n                                      value={changeData.item || \"\"}\n                                      size={\"small\"}\n                                      type=\"text\"\n                                      name=\"item\"\n                                      onChange={handleProductFields}\n                                      label=\"Write a point...\"\n                                    />\n                                  </Grid>\n                                  <Grid item xs={0.8}>\n                                    {changeData.select === undefined ? (\n                                      <Button\n                                        fullWidth\n                                        onClick={() => {\n                                          changeData.item !== \"\" &&\n                                            setData({\n                                              ...changeData,\n                                              selling_points: [\n                                                ...changeData.selling_points,\n                                                changeData.item,\n                                              ],\n                                              item: \"\",\n                                            });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Add\n                                      </Button>\n                                    ) : (\n                                      <Button\n                                        onClick={() => {\n                                          setData({\n                                            ...changeData,\n                                            selling_points:\n                                              changeData.selling_points.filter(\n                                                (row, i) => {\n                                                  return (\n                                                    i !== changeData.select\n                                                  );\n                                                }\n                                              ),\n                                            select: undefined,\n                                          });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Remove\n                                      </Button>\n                                    )}\n                                  </Grid>\n                                </Grid>\n                              </Grid>\n                              {changeData.selling_points.length > 0 && (\n                                <Grid\n                                  sx={{\n                                    maxHeight: \"100px\",\n                                    overflowY: \"scroll\",\n                                    mb: 1,\n                                    border: \"2px solid #91441f\",\n                                    padding: \"7px\",\n                                  }}\n                                  item\n                                  xs={12}\n                                >\n                                  <ul style={{ listStyleType: \"square\" }}>\n                                    {changeData.selling_points &&\n                                      changeData.selling_points.map(\n                                        (item, index) => {\n                                          return (\n                                            <li>\n                                              <Typography\n                                                sx={{ cursor: \"pointer\" }}\n                                                onClick={() => {\n                                                  setData({\n                                                    ...changeData,\n                                                    select: index,\n                                                    item: item,\n                                                  });\n                                                }}\n                                                variant=\"body\"\n                                              >\n                                                {index + 1 + \". \"}\n                                                {item}\n                                              </Typography>\n                                            </li>\n                                          );\n                                        }\n                                      )}\n                                  </ul>\n                                </Grid>\n                              )}\n                            </Grid>\n                            {/* product description  */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Description\n                            </FormLabel>\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"product_description\"\n                              onChange={handleProductFields}\n                              defaultValue={changeData.product_description}\n                              type=\"text\"\n                              helperText=\"Please enter your product description\"\n                            />\n                            {/* <Editor\n                              apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                              onInit={(event, editor) =>\n                                (editorRef.current = editor)\n                              }\n                              init={{\n                                height: 300,\n                                menubar: true,\n                              }}\n                            /> */}\n                            {/* selling points  */}\n                            {/* <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"selling_points\"\n                              defaultValue={\"Selling Points\" || changeData.selling_points}\n                              type=\"text\"\n                              helperText=\"Please enter your selling points.\"\n                            /> */}\n                            {/* <Editor\n                              apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                              onInit={(event, editor) =>\n                                (sellingRef.current = editor)\n                              }\n                              init={{\n                                height: 400,\n                                menubar: true,\n                              }}\n                            /> */}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* SEO End */}\n\n                      {/* Extra-details */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(6)}\n                        >\n                          Extra-Details\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              type=\"number\"\n                              name=\"CVW\"\n                              label=\"CVW Number\"\n                              value={changeData.CVW || \"\"}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Wood Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"wood_weight\"\n                              value={changeData.wood_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\" Metallic Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"metal_weight\"\n                              value={changeData.metal_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Packaging Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_weight\"\n                              value={changeData.package_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"tax_rate\"\n                              label=\"Tax Rate\"\n                              value={changeData.tax_rate}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your tax rate.\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                            >\n                              {taxRateCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Silver\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.silver || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"silver\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.silver === \"yes\" && (\n                              <TextField\n                                size=\"small\"\n                                fullWidth\n                                // autoComplete={false}\n                                id=\"fullWidth\"\n                                label=\"Sliver Weight\"\n                                type=\"text\"\n                                InputProps={{\n                                  startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                      Gram\n                                    </InputAdornment>\n                                  ),\n                                }}\n                                variant=\"outlined\"\n                                name=\"silver_weight\"\n                                value={changeData.silver_weight}\n                                onChange={handleProductFields}\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"hinge\"\n                              label=\"Hinge\"\n                              multiple\n                              value={changeData.hinge}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your hinge.\"\n                            >\n                              {catalog.hinge.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.hinge !== \"None\" && (\n                              <TextField\n                                value={changeData.hinge_qty}\n                                size={\"small\"}\n                                helperText=\"Enter the number of hinges pieces .\"\n                                fullWidth\n                                onChange={handleProductFields}\n                                label=\"Hinge Quantity\"\n                                type=\"number\"\n                                name=\"hinge_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"knob\"\n                              label=\"Knob\"\n                              multiple\n                              value={changeData.knob}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your knob.\"\n                            >\n                              {console.log(catalog)}\n                              {catalog.knob.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.knob !== \"None\" && (\n                              <TextField\n                                size={\"small\"}\n                                fullWidth\n                                helperText=\"Enter the number of knob pieces .\"\n                                value={changeData.knob_qty}\n                                onChange={handleProductFields}\n                                label=\"Knob Quantity\"\n                                type=\"number\"\n                                name=\"knob_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"door\"\n                              label=\"Door\"\n                              multiple\n                              value={changeData.door}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your door.\"\n                            >\n                              {catalog.door.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.door !== \"None\" && (\n                              <TextField\n                                value={changeData.door_qty}\n                                helperText=\"Enter the number of doors.\"\n                                size={\"small\"}\n                                fullWidth\n                                onChange={handleProductFields}\n                                label=\"Door Quantity\"\n                                type=\"number\"\n                                name=\"door_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"handle\"\n                              label=\"Handle\"\n                              multiple\n                              value={changeData.handle}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your handle.\"\n                            >\n                              {catalog.handle.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.handle !== \"None\" && (\n                              <TextField\n                                value={changeData.handle_qty}\n                                helperText=\"Enter the number of handles.\"\n                                onChange={handleProductFields}\n                                size={\"small\"}\n                                fullWidth\n                                label=\"Handle Quantity\"\n                                type=\"number\"\n                                name=\"handle_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              label=\"Fitting\"\n                              name=\"fitting\"\n                              multiple\n                              value={changeData.fitting}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your fitting.\"\n                            >\n                              {catalog.fitting.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Mirror\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"mirror\"\n                                value={changeData.mirror || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.mirror === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // autoComplete={false}\n                                  id=\"fullWidth\"\n                                  label=\"Mirror Length\"\n                                  type=\"text\"\n                                  InputProps={{\n                                    startAdornment: (\n                                      <InputAdornment position=\"start\">\n                                        Inch\n                                      </InputAdornment>\n                                    ),\n                                  }}\n                                  variant=\"outlined\"\n                                  value={changeData.mirror_length}\n                                  onChange={handleProductFields}\n                                  name=\"mirror_length\"\n                                />\n\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // autoComplete={false}\n                                  id=\"fullWidth\"\n                                  label=\"Mirror Width\"\n                                  type=\"text\"\n                                  InputProps={{\n                                    startAdornment: (\n                                      <InputAdornment position=\"start\">\n                                        Inch\n                                      </InputAdornment>\n                                    ),\n                                  }}\n                                  variant=\"outlined\"\n                                  name=\"mirror_width\"\n                                  value={changeData.mirror_width}\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Top Size Length\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"top_size_length\"\n                              value={changeData.top_size_length}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Top Size Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"top_size_breadth\"\n                              value={changeData.top_size_breadth}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Dial Size (Only Applicable on Clock And Clock Containing Items )\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              value={changeData.dial_size}\n                              onChange={handleProductFields}\n                              name=\"dial_size\"\n                            />\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Wheel Included\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"wheel_included\"\n                                value={changeData.wheel_included || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.wheel_included === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"wheel\"\n                                  label=\"Wheel\"\n                                  multiple\n                                  value={changeData.wheel}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your wheel.\"\n                                >\n                                  {catalog.wheel.map(\n                                    (option) =>\n                                      option.status && (\n                                        <MenuItem\n                                          key={option.SKU}\n                                          value={option.SKU}\n                                        >\n                                          {option.title}\n                                        </MenuItem>\n                                      )\n                                  )}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n                                <TextField\n                                  value={changeData.wheel_qty}\n                                  onChange={handleProductFields}\n                                  size={\"small\"}\n                                  fullWidth\n                                  label=\"Wheel Quantity\"\n                                  type=\"number\"\n                                  helperText=\"Enter the number of wheel included.\"\n                                  name=\"wheel_qty\"\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Trolley\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"trolley\"\n                                value={changeData.trolley || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.trolley === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"trolley_material\"\n                                  label=\"Trolly Material\"\n                                  multiple\n                                  value={changeData.trolley_material}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your Trolly Material \"\n                                >\n                                  {trollyMaterial.map((option) => (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option.value}\n                                    >\n                                      {option.label}\n                                    </MenuItem>\n                                  ))}\n                                </TextField>\n                              </>\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Seating Size Width\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"seating_size_width\"\n                              value={changeData.seating_size_width}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Seating Size Width Depth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"seating_size_depth\"\n                              value={changeData.seating_size_depth}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Seating Size Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"seating_size_height\"\n                              value={changeData.seating_size_height}\n                              onChange={handleProductFields}\n                            />\n                            {/* \n                          <FormControl>\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Textile\n                            </FormLabel>\n                            <RadioGroup\n                              sx={{ mb : 1 }}\n\n                              aria-labelledby=\"demo-radio-buttons-group-label\"\n                              value={changeData.textile || \"no\"}\n                              onChange={handleProductFields}\n                              name=\"textile\"\n                            >\n                              <FormControlLabel\n                                value=\"yes\"\n                                control={<Radio />}\n                                label=\"Yes\"\n                              />\n                              <FormControlLabel\n                                value=\"no\"\n                                control={<Radio />}\n                                label=\"No\"\n                              />\n                            </RadioGroup>\n                          </FormControl>\n\n\n                          {changeData.textile === \"yes\" && (\n                            <TextField sx={{ mb : 1 }}\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"textile_type\"\n                              label=\"Textile\"\n                              value={changeData.textile_type}\n                              onChange={handleProductFields}\n                              multiple\n                              helperText=\"Please select your textile.\"\n                            >\n                              {catalog.textile.map(\n                                (option) => option.status && <MenuItem\n                                  key={option.SKU}\n                                  value={option.SKU}\n                                >\n                                  {option.title}\n                                </MenuItem>\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          )}\n\n                            */}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Plywood Included\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.plywood || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"plywood\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Mattress\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.mattress || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"mattress\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.mattress === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  type=\"number\"\n                                  id=\"outlined-select\"\n                                  name=\"mattress_length\"\n                                  label=\"Mattress Length\"\n                                  value={changeData.mattress_length}\n                                  onChange={handleProductFields}\n                                />\n                                <TextField\n                                  size=\"small\"\n                                  type=\"number\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  name=\"mattress_breadth\"\n                                  label=\"Mattress Breadth\"\n                                  value={changeData.mattress_breadth}\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Cradle Bed\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.cradle_bed || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"cradle_bed\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.cradle_bed === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  type=\"number\"\n                                  id=\"outlined-select\"\n                                  name=\"cradle_bed_height\"\n                                  label=\"Cradle Bed Height\"\n                                  value={changeData.cradle_bed_height}\n                                  onChange={handleProductFields}\n                                />\n                                <TextField\n                                  size=\"small\"\n                                  type=\"number\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  name=\"cradle_bed_width\"\n                                  label=\"Cradle Bed Width\"\n                                  value={changeData.cradle_bed_width}\n                                  onChange={handleProductFields}\n                                />\n                                <TextField\n                                  size=\"small\"\n                                  type=\"number\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  name=\"cradle_bed_depth\"\n                                  label=\"Cradle Bed Depth\"\n                                  value={changeData.cradle_bed_depth}\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Upholstery\n                              </FormLabel>\n                              <RadioGroup\n                                defaultValue=\"no\"\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                // onChange={(e) => {\n                                //   setShowFabric(e.target.value);\n                                // }}\n\n                                value={changeData.upholstery || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"upholstery\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.upholstery === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"fabric\"\n                                  label=\"Fabric\"\n                                  multiple\n                                  value={changeData.fabric}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your fabric.\"\n                                >\n                                  {catalog.fabric.map(\n                                    (option) =>\n                                      option.status && (\n                                        <MenuItem\n                                          key={option.SKU}\n                                          value={option.SKU}\n                                        >\n                                          {option.title}\n                                        </MenuItem>\n                                      )\n                                  )}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n\n                                <TextField\n                                  value={changeData.fabric_qty}\n                                  onChange={handleProductFields}\n                                  size={\"small\"}\n                                  fullWidth\n                                  label=\"Fabric Quantity\"\n                                  type=\"number\"\n                                  helperText=\"Enter the fabric quantity in meter.\"\n                                  name=\"fabric_qty\"\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Vendor URLs\n                              </FormLabel>\n                            </FormControl>\n                            <TextField\n                              type=\"url\"\n                              fullWidth\n                              size=\"small\"\n                              name=\"amazon_url\"\n                              label=\"Amazon\"\n                              onChange={handleProductFields}\n                              value={changeData.amazon_url}\n                              placeholder=\"https://example.com\"\n                              pattern=\"https://.*\"\n                            />\n                            <TextField\n                              type=\"url\"\n                              size=\"small\"\n                              fullWidth\n                              placeholder=\"https://example.com\"\n                              pattern=\"https://.*\"\n                              name=\"flipkart_url\"\n                              label=\"Flipkart\"\n                              onChange={handleProductFields}\n                              value={changeData.flipkart_url}\n                            />\n                            <TextField\n                              type=\"url\"\n                              size=\"small\"\n                              fullWidth\n                              placeholder=\"https://example.com\"\n                              pattern=\"https://.*\"\n                              name=\"jiomart_url\"\n                              label=\"Jio Mart\"\n                              onChange={handleProductFields}\n                              value={changeData.jiomart_url}\n                            />\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Extra-details End */}\n                    </Stepper>\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Create Variation\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* Variation Products Ends */}\n\n            {/* merge Products */}\n\n            {form.formType === \"merge_product\" && (\n              <Grid container p={5} className=\"productPadding\">\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Merge Product\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Merge your products and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleMergeProduct);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <Stepper\n                      className=\"stepper\"\n                      activeStep={activeStep}\n                      orientation=\"vertical\"\n                    >\n                      {/* // Specification */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(0)}\n                        >\n                          Specifications\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 4}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // // required\n                              label=\"SKU\"\n                              type=\"text\"\n                              value={SKU}\n                              disabled\n                              variant=\"outlined\"\n                              name=\"SKU\"\n                            />\n                            <Autocomplete\n                              size=\"small\"\n                              fullWidth\n                              multiple\n                              autoHighlight\n                              noOptionsText={\"ex : P-01001\"}\n                              id=\"combo-box-demo\"\n                              options={productSKU.P_SKU.map((row) => {\n                                return row.SKU;\n                              })}\n                              value={changeData.product_articles}\n                              renderInput={(params) => (\n                                <TextField\n                                  onKeyUpCapture={handleSearch}\n                                  value={changeData.product_articles || \"\"}\n                                  {...params}\n                                  label=\"Product SKU\"\n                                />\n                              )}\n                              onChange={(e, newMember) =>\n                                setData((old) => ({\n                                  ...old,\n                                  product_articles: newMember,\n                                }))\n                              }\n                            />\n                            {changeData.product_articles.length > 0 && (\n                              <Box mt={1}>\n                                <Typography component={\"span\"} variant=\"body1\">\n                                  Product Quantities\n                                </Typography>\n                                <Box\n                                  p={1}\n                                  sx={{\n                                    display: \"flex\",\n                                    gap: \"5px\",\n                                    flexDirection: \"column\",\n                                    maxHeight: 150,\n                                    overflow: \"scroll\",\n                                  }}\n                                >\n                                  {changeData.product_articles.map((item) => (\n                                    <TextField\n                                      name={item}\n                                      fullWidth\n                                      size=\"small\"\n                                      type=\"number\"\n                                      InputProps={{\n                                        startAdornment: (\n                                          <InputAdornment position=\"start\">\n                                            {item}\n                                          </InputAdornment>\n                                        ),\n                                      }}\n                                      placeholder={item}\n                                      onChange={handleProductFields}\n                                      value={changeData[item] || 1}\n                                    />\n                                  ))}\n                                </Box>\n                              </Box>\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              required\n                              id=\"outlined-select\"\n                              select\n                              name=\"category_name\"\n                              label=\"Category\"\n                              value={changeData.category_name}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your category\"\n                            >\n                              {category.map(\n                                (option) =>\n                                  option.category_status && (\n                                    <MenuItem\n                                      key={option._id}\n                                      value={option._id}\n                                    >\n                                      {option.category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"sub_category_name\"\n                              label=\"Sub Category\"\n                              multiple\n                              value={changeData.sub_category_name}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your sub category\"\n                            >\n                              {subCategory.map(\n                                (option) =>\n                                  changeData.category_name ===\n                                    option.category_id && (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option._id}\n                                    >\n                                      {option.sub_category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"product_title\"\n                              value={changeData.product_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Showroom Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"showroom_price\"\n                              value={changeData.showroom_price}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              onChange={(e) => {\n                                handleDiscount(e);\n                                handleProductFields(e);\n                              }}\n                              label=\"Discount Limit\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"discount_limit\"\n                              value={changeData.discount_limit}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // disabled\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Selling Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              value={\n                                // changeData.MRP > 0 &&\n                                //   changeData.discount_limit > 0\n                                //   ? (changeData.selling_price =\n                                //     changeData.MRP -\n                                //     (changeData.MRP / 100) *\n                                //     changeData.discount_limit)\n                                //   : 0\n                                changeData.selling_price\n                              }\n                              onChange={handleProductFields}\n                              variant=\"outlined\"\n                              name=\"selling_price\"\n                            />\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Availability\n                            </FormLabel>\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.mobile_store}\n                                  onChange={handleProductFields}\n                                  name=\"mobile_store\"\n                                  helperText=\"Check it if want it on mobile.\"\n                                />\n                              }\n                              label=\"Mobile Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.online_store}\n                                  onChange={handleProductFields}\n                                  name=\"online_store\"\n                                  helperText=\"Check it if want it on online store.\"\n                                />\n                              }\n                              label=\"Online Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.continue_selling}\n                                  onChange={handleProductFields}\n                                  name=\"continue_selling\"\n                                  helperText=\"Check it if want it to sell when out of Inventory.\"\n                                />\n                              }\n                              label=\"Continue Selling\"\n                            />\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 4}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* // Specification Ends*/}\n\n                      {/* Images */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(1)}\n                        >\n                          Images\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            {/* <AcceptMaxFiles className=\"dorpContainer\"/> */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Images\n                            </FormLabel>\n                            <ProductsPreviews\n                              text={\n                                \"Make Sure the picture ratio should be in 1:1.\"\n                              }\n                            ></ProductsPreviews>\n                            {files.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                {files.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = files;\n                                            console.log(\">>>>>>\", temp, files);\n                                            temp.splice(index, 1);\n                                            setFiles([...temp]);\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={URL.createObjectURL(img)}\n                                          alt={img.name}\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // featured images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"featured_image\"\n                              label=\"Feature Image\"\n                              value={changeData.featured_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Featured Image\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // specification images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"specification_image\"\n                              label=\"Specification Image\"\n                              value={changeData.specification_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your specification image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // Mannequin images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"mannequin_image\"\n                              label=\"Mannequin Image\"\n                              value={changeData.mannequin_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Mannequin Image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Images End */}\n\n                      {/* Inventory & Shipping */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(2)}\n                        >\n                          Inventory & Shipping\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 4}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <FormGroup>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Return & Payment Policy\n                              </FormLabel>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.COD}\n                                    onChange={handleProductFields}\n                                    name=\"COD\"\n                                  />\n                                }\n                                label=\"COD Available\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.returnable}\n                                    onChange={handleProductFields}\n                                    name=\"returnable\"\n                                  />\n                                }\n                                label=\"Return Item\"\n                              />\n                            </FormGroup>\n                            {changeData.returnable && (\n                              <>\n                                <Typography\n                                  component={\"span\"}\n                                  variant=\"Caption\"\n                                >\n                                  {\" \"}\n                                  Return in {changeData.returnDays} Days\n                                </Typography>\n                                <Slider\n                                  aria-label=\"Return Days\"\n                                  defaultValue={0}\n                                  size=\"small\"\n                                  name=\"returnDays\"\n                                  value={changeData.returnDays}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your return days\"\n                                  valueLabelDisplay=\"auto\"\n                                />\n                              </>\n                            )}\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Polish in {changeData.polish_time} Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"Construction Days\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"polish_time\"\n                              value={changeData.polish_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your polish time\"\n                            />\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Manufactured in {\n                                changeData.manufacturing_time\n                              }{\" \"}\n                              Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"Construction Days\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"manufacturing_time\"\n                              value={changeData.manufacturing_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your manufacturing time\"\n                            />\n                            {/* <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Stock Warehouse\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.warehouse}\n                              name=\"warehouse\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                            >\n                              {warehouse.map((option) => (\n                                <MenuItem\n                                  key={option.label}\n                                  value={option.value}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.warehouse.indexOf(\n                                        option.value\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText primary={option.value} />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            {changeData.warehouse.map((row) => {\n                              let stock;\n                              row === \"Jodhpur (Rajasthan)\"\n                                ? (stock = \"jodhpur_stock\")\n                                : (stock = \"bangalore_stock\");\n                              return (\n                                <>\n                                  <TextField\n                                    size=\"small\"\n                                    fullWidth\n                                    name={stock}\n                                    label={row + \" Stock\"}\n                                    type=\"number\"\n                                    value={changeData[stock] || \"\"}\n                                    onChange={handleProductFields}\n                                  />\n                                </>\n                              );\n                            })} */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Length\"\n                              type=\"number\"\n                              value={changeData.package_length}\n                              onChange={handleProductFields}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_length\"\n                              helperText=\"From left to right\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_breadth\"\n                              value={changeData.package_breadth}\n                              onChange={handleProductFields}\n                              helperText=\"From front to back\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_height\"\n                              value={changeData.package_height}\n                              onChange={handleProductFields}\n                              helperText=\"From bottom to top\"\n                            />\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 4}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Inventory & Shipping End */}\n\n                      {/* SEO */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(3)}\n                        >\n                          SEO\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 3}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_title\"\n                              value={changeData.seo_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Description\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_description\"\n                              value={changeData.seo_description}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Keyword\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_keyword\"\n                              value={changeData.seo_keyword}\n                              onChange={handleProductFields}\n                            />\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n                            <Grid container sx={{ mt: 1 }}>\n                              <Grid item xs={12}>\n                                <Grid\n                                  container\n                                  sx={{\n                                    display: \"flex\",\n                                    alignItem: \"center\",\n                                    justifyContent: \"space-between\",\n                                  }}\n                                >\n                                  <Grid item xs={11}>\n                                    <TextField\n                                      fullWidth\n                                      value={changeData.item || \"\"}\n                                      size={\"small\"}\n                                      type=\"text\"\n                                      name=\"item\"\n                                      onChange={handleProductFields}\n                                      label=\"Write a point...\"\n                                    />\n                                  </Grid>\n                                  <Grid item xs={0.8}>\n                                    {changeData.select === undefined ? (\n                                      <Button\n                                        fullWidth\n                                        onClick={() => {\n                                          changeData.item !== \"\" &&\n                                            setData({\n                                              ...changeData,\n                                              selling_points: [\n                                                ...changeData.selling_points,\n                                                changeData.item,\n                                              ],\n                                              item: \"\",\n                                            });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Add\n                                      </Button>\n                                    ) : (\n                                      <Button\n                                        onClick={() => {\n                                          setData({\n                                            ...changeData,\n                                            selling_points:\n                                              changeData.selling_points.filter(\n                                                (row, i) => {\n                                                  return (\n                                                    i !== changeData.select\n                                                  );\n                                                }\n                                              ),\n                                            select: undefined,\n                                          });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Remove\n                                      </Button>\n                                    )}\n                                  </Grid>\n                                </Grid>\n                              </Grid>\n                              {changeData.selling_points.length > 0 && (\n                                <Grid\n                                  sx={{\n                                    maxHeight: \"100px\",\n                                    overflowY: \"scroll\",\n                                    mb: 1,\n                                    border: \"2px solid #91441f\",\n                                    padding: \"7px\",\n                                  }}\n                                  item\n                                  xs={12}\n                                >\n                                  <ul style={{ listStyleType: \"square\" }}>\n                                    {changeData.selling_points &&\n                                      changeData.selling_points.map(\n                                        (item, index) => {\n                                          return (\n                                            <li>\n                                              <Typography\n                                                sx={{ cursor: \"pointer\" }}\n                                                onClick={() => {\n                                                  setData({\n                                                    ...changeData,\n                                                    select: index,\n                                                    item: item,\n                                                  });\n                                                }}\n                                                variant=\"body\"\n                                              >\n                                                {index + 1 + \". \"}\n                                                {item}\n                                              </Typography>\n                                            </li>\n                                          );\n                                        }\n                                      )}\n                                  </ul>\n                                </Grid>\n                              )}\n                            </Grid>\n                            {/* product description  */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Description\n                            </FormLabel>\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"product_description\"\n                              onChange={handleProductFields}\n                              defaultValue={changeData.product_description}\n                              type=\"text\"\n                              helperText=\"Please enter your product description\"\n                            />\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 3}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* SEO End */}\n                    </Stepper>\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Merge Product\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* merge Products Ends */}\n\n            {/* update merge Products */}\n\n            {form.formType === \"update_merge\" && (\n              <Grid container p={5} className=\"productPadding\">\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Merge Product\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update Merge your products and necessary information from\n                      here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateMergeProduct);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <Stepper\n                      className=\"stepper\"\n                      activeStep={activeStep}\n                      orientation=\"vertical\"\n                    >\n                      {/* // Specification */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(0)}\n                        >\n                          Specifications\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 4}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // // required\n                              disabled\n                              label=\"SKU\"\n                              type=\"text\"\n                              value={changeData.M}\n                              variant=\"outlined\"\n                              name=\"SKU\"\n                            />\n                            <Autocomplete\n                              disablePortal\n                              size=\"small\"\n                              fullWidth\n                              multiple\n                              noOptionsText={\"ex : P-01001\"}\n                              autoHighlight\n                              id=\"combo-box-demo\"\n                              options={productSKU.P_SKU.map((row) => {\n                                return row.SKU;\n                              })}\n                              isOptionEqualToValue={(option, value) => {\n                                console.log(value);\n                                return typeof value === \"Array\"\n                                  ? value.isInclude(option)\n                                  : value === option;\n                              }}\n                              value={changeData.product_articles}\n                              renderInput={(params) => (\n                                <TextField\n                                  onKeyUpCapture={handleSearch}\n                                  value={changeData.product_articles}\n                                  {...params}\n                                  label=\"Product SKU\"\n                                />\n                              )}\n                              onChange={(e, newMember) =>\n                                setData((old) => ({\n                                  ...old,\n                                  product_articles: newMember,\n                                }))\n                              }\n                            />\n                            {changeData.product_articles.length > 0 && (\n                              <Box mt={1}>\n                                <Typography component={\"span\"} variant=\"body1\">\n                                  Product Quantities\n                                </Typography>\n                                <Box\n                                  p={1}\n                                  sx={{\n                                    display: \"flex\",\n                                    gap: \"5px\",\n                                    flexDirection: \"column\",\n                                    maxHeight: 150,\n                                    overflow: \"scroll\",\n                                  }}\n                                >\n                                  {changeData.product_articles.map((item) => (\n                                    <TextField\n                                      name={item}\n                                      fullWidth\n                                      size=\"small\"\n                                      type=\"number\"\n                                      InputProps={{\n                                        startAdornment: (\n                                          <InputAdornment position=\"start\">\n                                            {item}\n                                          </InputAdornment>\n                                        ),\n                                      }}\n                                      placeholder={item}\n                                      onChange={handleProductFields}\n                                      value={changeData[item] || 1}\n                                    />\n                                  ))}\n                                </Box>\n                              </Box>\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              required\n                              id=\"outlined-select\"\n                              select\n                              name=\"category_name\"\n                              label=\"Category\"\n                              value={changeData.category_name}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your category\"\n                            >\n                              {category.map(\n                                (option) =>\n                                  option.category_status && (\n                                    <MenuItem\n                                      key={option._id}\n                                      value={option._id}\n                                    >\n                                      {option.category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"sub_category_name\"\n                              label=\"Sub Category\"\n                              multiple\n                              value={changeData.sub_category_name}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your sub category\"\n                            >\n                              {subCategory.map(\n                                (option) =>\n                                  changeData.category_name ===\n                                    option.category_id && (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option._id}\n                                    >\n                                      {option.sub_category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"product_title\"\n                              value={changeData.product_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Showroom Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"showroom_price\"\n                              value={changeData.showroom_price}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              onChange={(e) => {\n                                handleDiscount(e);\n                                handleProductFields(e);\n                              }}\n                              label=\"Discount Limit\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"discount_limit\"\n                              value={changeData.discount_limit}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // disabled\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Selling Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              value={\n                                // changeData.MRP > 0 &&\n                                //   changeData.discount_limit > 0\n                                //   ? (changeData.selling_price =\n                                //     changeData.MRP -\n                                //     (changeData.MRP / 100) *\n                                //     changeData.discount_limit)\n                                //   : 0\n                                changeData.selling_price\n                              }\n                              onChange={handleProductFields}\n                              variant=\"outlined\"\n                              name=\"selling_price\"\n                            />\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Availability\n                            </FormLabel>\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.mobile_store}\n                                  onChange={handleProductFields}\n                                  name=\"mobile_store\"\n                                  helperText=\"Check it if want it on mobile.\"\n                                />\n                              }\n                              label=\"Mobile Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.online_store}\n                                  onChange={handleProductFields}\n                                  name=\"online_store\"\n                                  helperText=\"Check it if want it on online store.\"\n                                />\n                              }\n                              label=\"Online Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.continue_selling}\n                                  onChange={handleProductFields}\n                                  name=\"continue_selling\"\n                                  helperText=\"Check it if want it to sell when out of Inventory.\"\n                                />\n                              }\n                              label=\"Continue Selling\"\n                            />\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 4}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* // Specification Ends*/}\n\n                      {/* Images */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(1)}\n                        >\n                          Images\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            {/* <AcceptMaxFiles className=\"dorpContainer\"/> */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Images\n                            </FormLabel>\n                            <ProductsPreviews\n                              text={\"Please Drag and Drop the product images\"}\n                            ></ProductsPreviews>\n                            {files.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                {files.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = files;\n                                            console.log(\">>>>>>\", temp, files);\n                                            temp.splice(index, 1);\n                                            setFiles([...temp]);\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={URL.createObjectURL(img)}\n                                          alt={img.name}\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {changeData.savedImages.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                <FormLabel id=\"demo-radio-buttons-group-label\">\n                                  Saved Images\n                                </FormLabel>\n                                {changeData.savedImages.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = changeData.savedImages;\n                                            temp.splice(index, 1);\n                                            setData({\n                                              ...changeData,\n                                              savedImages: temp,\n                                            });\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={img}\n                                          alt=\"productImage\"\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // featured images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"featured_image\"\n                              label=\"Feature Image\"\n                              value={changeData.featured_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Featured Image\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              {/* {console.log(changeData.savedImages)} */}\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // specification images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"specification_image\"\n                              label=\"Specification Image\"\n                              value={changeData.specification_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your specification image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // Mannequin images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"mannequin_image\"\n                              label=\"Mannequin Image\"\n                              value={changeData.mannequin_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Mannequin Image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Images End */}\n\n                      {/* Inventory & Shipping */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(2)}\n                        >\n                          Inventory & Shipping\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 4}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <FormGroup>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Return & Payment Policy\n                              </FormLabel>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.COD}\n                                    onChange={handleProductFields}\n                                    name=\"COD\"\n                                  />\n                                }\n                                label=\"COD Available\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.returnable}\n                                    onChange={handleProductFields}\n                                    name=\"returnable\"\n                                  />\n                                }\n                                label=\"Return Item\"\n                              />\n                            </FormGroup>\n                            {changeData.returnable && (\n                              <>\n                                <Typography\n                                  component={\"span\"}\n                                  variant=\"Caption\"\n                                >\n                                  {\" \"}\n                                  Return in {changeData.returnDays} Days\n                                </Typography>\n                                <Slider\n                                  aria-label=\"Return Days\"\n                                  defaultValue={0}\n                                  size=\"small\"\n                                  name=\"returnDays\"\n                                  value={changeData.returnDays}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your return days\"\n                                  valueLabelDisplay=\"auto\"\n                                />\n                              </>\n                            )}\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Polish in {changeData.polish_time} Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"Construction Days\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"polish_time\"\n                              value={changeData.polish_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your polish time\"\n                            />\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Manufactured in {\n                                changeData.manufacturing_time\n                              }{\" \"}\n                              Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"Construction Days\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"manufacturing_time\"\n                              value={changeData.manufacturing_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your manufacturing time\"\n                            />\n                            {/* <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Stock Warehouse\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.warehouse}\n                              name=\"warehouse\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                            >\n                              {warehouse.map((option) => (\n                                <MenuItem\n                                  key={option.label}\n                                  value={option.value}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.warehouse.indexOf(\n                                        option.value\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText primary={option.value} />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            {changeData.warehouse.map((row) => {\n                              let stock;\n                              row === \"Jodhpur (Rajasthan)\"\n                                ? (stock = \"jodhpur_stock\")\n                                : (stock = \"bangalore_stock\");\n                              return (\n                                <>\n                                  <TextField\n                                    size=\"small\"\n                                    fullWidth\n                                    name={stock}\n                                    label={row + \" Stock\"}\n                                    type=\"number\"\n                                    value={changeData[stock] || \"\"}\n                                    onChange={handleProductFields}\n                                  />\n                                </>\n                              );\n                            })} */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Length\"\n                              type=\"number\"\n                              value={changeData.package_length}\n                              onChange={handleProductFields}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_length\"\n                              helperText=\"From left to right\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_breadth\"\n                              value={changeData.package_breadth}\n                              onChange={handleProductFields}\n                              helperText=\"From front to back\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_height\"\n                              value={changeData.package_height}\n                              onChange={handleProductFields}\n                              helperText=\"From bottom to top\"\n                            />\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 4}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Inventory & Shipping End */}\n\n                      {/* SEO */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(3)}\n                        >\n                          SEO\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 3}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_title\"\n                              value={changeData.seo_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Description\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_description\"\n                              value={changeData.seo_description}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Keyword\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_keyword\"\n                              value={changeData.seo_keyword}\n                              onChange={handleProductFields}\n                            />\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n                            <Grid container sx={{ mt: 1 }}>\n                              <Grid item xs={12}>\n                                <Grid\n                                  container\n                                  sx={{\n                                    display: \"flex\",\n                                    alignItem: \"center\",\n                                    justifyContent: \"space-between\",\n                                  }}\n                                >\n                                  <Grid item xs={11}>\n                                    <TextField\n                                      fullWidth\n                                      value={changeData.item || \"\"}\n                                      size={\"small\"}\n                                      type=\"text\"\n                                      name=\"item\"\n                                      onChange={handleProductFields}\n                                      label=\"Write a point...\"\n                                    />\n                                  </Grid>\n                                  <Grid item xs={0.8}>\n                                    {changeData.select === undefined ? (\n                                      <Button\n                                        fullWidth\n                                        onClick={() => {\n                                          changeData.item !== \"\" &&\n                                            setData({\n                                              ...changeData,\n                                              selling_points: [\n                                                ...changeData.selling_points,\n                                                changeData.item,\n                                              ],\n                                              item: \"\",\n                                            });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Add\n                                      </Button>\n                                    ) : (\n                                      <Button\n                                        onClick={() => {\n                                          setData({\n                                            ...changeData,\n                                            selling_points:\n                                              changeData.selling_points.filter(\n                                                (row, i) => {\n                                                  return (\n                                                    i !== changeData.select\n                                                  );\n                                                }\n                                              ),\n                                            select: undefined,\n                                          });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Remove\n                                      </Button>\n                                    )}\n                                  </Grid>\n                                </Grid>\n                              </Grid>\n                              {changeData.selling_points.length > 0 && (\n                                <Grid\n                                  sx={{\n                                    maxHeight: \"100px\",\n                                    overflowY: \"scroll\",\n                                    mb: 1,\n                                    border: \"2px solid #91441f\",\n                                    padding: \"7px\",\n                                  }}\n                                  item\n                                  xs={12}\n                                >\n                                  <ul style={{ listStyleType: \"square\" }}>\n                                    {changeData.selling_points &&\n                                      changeData.selling_points.map(\n                                        (item, index) => {\n                                          return (\n                                            <li>\n                                              <Typography\n                                                sx={{ cursor: \"pointer\" }}\n                                                onClick={() => {\n                                                  setData({\n                                                    ...changeData,\n                                                    select: index,\n                                                    item: item,\n                                                  });\n                                                }}\n                                                variant=\"body\"\n                                              >\n                                                {index + 1 + \". \"}\n                                                {item}\n                                              </Typography>\n                                            </li>\n                                          );\n                                        }\n                                      )}\n                                  </ul>\n                                </Grid>\n                              )}\n                            </Grid>\n                            {/* product description  */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Description\n                            </FormLabel>\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"product_description\"\n                              onChange={handleProductFields}\n                              defaultValue={changeData.product_description}\n                              type=\"text\"\n                              helperText=\"Please enter your product description\"\n                            />\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 3}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* SEO End */}\n                    </Stepper>\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Merge Product\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* update merge Products Ends */}\n\n            {/*  add Category */}\n\n            {form.formType === \"category\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Category\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add your product category and necessary information from\n                      here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleCategory);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <ImagePreviews\n                      text={\"Please Drag and Drop the Category image\"}\n                    >\n                      {\" \"}\n                    </ImagePreviews>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"category_name\"\n                      label=\"Category\"\n                      type=\"text\"\n                      helperText=\"Please enter your category\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Title\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_title\"\n                      value={changeData.seo_title}\n                      onChange={handleProductFields}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Description\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_description\"\n                      value={changeData.seo_description}\n                      onChange={handleProductFields}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Keyword\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_keyword\"\n                      value={changeData.seo_keyword}\n                      onChange={handleProductFields}\n                    />\n\n                    {/* product description  */}\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Product Description\n                    </FormLabel>\n\n                    <TextareaAutosize\n                      fullWidth\n                      minRows={5}\n                      id=\"outlined-select\"\n                      name=\"product_description\"\n                      onChange={handleProductFields}\n                      defaultValue={changeData.product_description}\n                      type=\"text\"\n                      helperText=\"Please enter your product description\"\n                    />\n\n                    <FormGroup>\n                      <FormControlLabel\n                        control={<Checkbox name=\"category_status\" />}\n                        label=\"Status (On/Off)\"\n                      />\n                    </FormGroup>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Category\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* add Category Ends */}\n\n            {/*  update Category */}\n\n            {form.formType === \"update_category\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Category\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update your product category and necessary information\n                      from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateCategory);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <ImagePreviews\n                      text={\"Please Drag and Drop the Category image\"}\n                    >\n                      {\" \"}\n                    </ImagePreviews>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"outlined-select\"\n                      onChange={handleChangeData}\n                      value={changeData.category}\n                      name=\"category_name\"\n                      label=\"Category\"\n                      helperText=\"Please enter the update\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Title\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_title\"\n                      value={changeData.seo_title}\n                      onChange={handleProductFields}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Description\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_description\"\n                      value={changeData.seo_description}\n                      onChange={handleProductFields}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Keyword\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_keyword\"\n                      value={changeData.seo_keyword}\n                      onChange={handleProductFields}\n                    />\n\n                    {/* product description  */}\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Product Description\n                    </FormLabel>\n\n                    <TextareaAutosize\n                      fullWidth\n                      minRows={5}\n                      id=\"outlined-select\"\n                      name=\"product_description\"\n                      onChange={handleProductFields}\n                      defaultValue={changeData.product_description}\n                      type=\"text\"\n                      helperText=\"Please enter your product description\"\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Category\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* update Category Ends */}\n\n            {/*  discount Category */}\n\n            {form.formType === \"discount_category\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Discount\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add discount on product category from here.\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleApplyDiscount);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <Autocomplete\n                      disablePortal\n                      size=\"small\"\n                      fullWidth\n                      noOptionsText={\"ex : Chair\"}\n                      multiple\n                      autoHighlight\n                      id=\"combo-box-demo\"\n                      options={productSKU.category.map((row) => {\n                        return row.category_name;\n                      })}\n                      renderInput={(params) => (\n                        <TextField\n                          onKeyUpCapture={handleSearchCategory}\n                          value={changeData.category_discount || \"\"}\n                          {...params}\n                          label=\"Select Category\"\n                        />\n                      )}\n                      onChange={(e, newMember) =>\n                        setData((old) => ({\n                          ...old,\n                          category_discount: newMember,\n                        }))\n                      }\n                    />\n\n                    {changeData.category_discount.length > 0 && (\n                      <Box mt={1}>\n                        <Typography component={\"span\"} variant=\"body1\">\n                          Discount Limit\n                        </Typography>\n                        <Box\n                          p={1}\n                          sx={{\n                            display: \"flex\",\n                            gap: \"5px\",\n                            flexDirection: \"column\",\n                            maxHeight: 150,\n                            overflow: \"scroll\",\n                          }}\n                        >\n                          {changeData.category_discount.map((item) => (\n                            <TextField\n                              name={item}\n                              fullWidth\n                              size=\"small\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    {item}\n                                  </InputAdornment>\n                                ),\n                              }}\n                              placeholder={item}\n                              onChange={handleProductFields}\n                              value={\n                                changeData[item] < 100 && changeData[item]\n                                  ? changeData[item]\n                                  : 0\n                              }\n                            />\n                          ))}\n                        </Box>\n                      </Box>\n                    )}\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Apply Discount\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* discount Category Ends */}\n\n            {/*  add primaryMateriel */}\n\n            {form.formType === \"primaryMaterial\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Material\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add your Material and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handlePrimaryMaterial);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <ImagePreviews\n                      text={\"Please Drag and Drop the Material image\"}\n                    >\n                      {\" \"}\n                    </ImagePreviews>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"primaryMaterial_name\"\n                      label=\"Material\"\n                      type=\"text\"\n                      helperText=\"Please enter your primary material\"\n                    />\n\n                    <TextareaAutosize\n                      fullWidth\n                      minRows={5}\n                      id=\"outlined-select\"\n                      name=\"primaryMaterial_description\"\n                      defaultValue={\"Material Description\"}\n                      type=\"text\"\n                      helperText=\"Please enter your primary material description\"\n                    />\n\n                    <FormGroup>\n                      <FormControlLabel\n                        control={<Checkbox name=\"customizations\" />}\n                        label=\"Can Be Customised\"\n                      />\n                    </FormGroup>\n\n                    <FormGroup>\n                      <FormControlLabel\n                        control={<Checkbox name=\"primaryMaterial_status\" />}\n                        label=\"Status (On/Off)\"\n                      />\n                    </FormGroup>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Material\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* add primaryMaterial Ends */}\n\n            {/*  update primaryMaterial */}\n\n            {form.formType === \"update_PrimaryMaterial\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Material\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update your Material and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdatePrimaryMaterial);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <ImagePreviews\n                      text={\"Please Drag and Drop the Material image\"}\n                    >\n                      {\" \"}\n                    </ImagePreviews>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"primaryMaterial_name\"\n                      label=\"Material\"\n                      value={changeData.primaryMaterial_name}\n                      helperText=\"Please enter the update\"\n                    />\n\n                    <TextareaAutosize\n                      fullWidth\n                      minRows={5}\n                      id=\"outlined-select\"\n                      name=\"primaryMaterial_description\"\n                      onChange={handleChangeData}\n                      defaultValue={changeData.primaryMaterial_description}\n                      type=\"text\"\n                      helperText=\"Please enter your primary material description\"\n                    />\n\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox\n                            checked={changeData.customizations}\n                            name=\"customizations\"\n                            onChange={handleProductFields}\n                          />\n                        }\n                        label=\"Can Be Customised\"\n                      />\n                    </FormGroup>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Material\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* update primaryMaterial Ends */}\n\n            {/*  add Supplier */}\n\n            {form.formType === \"add_supplier\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Supplier\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add Supplier and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleSupplier);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"outlined-select\"\n                      name=\"SID\"\n                      disabled\n                      value={SKU || \"\"}\n                      onChange={handleChangeData}\n                      label=\"Supplier ID\"\n                      type=\"text\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      value={changeData.supplier_name}\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"supplier_name\"\n                      label=\"Supplier Name\"\n                      type=\"text\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      value={changeData.mobile}\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"mobile\"\n                      label=\"Mobile\"\n                      type=\"number\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      value={changeData.alt_mobile}\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"alt_mobile\"\n                      label=\"Alternate Number\"\n                      type=\"number\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      value={changeData.specialization}\n                      onChange={handleChangeData}\n                      name=\"specialization\"\n                      label=\"Specialization\"\n                      type=\"text\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      value={changeData.gst_no}\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"gst_no\"\n                      label=\"GST Number\"\n                      type=\"text\"\n                    />\n\n                    <TextareaAutosize\n                      size=\"small\"\n                      fullWidth\n                      placeholder=\"Address\"\n                      minRows={5}\n                      maxRows={5}\n                      value={changeData.address}\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"address\"\n                      label=\"Address\"\n                      type=\"text\"\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Supplier\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* add Suppliers  Ends */}\n\n            {/*  update Suppliers  */}\n\n            {form.formType === \"update_supplier\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Supplier\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update supplier and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateSupplier);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      disabled\n                      id=\"outlined-select\"\n                      name=\"SID\"\n                      value={changeData.SID || \"\"}\n                      onChange={handleChangeData}\n                      label=\"Supplier ID\"\n                      type=\"text\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      value={changeData.supplier_name || \"\"}\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"supplier_name\"\n                      label=\"Supplier Name\"\n                      type=\"text\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      value={changeData.mobile || \"\"}\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"mobile\"\n                      label=\"Mobile\"\n                      type=\"number\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      value={changeData.alt_mobile || \"\"}\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"alt_mobile\"\n                      label=\"Alternate Number\"\n                      type=\"number\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      value={changeData.specialization || \"\"}\n                      onChange={handleChangeData}\n                      name=\"specialization\"\n                      label=\"Specialization\"\n                      type=\"text\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      value={changeData.gst_no || \"\"}\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"gst_no\"\n                      label=\"GST Number\"\n                      type=\"text\"\n                    />\n\n                    <TextareaAutosize\n                      size=\"small\"\n                      fullWidth\n                      placeholder=\"Address\"\n                      minRows={5}\n                      maxRows={5}\n                      value={changeData.address || \"\"}\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"address\"\n                      label=\"Address\"\n                      type=\"text\"\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Supplier\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* update suppliers Ends */}\n\n            {/*  update blog  */}\n\n            {form.formType === \"update_blog\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Blog\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update your blog and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <Modal\n                    aria-labelledby=\"transition-modal-title\"\n                    aria-describedby=\"transition-modal-description\"\n                    open={open}\n                    onClose={() => {\n                      setOpen(false);\n                    }}\n                    closeAfterTransition\n                    BackdropComponent={Backdrop}\n                    BackdropProps={{\n                      timeout: 500,\n                    }}\n                  >\n                    <Fade in={open}>\n                      <Box sx={style}>\n                        <form\n                          className=\"form\"\n                          id=\"myForm\"\n                          onSubmit={(e) => {\n                            confirmBox(e, handleUpload);\n                          }}\n                          encType=\"multipart/form-data\"\n                          method=\"post\"\n                        >\n                          <FormLabel id=\"demo-radio-buttons-group-label\">\n                            Get Image Url\n                          </FormLabel>\n\n                          <ImagePreviews\n                            text={\"Please Drag and Drop the Image \"}\n                          >\n                            {\" \"}\n                          </ImagePreviews>\n\n                          <TextField\n                            size=\"small\"\n                            fullWidth\n                            disabled\n                            id=\"outlined-select\"\n                            label=\"Image URL\"\n                            value={url || \"\"}\n                          />\n\n                          <Button\n                            color=\"primary\"\n                            type=\"submit\"\n                            variant=\"contained\"\n                          >\n                            Get Url\n                          </Button>\n                        </form>\n                      </Box>\n                    </Fade>\n                  </Modal>\n\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateBlog);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <FeaturesPreviews\n                      text={\"Please Drag and Drop the Card Image \"}\n                    >\n                      {\" \"}\n                    </FeaturesPreviews>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"seo_title\"\n                      label=\"SEO Title\"\n                      value={changeData.seo_title}\n                      onChange={handleChangeData}\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"seo_description\"\n                      label=\"SEO Description\"\n                      value={changeData.seo_description}\n                      onChange={handleChangeData}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      value={changeData.card_description}\n                      onChange={handleChangeData}\n                      name=\"card_description\"\n                      label=\"Card Description\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      value={changeData.title}\n                      onChange={handleChangeData}\n                      name=\"title\"\n                      label=\"Blog Title\"\n                    />\n                    {/* product description  */}\n\n                    <Editor\n                      apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                      initialValue={`${changeData.description}`}\n                      onInit={(event, editor) => (editorRef.current = editor)}\n                      init={{\n                        height: 400,\n                        menubar: true,\n                        plugins: \"image code\",\n                      }}\n                    />\n\n                    <div className=\"getLinkButton\">\n                      <TextField\n                        size=\"small\"\n                        disabled\n                        fullWidth\n                        id=\"outlined-select\"\n                        label=\"Image URL\"\n                        value={url}\n                      />\n                      <Button\n                        color=\"primary\"\n                        onClick={() => {\n                          setOpen(true);\n                        }}\n                        variant=\"contained\"\n                      >\n                        Upload\n                      </Button>\n                    </div>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Blog\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* add update blog  Ends */}\n\n            {/*   Add BLog */}\n\n            {form.formType === \"addBlog\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Blog\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add your blog and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <Modal\n                    aria-labelledby=\"transition-modal-title\"\n                    aria-describedby=\"transition-modal-description\"\n                    open={open}\n                    onClose={() => {\n                      setOpen(false);\n                    }}\n                    closeAfterTransition\n                    BackdropComponent={Backdrop}\n                    BackdropProps={{\n                      timeout: 500,\n                    }}\n                  >\n                    <Fade in={open}>\n                      <Box sx={style}>\n                        <form\n                          className=\"form\"\n                          id=\"myForm\"\n                          onSubmit={(e) => {\n                            confirmBox(e, handleUpload);\n                          }}\n                          encType=\"multipart/form-data\"\n                          method=\"post\"\n                        >\n                          <FormLabel id=\"demo-radio-buttons-group-label\">\n                            Get Image Url\n                          </FormLabel>\n\n                          <ImagePreviews\n                            text={\"Please Drag and Drop the Image \"}\n                          >\n                            {\" \"}\n                          </ImagePreviews>\n\n                          <TextField\n                            size=\"small\"\n                            fullWidth\n                            disabled\n                            id=\"outlined-select\"\n                            label=\"Image URL\"\n                            value={url || \"\"}\n                          />\n\n                          <Button\n                            color=\"primary\"\n                            type=\"submit\"\n                            variant=\"contained\"\n                          >\n                            Get Url\n                          </Button>\n                        </form>\n                      </Box>\n                    </Fade>\n                  </Modal>\n\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleAddBlog);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Add Blog Description\n                    </FormLabel>\n\n                    <FeaturesPreviews\n                      text={\"Please Drag and Drop the Card Image \"}\n                    >\n                      {\" \"}\n                    </FeaturesPreviews>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"seo_title\"\n                      label=\"SEO Title\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"seo_description\"\n                      label=\"SEO Description\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"card_description\"\n                      label=\"Card Description\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"title\"\n                      label=\"Blog Title\"\n                    />\n                    {/* product description  */}\n                    <Editor\n                      apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                      initialValue=\"<p>Write Blog Here!!!</p>\"\n                      onInit={(event, editor) => (editorRef.current = editor)}\n                      init={{\n                        height: 400,\n                        menubar: true,\n                        plugins: \"image code\",\n                      }}\n                    />\n\n                    <div className=\"getLinkButton\">\n                      <TextField\n                        size=\"small\"\n                        disabled\n                        fullWidth\n                        id=\"outlined-select\"\n                        label=\"Image URL\"\n                        value={url}\n                      />\n                      <Button\n                        color=\"primary\"\n                        onClick={() => {\n                          setOpen(true);\n                        }}\n                        variant=\"contained\"\n                      >\n                        Upload\n                      </Button>\n                    </div>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Blog\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* Add Blog Ends */}\n\n            {/*  add subCategory */}\n\n            {form.formType === \"subcategory\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Sub Category\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add your sub category and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleSubCategories);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <ImagePreviews\n                      text={\n                        \"Please Drag and Drop a image for sub Category image\"\n                      }\n                    >\n                      {\" \"}\n                    </ImagePreviews>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      select\n                      name=\"category_id\"\n                      label=\"Category\"\n                      value={cat}\n                      multiple\n                      onChange={handleChange}\n                      helperText=\"Please select your category\"\n                    >\n                      {category.map(\n                        (option) =>\n                          option.category_status && (\n                            <MenuItem key={option._id} value={option._id}>\n                              {option.category_name}\n                            </MenuItem>\n                          )\n                      )}\n                    </TextField>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"sub_category_name\"\n                      label=\"Sub Category\"\n                      type=\"text\"\n                      helperText=\"Please enter your sub category\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Title\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_title\"\n                      value={changeData.seo_title}\n                      onChange={handleProductFields}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Description\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_description\"\n                      value={changeData.seo_description}\n                      onChange={handleProductFields}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Keyword\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_keyword\"\n                      value={changeData.seo_keyword}\n                      onChange={handleProductFields}\n                    />\n\n                    {/* product description  */}\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Product Description\n                    </FormLabel>\n\n                    <TextareaAutosize\n                      fullWidth\n                      minRows={5}\n                      id=\"outlined-select\"\n                      name=\"product_description\"\n                      onChange={handleProductFields}\n                      defaultValue={changeData.product_description}\n                      type=\"text\"\n                      helperText=\"Please enter your product description\"\n                    />\n\n                    <FormGroup>\n                      <FormControlLabel\n                        control={<Checkbox name=\"sub_category_status\" />}\n                        label=\"Status (On/Off)\"\n                      />\n                    </FormGroup>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Sub Category\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* add sebCategory Ends */}\n\n            {/*update subCategory */}\n\n            {form.formType === \"update_Subcategory\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Sub Category\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add your update sub category and necessary information\n                      from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateSubCategories);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <ImagePreviews\n                      text={\"Please Drag and Drop a image for Sub Category.\"}\n                    >\n                      {\" \"}\n                    </ImagePreviews>\n\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Category\n                    </FormLabel>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"outlined-select\"\n                      select\n                      name=\"category_id\"\n                      displayEmpty\n                      value={cat}\n                      multiple\n                      onChange={handleChange}\n                      helperText=\"Please select your category\"\n                    >\n                      {category.map(\n                        (option) =>\n                          option.category_status && (\n                            <MenuItem key={option._id} value={option._id}>\n                              {option.category_name}\n                            </MenuItem>\n                          )\n                      )}\n                    </TextField>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"outlined-select\"\n                      name=\"sub_category_name\"\n                      label=\"Sub Category\"\n                      value={changeData.sub_category_name || \"\"}\n                      onChange={handleProductFields}\n                      type=\"text\"\n                      helperText=\"Please enter your sub category\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Title\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_title\"\n                      value={changeData.seo_title}\n                      onChange={handleProductFields}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Description\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_description\"\n                      value={changeData.seo_description}\n                      onChange={handleProductFields}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Keyword\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_keyword\"\n                      value={changeData.seo_keyword}\n                      onChange={handleProductFields}\n                    />\n\n                    {/* product description  */}\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Product Description\n                    </FormLabel>\n\n                    <TextareaAutosize\n                      fullWidth\n                      minRows={5}\n                      id=\"outlined-select\"\n                      name=\"product_description\"\n                      onChange={handleProductFields}\n                      defaultValue={changeData.product_description}\n                      type=\"text\"\n                      helperText=\"Please enter your product description\"\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Sub Category\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* update sebCategory Ends */}\n\n            {/*  add Customer */}\n\n            {form.formType === \"add_customer\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Customer\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add customer details and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <Modal\n                    aria-labelledby=\"transition-modal-title\"\n                    aria-describedby=\"transition-modal-description\"\n                    open={open}\n                    onClose={() => {\n                      setOpen(false);\n                    }}\n                    closeAfterTransition\n                    BackdropComponent={Backdrop}\n                    BackdropProps={{\n                      timeout: 500,\n                    }}\n                  >\n                    <Fade in={open}>\n                      <Box sx={style}>\n                        <Typography sx={{ pb: 1 }} variant=\"h6\">\n                          Address\n                        </Typography>\n                        <form\n                          className=\"form\"\n                          id=\"myForm\"\n                          onSubmit={(e) => {\n                            confirmBox(e, handleAddress);\n                          }}\n                          encType=\"multipart/form-data\"\n                          method=\"post\"\n                        >\n                          <TextField\n                            size=\"small\"\n                            fullWidth\n                            // required\n                            id=\"outlined-select\"\n                            name=\"customer_name\"\n                            label=\"Name\"\n                            type=\"text\"\n                          />\n                          <TextField\n                            size=\"small\"\n                            fullWidth\n                            // required\n                            id=\"outlined-select\"\n                            name=\"mobile\"\n                            label=\"Mobile\"\n                            type=\"number\"\n                          />\n                          <TextField\n                            size=\"small\"\n                            fullWidth\n                            // required\n                            id=\"outlined-select\"\n                            name=\"pincode\"\n                            label=\"Pin Code\"\n                            type=\"number\"\n                          />\n\n                          <TextField\n                            size=\"small\"\n                            fullWidth\n                            // required\n                            id=\"outlined-select\"\n                            name=\"city\"\n                            label=\"City\"\n                            type=\"text\"\n                          />\n\n                          <TextField\n                            size=\"small\"\n                            fullWidth\n                            // required\n                            id=\"outlined-select\"\n                            name=\"state\"\n                            label=\"State\"\n                            type=\"text\"\n                          />\n\n                          <FormLabel id=\"demo-radio-buttons-group-label\">\n                            Address\n                          </FormLabel>\n\n                          <TextareaAutosize\n                            fullWidth\n                            minRows={5}\n                            id=\"outlined-select\"\n                            name=\"address\"\n                            type=\"text\"\n                            placeholder=\"Please enter your address\"\n                          />\n\n                          <FormLabel id=\"demo-radio-buttons-group-label\">\n                            Address Type\n                          </FormLabel>\n\n                          <TextField\n                            size=\"small\"\n                            fullWidth\n                            id=\"outlined-select\"\n                            select\n                            name=\"type\"\n                            displayEmpty\n                            value={cat}\n                            multiple\n                            onChange={handleChange}\n                            helperText=\"Please select your address type\"\n                          >\n                            <MenuItem key={\"home\"} value={\"home\"}>\n                              Home\n                            </MenuItem>\n                            <MenuItem key={\"office\"} value={\"office\"}>\n                              Office\n                            </MenuItem>\n                            <MenuItem key={\"none\"} value={\"none\"}>\n                              None\n                            </MenuItem>\n                          </TextField>\n\n                          <Button\n                            color=\"primary\"\n                            type=\"submit\"\n                            variant=\"contained\"\n                          >\n                            Add Address\n                          </Button>\n                        </form>\n                      </Box>\n                    </Fade>\n                  </Modal>\n\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleCustomer);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <ImagePreviews\n                      text={\"Please Drag and Drop the Profile Picture\"}\n                    >\n                      {\" \"}\n                    </ImagePreviews>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"username\"\n                      label=\"Customer Name\"\n                      type=\"text\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"email\"\n                      label=\"Customer Email\"\n                      type=\"text\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"mobile\"\n                      label=\"Contact Number\"\n                      type=\"number\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"password\"\n                      label=\"Password\"\n                      type=\"password\"\n                    />\n\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Shipping Address\n                    </FormLabel>\n                    <Grid container>\n                      {address &&\n                        address.map((item) => {\n                          return (\n                            <Grid item xs={3}>\n                              <Box\n                                sx={{\n                                  overflowWrap: \"break-word\",\n                                  border: \"2px solid #a52a2a80\",\n                                  borderStyle: \"dashed\",\n                                  p: 1,\n                                  ml: 1,\n                                  mr: 1,\n                                  width: \"130px\",\n                                  height: \"150px\",\n                                  overflow: \"hidden\",\n                                }}\n                              >\n                                <Typography variant=\"caption\">\n                                  {item.shipping}\n                                </Typography>\n                              </Box>\n                            </Grid>\n                          );\n                        })}\n                      <Grid item xs={3}>\n                        <Button\n                          variant=\"outlined\"\n                          sx={{ width: \"20%\" }}\n                          onClick={() => {\n                            setOpen(true);\n                          }}\n                        >\n                          <AddIcon />\n                        </Button>\n                      </Grid>\n                    </Grid>\n\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox\n                            checked={changeData.marketing}\n                            onChange={handleProductFields}\n                            name=\"marketing\"\n                          />\n                        }\n                        label=\"Marketing\"\n                      />\n                    </FormGroup>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Customer\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* add Customer Ends */}\n            {/*  update Customer */}\n\n            {form.formType === \"update_customer\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Customer\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update customer details and necessary information from\n                      here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateCustomer);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <ImagePreviews\n                      text={\"Please Drag and Drop the Profile Picture\"}\n                    >\n                      {\" \"}\n                    </ImagePreviews>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      value={changeData.username}\n                      onChange={handleProductFields}\n                      id=\"outlined-select\"\n                      name=\"username\"\n                      label=\"Customer Name\"\n                      type=\"text\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      value={changeData.email}\n                      onChange={handleProductFields}\n                      id=\"outlined-select\"\n                      name=\"email\"\n                      label=\"Customer Email\"\n                      type=\"text\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      value={changeData.mobile}\n                      onChange={handleProductFields}\n                      id=\"outlined-select\"\n                      name=\"mobile\"\n                      label=\"Contact Number\"\n                      type=\"number\"\n                    />\n                    {/*  <TextField sx = {{mb : 2}} size=\"small\"\n                      fullWidth\n                      value={changeData.pincode}\n                      onChange={handleProductFields}\n                      id=\"outlined-select\"\n                      name=\"pincode\"\n                      label=\"Pin-Code\"\n                      type=\"number\"\n                    /> */}\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      value={changeData.city}\n                      onChange={handleProductFields}\n                      id=\"outlined-select\"\n                      name=\"city\"\n                      label=\"City\"\n                      type=\"text\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      value={changeData.state}\n                      onChange={handleProductFields}\n                      id=\"outlined-select\"\n                      name=\"state\"\n                      label=\"state\"\n                      type=\"text\"\n                    />\n                    {/*  <TextField sx = {{mb : 2}} size=\"small\"\n                      fullWidth\n                      value={changeData.landmark}\n                      onChange={handleProductFields}\n                      id=\"outlined-select\"\n                      name=\"landmark\"\n                      label=\"Landmark\"\n                      type=\"text\"\n                      helperText = 'Place nearby the main building.'\n                    /> */}\n\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Shipping Address\n                    </FormLabel>\n\n                    <TextareaAutosize\n                      fullWidth\n                      minRows={5}\n                      value={changeData.shipping || \"\"}\n                      onChange={handleProductFields}\n                      id=\"outlined-select\"\n                      name=\"shipping\"\n                      type=\"text\"\n                      helperText=\"Please enter your primary material description\"\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Customer\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* update Customer Ends */}\n\n            {/* add order */}\n\n            {form.formType === \"add_order\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Order\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add order details and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleOrder);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      disabled\n                      id=\"outlined-select\"\n                      value={SKU || \"\"}\n                      name=\"OID\"\n                      label=\"Order ID\"\n                      type=\"text\"\n                      helperText=\"Search the customer for details\"\n                    />\n\n                    <InputLabel id=\"demo-multiple-checkbox-label\">\n                      Product\n                    </InputLabel>\n                    <Select\n                      multiple\n                      fullWidth\n                      value={changeData.product_array}\n                      name=\"product_array\"\n                      onChange={handleProductFields}\n                      renderValue={(selected) => selected.join(\", \")}\n                    >\n                      {SKUCatalog.map((option) => (\n                        <MenuItem key={option._id} value={option.SKU}>\n                          <Checkbox\n                            checked={\n                              changeData.product_array.indexOf(option.SKU) > -1\n                            }\n                          />\n                          <ListItemText primary={option.SKU} />\n                        </MenuItem>\n                      ))}\n                    </Select>\n\n                    <Box>\n                      <TextField\n                        size=\"small\"\n                        fullWidth\n                        // required\n                        id=\"outlined-select\"\n                        onChange={handleProductFields}\n                        value={changeData.searchCustomer || \"\"}\n                        name=\"searchCustomer\"\n                        // onChange = {loadList}\n                        label=\"Customer mobile number...\"\n                        type=\"text\"\n                        helperText=\"Search the customer for details\"\n                      />\n\n                      <Box\n                        sx={{\n                          boxShadow: 2,\n                          position: \"fixed\",\n                          bgcolor: \"white\",\n                          zIndex: 2,\n                          width: \"88%\",\n                          display:\n                            changeData.searchCustomer !== \"\" &&\n                            changeData.searchCustomer !== changeData.display\n                              ? \"block\"\n                              : \"none\",\n                        }}\n                      >\n                        {changeData.searchCustomer !== \"\" &&\n                          changeData.searchCustomer !== changeData.display &&\n                          customer.map((row) => {\n                            return row.mobile\n                              .toString()\n                              .includes(changeData.searchCustomer) ||\n                              row.username\n                                .toLowerCase()\n                                .includes(\n                                  changeData.searchCustomer.toLowerCase()\n                                ) ? (\n                              <MenuItem\n                                onClick={() => {\n                                  setData({\n                                    ...changeData,\n                                    searchCustomer: row.mobile,\n                                    display: row.mobile,\n                                  });\n                                }}\n                                key={row.mobile}\n                              >\n                                {row.username} ({row.mobile})\n                              </MenuItem>\n                            ) : (\n                              console.log()\n                            );\n                          })}\n                      </Box>\n                    </Box>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"paid_amount\"\n                      label=\"Paid Amount\"\n                      type=\"number\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"total_amount\"\n                      label=\"Total Amount\"\n                      type=\"number\"\n                    />\n\n                    {changeData.searchCustomer === \"\" && (\n                      <>\n                        {\" \"}\n                        <TextField\n                          size=\"small\"\n                          fullWidth\n                          required\n                          id=\"outlined-select\"\n                          name=\"customer_name\"\n                          label=\"Customer Name\"\n                          type=\"text\"\n                        />\n                        <TextField\n                          size=\"small\"\n                          fullWidth\n                          required\n                          id=\"outlined-select\"\n                          name=\"customer_email\"\n                          label=\"Customer Email\"\n                          type=\"text\"\n                        />\n                        <TextField\n                          size=\"small\"\n                          fullWidth\n                          required\n                          id=\"outlined-select\"\n                          name=\"customer_mobile\"\n                          label=\"Contact Number\"\n                          type=\"number\"\n                        />\n                        <TextField\n                          size=\"small\"\n                          fullWidth\n                          required\n                          id=\"outlined-select\"\n                          name=\"city\"\n                          label=\"City\"\n                          type=\"text\"\n                        />\n                        <TextField\n                          size=\"small\"\n                          fullWidth\n                          required\n                          id=\"outlined-select\"\n                          name=\"state\"\n                          label=\"state\"\n                          type=\"text\"\n                        />\n                        <FormLabel id=\"demo-radio-buttons-group-label\">\n                          Shipping Address\n                        </FormLabel>\n                        <TextareaAutosize\n                          fullWidth\n                          minRows={5}\n                          id=\"outlined-select\"\n                          name=\"shipping\"\n                          type=\"text\"\n                          helperText=\"Please enter your primary material description\"\n                        />\n                      </>\n                    )}\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Order\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* add Hardware */}\n\n            {form.formType === \"hardware\" && (\n              <Grid container p={5} className=\"productPadding\">\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Hardware\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add your hardware and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleHardware);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <Stepper\n                      className=\"stepper\"\n                      activeStep={activeStep}\n                      orientation=\"vertical\"\n                    >\n                      {/* // Specification */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(0)}\n                        >\n                          Specifications\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              disabled\n                              id=\"fullWidth\"\n                              label=\"SKU\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"SKU\"\n                              value={SKU || \"\"}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"title\"\n                              value={changeData.title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              required\n                              id=\"outlined-select\"\n                              select\n                              disabled\n                              name=\"category_name\"\n                              label=\"Category\"\n                              value={changeData.category_name || \"\"}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your category\"\n                            >\n                              {category.map(\n                                (option) =>\n                                  option.category_status && (\n                                    <MenuItem\n                                      key={option._id}\n                                      value={option._id}\n                                    >\n                                      {option.category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              // fullWidth\n                              required\n                              id=\"outlined-select\"\n                              select\n                              name=\"sub_category_name\"\n                              label=\"Sub Category\"\n                              multiple\n                              value={changeData.sub_category_name}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your sub category\"\n                            >\n                              {subCategory.map(\n                                (option) =>\n                                  changeData.category_name ===\n                                    option.category_id && (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option._id}\n                                    >\n                                      {option.sub_category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              {/* <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem> */}\n                            </TextField>\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Material\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.primary_material}\n                              name=\"primary_material\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                              // MenuProps={MenuProps}\n                            >\n                              {materialCatalog.map((option) => (\n                                <MenuItem\n                                  key={option._id}\n                                  value={option.primaryMaterial_name}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.primary_material.indexOf(\n                                        option.primaryMaterial_name\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText\n                                    primary={option.primaryMaterial_name}\n                                  />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Showroom Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"showroom_price\"\n                              value={changeData.showroom_price}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // disabled\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Selling Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              value={\n                                // changeData.MRP > 0 &&\n                                //   changeData.discount_limit > 0\n                                //   ? (changeData.selling_price =\n                                //     changeData.MRP -\n                                //     (changeData.MRP / 100) *\n                                //     changeData.discount_limit)\n                                //   : 0\n                                changeData.selling_price\n                              }\n                              onChange={handleProductFields}\n                              variant=\"outlined\"\n                              name=\"selling_price\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              onChange={(e) => {\n                                handleDiscount(e);\n                                handleProductFields(e);\n                              }}\n                              label=\"Discount Limit\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"discount_limit\"\n                              value={changeData.discount_limit}\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.online_store}\n                                  onChange={handleProductFields}\n                                  name=\"online_store\"\n                                />\n                              }\n                              label=\"Online Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.mobile_store}\n                                  onChange={handleProductFields}\n                                  name=\"mobile_store\"\n                                />\n                              }\n                              label=\"Mobile Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.status}\n                                  onChange={handleProductFields}\n                                  name=\"status\"\n                                />\n                              }\n                              label=\"Status\"\n                            />\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* // Specification Ends*/}\n\n                      {/* Images */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(1)}\n                        >\n                          Images\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 4}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            {/* <AcceptMaxFiles className=\"dorpContainer\"/> */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Images\n                            </FormLabel>\n                            <ProductsPreviews\n                              text={\n                                \"Make Sure the picture ratio should be in 1:1.\"\n                              }\n                            ></ProductsPreviews>\n                            {/* // image selection  */}\n                            {files.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                {files.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = files;\n                                            console.log(\">>>>>>\", temp, files);\n                                            temp.splice(index, 1);\n                                            setFiles([...temp]);\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={URL.createObjectURL(img)}\n                                          alt={img.name}\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // image Squence  Images */}\n                            {files.length > 0 && (\n                              <ImageSquence\n                                text={\"New Images\"}\n                                image={files}\n                                setImage={setFiles}\n                                savedImage={false}\n                              />\n                            )}\n                            {files.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                {files.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = files;\n                                            console.log(\">>>>>>\", temp, files);\n                                            temp.splice(index, 1);\n                                            setFiles([...temp]);\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={URL.createObjectURL(img)}\n                                          alt={img.name}\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // featured images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"featured_image\"\n                              label=\"Feature Image\"\n                              value={changeData.featured_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Featured Image\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // specification images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"specification_image\"\n                              label=\"Specification Image\"\n                              value={changeData.specification_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your specification image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 4}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Images End */}\n\n                      {/* Inventory & Shipping */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(2)}\n                        >\n                          Inventory & Shipping\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 3}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <FormGroup>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Return & Payment Policy\n                              </FormLabel>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.COD}\n                                    onChange={handleProductFields}\n                                    name=\"COD\"\n                                  />\n                                }\n                                label=\"COD Available\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.returnable}\n                                    onChange={handleProductFields}\n                                    name=\"returnable\"\n                                  />\n                                }\n                                label=\"Return Item\"\n                              />\n                            </FormGroup>\n                            {changeData.returnable && (\n                              <>\n                                <Typography\n                                  component={\"span\"}\n                                  variant=\"Caption\"\n                                >\n                                  {\" \"}\n                                  Return in {changeData.returnDays} Days\n                                </Typography>\n                                <Slider\n                                  aria-label=\"Return Days\"\n                                  defaultValue={0}\n                                  size=\"small\"\n                                  name=\"returnDays\"\n                                  value={changeData.returnDays}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your return days\"\n                                  valueLabelDisplay=\"auto\"\n                                />\n                              </>\n                            )}\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Restocking in {changeData.restocking_time} Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"restocking time\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"restocking_time\"\n                              value={changeData.restocking_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your restocking time.\"\n                            />\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Stock Warehouse\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.warehouse}\n                              name=\"warehouse\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                            >\n                              {warehouse.map((option) => (\n                                <MenuItem\n                                  key={option.label}\n                                  value={option.value}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.warehouse.indexOf(\n                                        option.value\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText primary={option.value} />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            {changeData.warehouse.map((row) => {\n                              let stock;\n                              row === \"Jodhpur (Rajasthan)\"\n                                ? (stock = \"jodhpur_stock\")\n                                : (stock = \"bangalore_stock\");\n                              return (\n                                <>\n                                  <TextField\n                                    size=\"small\"\n                                    fullWidth\n                                    name={stock}\n                                    label={row + \" Stock\"}\n                                    type=\"number\"\n                                    value={changeData[stock] || \"\"}\n                                    onChange={handleProductFields}\n                                  />\n                                </>\n                              );\n                            })}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Packaging Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_weight\"\n                              value={changeData.package_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Length\"\n                              type=\"number\"\n                              value={changeData.package_length}\n                              onChange={handleProductFields}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_length\"\n                              helperText=\"From left to right\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_breadth\"\n                              value={changeData.package_breadth}\n                              onChange={handleProductFields}\n                              helperText=\"From front to back\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_height\"\n                              value={changeData.package_height}\n                              onChange={handleProductFields}\n                              helperText=\"From bottom to top\"\n                            />\n                            <Box sx={{ display: \"flex\", mb: 1 }}>\n                              <TextField\n                                size=\"small\"\n                                sx={{ width: \"85%\" }}\n                                id=\"fullWidth\"\n                                label=\"Quantity\"\n                                type=\"Number\"\n                                variant=\"outlined\"\n                                name=\"quantity\"\n                                value={changeData.quantity}\n                                onChange={handleProductFields}\n                              />\n\n                              <TextField\n                                id=\"outlined-select-currency\"\n                                select\n                                sx={{ ml: 1 }}\n                                size=\"small\"\n                                label=\"Unit\"\n                                name=\"unit\"\n                                value={changeData.unit || \"\"}\n                                onChange={handleProductFields}\n                              >\n                                {unitCatalog.map((option) => (\n                                  <MenuItem\n                                    key={option.value}\n                                    value={option.value}\n                                  >\n                                    {option.label}\n                                  </MenuItem>\n                                ))}\n                              </TextField>\n                            </Box>\n                            <Box sx={{ display: \"flex\", mb: 1 }}>\n                              <TextField\n                                size=\"small\"\n                                sx={{ width: \"85%\" }}\n                                id=\"fullWidth\"\n                                label=\"Minimum Quantity For Sell\"\n                                type=\"Number\"\n                                variant=\"outlined\"\n                                name=\"min_quantity\"\n                                value={changeData.min_quantity}\n                                onChange={handleProductFields}\n                              />\n\n                              <TextField\n                                id=\"outlined-select-currency\"\n                                select\n                                sx={{ ml: 1 }}\n                                size=\"small\"\n                                label=\"Unit\"\n                                name=\"unit\"\n                                value={changeData.unit || \"\"}\n                                onChange={handleProductFields}\n                              >\n                                {unitCatalog.map((option) => (\n                                  <MenuItem\n                                    key={option.value}\n                                    value={option.value}\n                                  >\n                                    {option.label}\n                                  </MenuItem>\n                                ))}\n                              </TextField>\n                            </Box>\n                            <FormGroup>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.continue_selling}\n                                    onChange={handleProductFields}\n                                    name=\"continue_selling\"\n                                  />\n                                }\n                                label=\"Continue Selling\"\n                              />\n                            </FormGroup>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 3}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Inventory & Shipping End */}\n\n                      {/* SEO */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(3)}\n                        >\n                          SEO\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 4}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_title\"\n                              value={changeData.seo_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Description\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_description\"\n                              value={changeData.seo_description}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Keyword\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_keyword\"\n                              value={changeData.seo_keyword}\n                              onChange={handleProductFields}\n                            />\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n                            <Grid container sx={{ mt: 1 }}>\n                              <Grid item xs={12}>\n                                <Grid\n                                  container\n                                  sx={{\n                                    display: \"flex\",\n                                    alignItem: \"center\",\n                                    justifyContent: \"space-between\",\n                                  }}\n                                >\n                                  <Grid item xs={11}>\n                                    <TextField\n                                      fullWidth\n                                      value={changeData.item || \"\"}\n                                      size={\"small\"}\n                                      type=\"text\"\n                                      name=\"item\"\n                                      onChange={handleProductFields}\n                                      label=\"Write a point...\"\n                                    />\n                                  </Grid>\n                                  <Grid item xs={0.8}>\n                                    {changeData.select === undefined ? (\n                                      <Button\n                                        fullWidth\n                                        onClick={() => {\n                                          changeData.item !== \"\" &&\n                                            setData({\n                                              ...changeData,\n                                              selling_points: [\n                                                ...changeData.selling_points,\n                                                changeData.item,\n                                              ],\n                                              item: \"\",\n                                            });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Add\n                                      </Button>\n                                    ) : (\n                                      <Button\n                                        onClick={() => {\n                                          setData({\n                                            ...changeData,\n                                            selling_points:\n                                              changeData.selling_points.filter(\n                                                (row, i) => {\n                                                  return (\n                                                    i !== changeData.select\n                                                  );\n                                                }\n                                              ),\n                                            select: undefined,\n                                          });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Remove\n                                      </Button>\n                                    )}\n                                  </Grid>\n                                </Grid>\n                              </Grid>\n                              {changeData.selling_points.length > 0 && (\n                                <Grid\n                                  sx={{\n                                    maxHeight: \"100px\",\n                                    overflowY: \"scroll\",\n                                    mb: 1,\n                                    border: \"2px solid #91441f\",\n                                    padding: \"7px\",\n                                  }}\n                                  item\n                                  xs={12}\n                                >\n                                  <ul style={{ listStyleType: \"square\" }}>\n                                    {changeData.selling_points &&\n                                      changeData.selling_points.map(\n                                        (item, index) => {\n                                          return (\n                                            <li>\n                                              <Typography\n                                                sx={{ cursor: \"pointer\" }}\n                                                onClick={() => {\n                                                  setData({\n                                                    ...changeData,\n                                                    select: index,\n                                                    item: item,\n                                                  });\n                                                }}\n                                                variant=\"body\"\n                                              >\n                                                {index + 1 + \". \"}\n                                                {item}\n                                              </Typography>\n                                            </li>\n                                          );\n                                        }\n                                      )}\n                                  </ul>\n                                </Grid>\n                              )}\n                            </Grid>\n                            {/* product description  */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Description\n                            </FormLabel>\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"product_description\"\n                              onChange={handleProductFields}\n                              defaultValue={changeData.product_description}\n                              type=\"text\"\n                              helperText=\"Please enter your product description\"\n                            />\n                            {/* <Editor\n                              apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                              onInit={(event, editor) =>\n                                (editorRef.current = editor)\n                              }\n                              init={{\n                                height: 300,\n                                menubar: true,\n                              }}\n                            /> */}\n                            {/* selling points  */}\n                            {/* <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"selling_points\"\n                              defaultValue={\"Selling Points\" || changeData.selling_points}\n                              type=\"text\"\n                              helperText=\"Please enter your selling points.\"\n                            /> */}\n                            {/* <Editor\n                              apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                              onInit={(event, editor) =>\n                                (sellingRef.current = editor)\n                              }\n                              init={{\n                                height: 400,\n                                menubar: true,\n                              }}\n                            /> */}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 4}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* SEO End */}\n\n                      {/* Extra details */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(4)}\n                        >\n                          Extra Details\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 4}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            {/* <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"hardware_polish\"\n                              label=\"Hardware Polish\"\n                              value={changeData.hardware_polish || \"\"}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Hardware Polish\"\n                            >\n                              {catalog.polish.length > 0 &&\n                                catalog.polish.map((option) => (\n                                  <MenuItem\n                                    key={option.polish_name}\n                                    value={option.polish_name}\n                                  >\n                                    {option.polish_name}\n                                  </MenuItem>\n                                ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField> */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Product Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"weight\"\n                              value={changeData.weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"tax_rate\"\n                              label=\"Tax Rate\"\n                              value={changeData.tax_rate}\n                              type\n                              onChange={handleProductFields}\n                              helperText=\"Please select your tax rate.\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                            >\n                              {taxRateCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 4}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Extra details */}\n                    </Stepper>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Hardware\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* add Hardware Ends */}\n            {/* update Hardware */}\n\n            {form.formType === \"update_hardware\" && (\n              <Grid container p={5} className=\"productPadding\">\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Hardware\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update your hardware and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateHardware);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <Stepper\n                      className=\"stepper\"\n                      activeStep={activeStep}\n                      orientation=\"vertical\"\n                    >\n                      {/* // Specification */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(0)}\n                        >\n                          Specifications\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              disabled\n                              id=\"fullWidth\"\n                              label=\"SKU\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"SKU\"\n                              value={SKU || \"\"}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"title\"\n                              value={changeData.title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              required\n                              id=\"outlined-select\"\n                              select\n                              disabled\n                              name=\"category_name\"\n                              label=\"Category\"\n                              value={changeData.category_name || \"\"}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your category\"\n                            >\n                              {category.map(\n                                (option) =>\n                                  option.category_status && (\n                                    <MenuItem\n                                      key={option._id}\n                                      value={option._id}\n                                    >\n                                      {option.category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              {/* <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem> */}\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              required\n                              id=\"outlined-select\"\n                              select\n                              name=\"sub_category_name\"\n                              label=\"Sub Category\"\n                              multiple\n                              value={changeData.sub_category_name}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your sub category\"\n                            >\n                              {subCategory.map(\n                                (option) =>\n                                  changeData.category_name ===\n                                    option.category_id && (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option._id}\n                                    >\n                                      {option.sub_category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              {/* <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem> */}\n                            </TextField>\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Material\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.primary_material || []}\n                              name=\"primary_material\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                              // MenuProps={MenuProps}\n                            >\n                              {materialCatalog.map((option) => (\n                                <MenuItem\n                                  key={option._id}\n                                  value={option.primaryMaterial_name}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.primary_material.indexOf(\n                                        option.primaryMaterial_name\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText\n                                    primary={option.primaryMaterial_name}\n                                  />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Showroom Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"showroom_price\"\n                              value={changeData.showroom_price}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // disabled\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Selling Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              value={\n                                // changeData.MRP > 0 &&\n                                //   changeData.discount_limit > 0\n                                //   ? (changeData.selling_price =\n                                //     changeData.MRP -\n                                //     (changeData.MRP / 100) *\n                                //     changeData.discount_limit)\n                                //   : 0\n                                changeData.selling_price\n                              }\n                              onChange={handleProductFields}\n                              variant=\"outlined\"\n                              name=\"selling_price\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"fullWidth\"\n                              onChange={(e) => {\n                                handleDiscount(e);\n                                handleProductFields(e);\n                              }}\n                              label=\"Discount Limit\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"discount_limit\"\n                              value={changeData.discount_limit}\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.online_store}\n                                  onChange={handleProductFields}\n                                  name=\"online_store\"\n                                />\n                              }\n                              label=\"Online Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.mobile_store}\n                                  onChange={handleProductFields}\n                                  name=\"mobile_store\"\n                                />\n                              }\n                              label=\"Mobile Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.status}\n                                  onChange={handleProductFields}\n                                  name=\"status\"\n                                />\n                              }\n                              label=\"Status\"\n                            />\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* // Specification Ends*/}\n\n                      {/* Images */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(1)}\n                        >\n                          Images\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            {/* <AcceptMaxFiles className=\"dorpContainer\"/> */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Images\n                            </FormLabel>\n                            <ProductsPreviews\n                              text={\"Please Drag and Drop the product images\"}\n                            ></ProductsPreviews>\n                            {/* // image selection  */}\n                            {files.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                {files.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = files;\n                                            console.log(\">>>>>>\", temp, files);\n                                            temp.splice(index, 1);\n                                            setFiles([...temp]);\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={URL.createObjectURL(img)}\n                                          alt={img.name}\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // image Squence  Images */}\n                            {files.length > 0 && (\n                              <ImageSquence\n                                text={\"New Images\"}\n                                image={files}\n                                setImage={setFiles}\n                                savedImage={false}\n                              />\n                            )}\n                            {/* saved Image */}\n                            {changeData.savedImages.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                <FormLabel id=\"demo-radio-buttons-group-label\">\n                                  Saved Images\n                                </FormLabel>\n                                {changeData.savedImages.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = changeData.savedImages;\n                                            temp.splice(index, 1);\n                                            setData({\n                                              ...changeData,\n                                              savedImages: temp,\n                                            });\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={img}\n                                          alt=\"productImage\"\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // image Squence saved Images */}\n                            {changeData.savedImages.length > 0 && (\n                              <ImageSquence\n                                text={\"Saved Images\"}\n                                image={changeData.savedImages}\n                                setImage={setData}\n                                savedImage={true}\n                              />\n                            )}\n                            {/* // featured images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"featured_image\"\n                              label=\"Feature Image\"\n                              value={changeData.featured_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Featured Image\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              {/* {console.log(changeData.savedImages)} */}\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // specification images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"specification_image\"\n                              label=\"Specification Image\"\n                              value={changeData.specification_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your specification image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Images End */}\n\n                      {/* Inventory & Shipping */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(2)}\n                        >\n                          Inventory & Shipping\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 3}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <FormGroup>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Return & Payment Policy\n                              </FormLabel>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.COD}\n                                    onChange={handleProductFields}\n                                    name=\"COD\"\n                                  />\n                                }\n                                label=\"COD Available\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.returnable}\n                                    onChange={handleProductFields}\n                                    name=\"returnable\"\n                                  />\n                                }\n                                label=\"Return Item\"\n                              />\n                            </FormGroup>\n                            {changeData.returnable && (\n                              <>\n                                <Typography\n                                  component={\"span\"}\n                                  variant=\"Caption\"\n                                >\n                                  {\" \"}\n                                  Return in {changeData.returnDays} Days\n                                </Typography>\n                                <Slider\n                                  aria-label=\"Return Days\"\n                                  defaultValue={0}\n                                  size=\"small\"\n                                  name=\"returnDays\"\n                                  value={changeData.returnDays}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your return days\"\n                                  valueLabelDisplay=\"auto\"\n                                />\n                              </>\n                            )}\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Restocking in {changeData.restocking_time} Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"restocking time\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"restocking_time\"\n                              value={changeData.restocking_time || 0}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your restocking time.\"\n                            />\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Stock Warehouse\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.warehouse}\n                              name=\"warehouse\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                            >\n                              {warehouse.map((option) => (\n                                <MenuItem\n                                  key={option.label}\n                                  value={option.value}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.warehouse.indexOf(\n                                        option.value\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText primary={option.value} />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            {changeData.warehouse.map((row) => {\n                              let stock;\n                              row === \"Jodhpur (Rajasthan)\"\n                                ? (stock = \"jodhpur_stock\")\n                                : (stock = \"bangalore_stock\");\n                              return (\n                                <>\n                                  <TextField\n                                    size=\"small\"\n                                    fullWidth\n                                    name={stock}\n                                    label={row + \" Stock\"}\n                                    type=\"number\"\n                                    value={changeData[stock] || \"\"}\n                                    onChange={handleProductFields}\n                                  />\n                                </>\n                              );\n                            })}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Packaging Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_weight\"\n                              value={changeData.package_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Length\"\n                              type=\"number\"\n                              value={changeData.package_length}\n                              onChange={handleProductFields}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_length\"\n                              helperText=\"From left to right\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_breadth\"\n                              value={changeData.package_breadth}\n                              onChange={handleProductFields}\n                              helperText=\"From front to back\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_height\"\n                              value={changeData.package_height}\n                              onChange={handleProductFields}\n                              helperText=\"From bottom to top\"\n                            />\n                            <Box sx={{ display: \"flex\", mb: 1 }}>\n                              <TextField\n                                size=\"small\"\n                                sx={{ width: \"85%\" }}\n                                id=\"fullWidth\"\n                                label=\"Quantity\"\n                                type=\"Number\"\n                                variant=\"outlined\"\n                                name=\"quantity\"\n                                value={changeData.quantity}\n                                onChange={handleProductFields}\n                              />\n\n                              <TextField\n                                id=\"outlined-select-currency\"\n                                select\n                                sx={{ ml: 1 }}\n                                size=\"small\"\n                                label=\"Unit\"\n                                name=\"unit\"\n                                value={changeData.unit || \"\"}\n                                onChange={handleProductFields}\n                              >\n                                {unitCatalog.map((option) => (\n                                  <MenuItem\n                                    key={option.value}\n                                    value={option.value}\n                                  >\n                                    {option.label}\n                                  </MenuItem>\n                                ))}\n                              </TextField>\n                            </Box>\n                            <Box sx={{ display: \"flex\", mb: 1 }}>\n                              <TextField\n                                size=\"small\"\n                                sx={{ width: \"85%\" }}\n                                id=\"fullWidth\"\n                                label=\"Minimum Quantity For Sell\"\n                                type=\"Number\"\n                                variant=\"outlined\"\n                                name=\"min_quantity\"\n                                value={changeData.min_quantity}\n                                onChange={handleProductFields}\n                              />\n\n                              <TextField\n                                id=\"outlined-select-currency\"\n                                select\n                                sx={{ ml: 1 }}\n                                size=\"small\"\n                                label=\"Unit\"\n                                name=\"unit\"\n                                value={changeData.unit || \"\"}\n                                onChange={handleProductFields}\n                              >\n                                {unitCatalog.map((option) => (\n                                  <MenuItem\n                                    key={option.value}\n                                    value={option.value}\n                                  >\n                                    {option.label}\n                                  </MenuItem>\n                                ))}\n                              </TextField>\n                            </Box>\n                            <FormGroup>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.continue_selling}\n                                    onChange={handleProductFields}\n                                    name=\"continue_selling\"\n                                  />\n                                }\n                                label=\"Continue Selling\"\n                              />\n                            </FormGroup>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 3}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Inventory & Shipping End */}\n\n                      {/* SEO */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(3)}\n                        >\n                          SEO\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 4}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_title\"\n                              value={changeData.seo_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Description\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_description\"\n                              value={changeData.seo_description}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Keyword\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_keyword\"\n                              value={changeData.seo_keyword}\n                              onChange={handleProductFields}\n                            />\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n                            <Grid container sx={{ mt: 1 }}>\n                              <Grid item xs={12}>\n                                <Grid\n                                  container\n                                  sx={{\n                                    display: \"flex\",\n                                    alignItem: \"center\",\n                                    justifyContent: \"space-between\",\n                                  }}\n                                >\n                                  <Grid item xs={11}>\n                                    <TextField\n                                      fullWidth\n                                      value={changeData.item || \"\"}\n                                      size={\"small\"}\n                                      type=\"text\"\n                                      name=\"item\"\n                                      onChange={handleProductFields}\n                                      label=\"Write a point...\"\n                                    />\n                                  </Grid>\n                                  <Grid item xs={0.8}>\n                                    {changeData.select === undefined ? (\n                                      <Button\n                                        fullWidth\n                                        onClick={() => {\n                                          changeData.item !== \"\" &&\n                                            setData({\n                                              ...changeData,\n                                              selling_points: [\n                                                ...changeData.selling_points,\n                                                changeData.item,\n                                              ],\n                                              item: \"\",\n                                            });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Add\n                                      </Button>\n                                    ) : (\n                                      <Button\n                                        onClick={() => {\n                                          setData({\n                                            ...changeData,\n                                            selling_points:\n                                              changeData.selling_points.filter(\n                                                (row, i) => {\n                                                  return (\n                                                    i !== changeData.select\n                                                  );\n                                                }\n                                              ),\n                                            select: undefined,\n                                          });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Remove\n                                      </Button>\n                                    )}\n                                  </Grid>\n                                </Grid>\n                              </Grid>\n                              {changeData.selling_points.length > 0 && (\n                                <Grid\n                                  sx={{\n                                    maxHeight: \"100px\",\n                                    overflowY: \"scroll\",\n                                    mb: 1,\n                                    border: \"2px solid #91441f\",\n                                    padding: \"7px\",\n                                  }}\n                                  item\n                                  xs={12}\n                                >\n                                  <ul style={{ listStyleType: \"square\" }}>\n                                    {changeData.selling_points &&\n                                      changeData.selling_points.map(\n                                        (item, index) => {\n                                          return (\n                                            <li>\n                                              <Typography\n                                                sx={{ cursor: \"pointer\" }}\n                                                onClick={() => {\n                                                  setData({\n                                                    ...changeData,\n                                                    select: index,\n                                                    item: item,\n                                                  });\n                                                }}\n                                                variant=\"body\"\n                                              >\n                                                {index + 1 + \". \"}\n                                                {item}\n                                              </Typography>\n                                            </li>\n                                          );\n                                        }\n                                      )}\n                                  </ul>\n                                </Grid>\n                              )}\n                            </Grid>\n                            {/* product description  */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Description\n                            </FormLabel>\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"product_description\"\n                              onChange={handleProductFields}\n                              defaultValue={changeData.product_description}\n                              type=\"text\"\n                              helperText=\"Please enter your product description\"\n                            />\n                            {/* <Editor\n                              apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                              onInit={(event, editor) =>\n                                (editorRef.current = editor)\n                              }\n                              init={{\n                                height: 300,\n                                menubar: true,\n                              }}\n                            /> */}\n                            {/* selling points  */}\n                            {/* <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"selling_points\"\n                              defaultValue={\"Selling Points\" || changeData.selling_points}\n                              type=\"text\"\n                              helperText=\"Please enter your selling points.\"\n                            /> */}\n                            {/* <Editor\n                              apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                              onInit={(event, editor) =>\n                                (sellingRef.current = editor)\n                              }\n                              init={{\n                                height: 400,\n                                menubar: true,\n                              }}\n                            /> */}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 4}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* SEO End */}\n\n                      {/* Extra details */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(4)}\n                        >\n                          Extra Details\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 4}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            {/* <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"hardware_polish\"\n                              label=\"Hardware Polish\"\n                              value={changeData.hardware_polish || \"\"}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Hardware Polish\"\n                            >\n                              {catalog.polish.length > 0 &&\n                                catalog.polish.map((option) => (\n                                  <MenuItem\n                                    key={option.polish_name}\n                                    value={option.polish_name}\n                                  >\n                                    {option.polish_name}\n                                  </MenuItem>\n                                ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField> */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Product Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"weight\"\n                              value={changeData.weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"tax_rate\"\n                              label=\"Tax Rate\"\n                              value={changeData.tax_rate}\n                              type=\"number\"\n                              onChange={handleProductFields}\n                              helperText=\"Please select your tax rate.\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                            >\n                              {taxRateCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 4}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Extra details */}\n                    </Stepper>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Hardware\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* update Hardware Ends */}\n\n            {/* add inward */}\n\n            {form.formType === \"inward\" && (\n              <Grid container p={5} className=\"productPadding\">\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Inward\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add your inward stock and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={2}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleInward);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      fullWidth\n                      id=\"outlined-select\"\n                      required\n                      select\n                      size={\"small\"}\n                      helperText=\"Please select the wearhouse for this operation.\"\n                      name=\"warehouse\"\n                      label=\"Select Warehouse...\"\n                      value={changeData.warehouse || \"\"}\n                      onChange={handleProductFields}\n                      multiple\n                    >\n                      {warehouse.map((option) => (\n                        <MenuItem key={option.value} value={option.value}>\n                          {option.value}\n                        </MenuItem>\n                      ))}\n                      {/* <MenuItem key={\"none\"} value=\"None\">\n                        {\"None\"}\n                      </MenuItem> */}\n                    </TextField>\n\n                    <Autocomplete\n                      disablePortal\n                      size=\"small\"\n                      fullWidth\n                      noOptionsText={\"ex : P-01001\"}\n                      multiple\n                      autoHighlight\n                      id=\"combo-box-demo\"\n                      options={productSKU.P_SKU.map((row) => {\n                        return row.SKU;\n                      })}\n                      renderInput={(params) => (\n                        <TextField\n                          onKeyUpCapture={handleSearch}\n                          value={changeData.product_articles || \"\"}\n                          {...params}\n                          label=\"Product SKU\"\n                        />\n                      )}\n                      onChange={(e, newMember) =>\n                        setData((old) => ({\n                          ...old,\n                          product_articles: newMember,\n                        }))\n                      }\n                    />\n\n                    {changeData.product_articles.length > 0 && (\n                      <Box mt={1}>\n                        <Typography component={\"span\"} variant=\"body1\">\n                          Product Quantities\n                        </Typography>\n                        <Box\n                          p={1}\n                          sx={{\n                            display: \"flex\",\n                            gap: \"5px\",\n                            flexDirection: \"column\",\n                            maxHeight: 150,\n                            overflow: \"scroll\",\n                          }}\n                        >\n                          {changeData.product_articles.map((item) => (\n                            <TextField\n                              name={item}\n                              fullWidth\n                              size=\"small\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    {item}\n                                  </InputAdornment>\n                                ),\n                              }}\n                              placeholder={item}\n                              onChange={handleProductFields}\n                              value={changeData[item] || 0}\n                            />\n                          ))}\n                        </Box>\n                      </Box>\n                    )}\n\n                    <Autocomplete\n                      disablePortal\n                      size=\"small\"\n                      fullWidth\n                      multiple\n                      autoHighlight\n                      noOptionsText={\"ex : H-01001\"}\n                      id=\"combo-box-demo\"\n                      options={productSKU.H_SKU.map((row) => {\n                        return row.SKU;\n                      })}\n                      renderInput={(params) => (\n                        <TextField\n                          onKeyUpCapture={handleSearch}\n                          value={changeData.hardware_articles || \"\"}\n                          {...params}\n                          label=\"Hardware SKU\"\n                        />\n                      )}\n                      onChange={(e, newMember) =>\n                        setData((old) => ({\n                          ...old,\n                          hardware_articles: newMember,\n                        }))\n                      }\n                    />\n\n                    {changeData.hardware_articles.length > 0 && (\n                      <Box mt={1}>\n                        <Typography component={\"span\"} variant=\"body1\">\n                          Hardware Quantities\n                        </Typography>\n                        <Box\n                          p={1}\n                          sx={{\n                            display: \"flex\",\n                            gap: \"5px\",\n                            flexDirection: \"column\",\n                            maxHeight: 150,\n                            overflow: \"scroll\",\n                          }}\n                        >\n                          {changeData.hardware_articles.map((item) => (\n                            <TextField\n                              name={item}\n                              fullWidth\n                              size=\"small\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    {item}\n                                  </InputAdornment>\n                                ),\n                              }}\n                              placeholder={item}\n                              onChange={handleProductFields}\n                              value={changeData[item] || 0}\n                            />\n                          ))}\n                        </Box>\n                      </Box>\n                    )}\n\n                    <Autocomplete\n                      disablePortal\n                      size=\"small\"\n                      fullWidth\n                      required\n                      noOptionsText={\"ex : SID-01001\"}\n                      autoHighlight\n                      clearOnEscape\n                      id=\"combo-box-demo\"\n                      options={productSKU.supplier.map((row) => {\n                        return row.SID;\n                      })}\n                      onChange={(e, newMember) =>\n                        setData((old) => ({ ...old, supplier: newMember }))\n                      }\n                      renderInput={(params) => (\n                        <TextField\n                          onKeyUpCapture={handleSupplierList}\n                          value={changeData.supplier || \"\"}\n                          name=\"supplier\"\n                          {...params}\n                          label=\"Supplier\"\n                        />\n                      )}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"fullWidth\"\n                      label=\"Challan No.\"\n                      type=\"number\"\n                      variant=\"outlined\"\n                      name=\"challan_no\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"fullWidth\"\n                      label=\"Vehicle No.\"\n                      type=\"text\"\n                      inputProps={{ style: { textTransform: \"uppercase\" } }}\n                      variant=\"outlined\"\n                      name=\"vehicle_no\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"fullWidth\"\n                      label=\"Driver Name\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"driver_name\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"fullWidth\"\n                      label=\"Driver Number\"\n                      type=\"Number\"\n                      variant=\"outlined\"\n                      name=\"driver_no\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      select\n                      name=\"purpose\"\n                      label=\"Stage of Inventory\"\n                      value={changeData.purpose || \"\"}\n                      multiple\n                      onChange={handleProductFields}\n                      helperText=\"Please select your purpose\"\n                      required\n                    >\n                      {purpose.map(\n                        (option) =>\n                          option && (\n                            <MenuItem key={option} value={option}>\n                              {option}\n                            </MenuItem>\n                          )\n                      )}\n                    </TextField>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Save\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* add Inward Ends */}\n\n            {/* add Outward */}\n\n            {form.formType === \"outward\" && (\n              <Grid container p={5} className=\"productPadding\">\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Outward\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add your outward stock and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={2}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleOutward);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      fullWidth\n                      id=\"outlined-select\"\n                      required\n                      select\n                      size={\"small\"}\n                      helperText=\"Please select the wearhouse for this operation.\"\n                      name=\"warehouse\"\n                      label=\"Select Warehouse...\"\n                      value={changeData.warehouse || \"\"}\n                      onChange={handleProductFields}\n                      multiple\n                    >\n                      {warehouse.map((option) => (\n                        <MenuItem key={option.value} value={option.value}>\n                          {option.value}\n                        </MenuItem>\n                      ))}\n                      {/* <MenuItem key={\"none\"} value=\"None\">\n                        {\"None\"}\n                      </MenuItem> */}\n                    </TextField>\n\n                    <Autocomplete\n                      disablePortal\n                      size=\"small\"\n                      fullWidth\n                      multiple\n                      autoHighlight\n                      noOptionsText={\"ex : P-01001\"}\n                      id=\"combo-box-demo\"\n                      options={productSKU.P_SKU.map((row) => {\n                        return row.product_id + \" Stock :\" + row.stock;\n                      })}\n                      renderInput={(params) => (\n                        <TextField\n                          onKeyUpCapture={handleSearchStockSKU}\n                          value={changeData.product_articles || \"\"}\n                          {...params}\n                          label=\"Product SKU\"\n                        />\n                      )}\n                      onChange={(e, newMember) =>\n                        setData((old) => ({\n                          ...old,\n                          product_articles: newMember,\n                        }))\n                      }\n                    />\n\n                    {changeData.product_articles.length > 0 && (\n                      <Box mt={1}>\n                        <Typography component={\"span\"} variant=\"body1\">\n                          Product Quantities\n                        </Typography>\n                        <Box\n                          p={1}\n                          sx={{\n                            display: \"flex\",\n                            gap: \"5px\",\n                            flexDirection: \"column\",\n                            maxHeight: 150,\n                            overflow: \"scroll\",\n                          }}\n                        >\n                          {changeData.product_articles.map((item) => (\n                            <TextField\n                              name={item}\n                              fullWidth\n                              size=\"small\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    {item.split(\"Stock\")[0]}\n                                  </InputAdornment>\n                                ),\n                              }}\n                              placeholder={item}\n                              onChange={handleProductFields}\n                              value={\n                                changeData[item] <= parseInt(item.split(\":\")[1])\n                                  ? changeData[item]\n                                  : parseInt(item.split(\":\")[1])\n                              }\n                            />\n                          ))}\n                        </Box>\n                      </Box>\n                    )}\n\n                    <Autocomplete\n                      disablePortal\n                      size=\"small\"\n                      fullWidth\n                      noOptionsText={\"ex : H-01001\"}\n                      multiple\n                      autoHighlight\n                      id=\"combo-box-demo\"\n                      options={productSKU.H_SKU.map((row) => {\n                        return row.product_id + \" Stock :\" + row.stock;\n                      })}\n                      renderInput={(params) => (\n                        <TextField\n                          onKeyUpCapture={handleSearchStockSKU}\n                          value={changeData.hardware_articles || \"\"}\n                          {...params}\n                          label=\"Hardware SKU\"\n                        />\n                      )}\n                      onChange={(e, newMember) =>\n                        setData((old) => ({\n                          ...old,\n                          hardware_articles: newMember,\n                        }))\n                      }\n                    />\n\n                    {changeData.hardware_articles.length > 0 && (\n                      <Box mt={1}>\n                        <Typography component={\"span\"} variant=\"body1\">\n                          Hardware Quantities\n                        </Typography>\n                        <Box\n                          p={1}\n                          sx={{\n                            display: \"flex\",\n                            gap: \"5px\",\n                            flexDirection: \"column\",\n                            maxHeight: 150,\n                            overflow: \"scroll\",\n                          }}\n                        >\n                          {changeData.hardware_articles.map((item) => (\n                            <TextField\n                              name={item}\n                              fullWidth\n                              size=\"small\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    {item.split(\"Stock\")[0]}\n                                  </InputAdornment>\n                                ),\n                              }}\n                              placeholder={item}\n                              onChange={handleProductFields}\n                              value={\n                                changeData[item] <= parseInt(item.split(\":\")[1])\n                                  ? changeData[item]\n                                  : parseInt(item.split(\":\")[1])\n                              }\n                            />\n                          ))}\n                        </Box>\n                      </Box>\n                    )}\n\n                    <Autocomplete\n                      disablePortal\n                      size=\"small\"\n                      fullWidth\n                      required\n                      autoHighlight\n                      clearOnEscape\n                      noOptionsText={\"ex : SID-01001\"}\n                      id=\"combo-box-demo\"\n                      options={productSKU.supplier.map((row) => {\n                        return row.SID;\n                      })}\n                      onChange={(e, newMember) =>\n                        setData((old) => ({ ...old, supplier: newMember }))\n                      }\n                      renderInput={(params) => (\n                        <TextField\n                          onKeyUpCapture={handleSupplierList}\n                          value={changeData.supplier || \"\"}\n                          name=\"supplier\"\n                          {...params}\n                          label=\"Supplier\"\n                        />\n                      )}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      name=\"driver_name\"\n                      id=\"fullWidth\"\n                      label=\"Driver Name\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"fullWidth\"\n                      label=\"Driver Number\"\n                      type=\"number\"\n                      variant=\"outlined\"\n                      name=\"driver_no\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"fullWidth\"\n                      label=\"Vehicle No.\"\n                      inputProps={{ style: { textTransform: \"uppercase\" } }}\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"vehicle_no\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"fullWidth\"\n                      label=\"Challan No.\"\n                      type=\"number\"\n                      variant=\"outlined\"\n                      name=\"challan_no\"\n                    />\n\n                    {/* <TextField  \n                      size=\"small\"\n                      fullWidth\n                      id=\"fullWidth\"\n                      label=\"Quantity\"\n                      type=\"number\"\n                      variant=\"outlined\"\n                      name=\"quantity\"\n                    /> */}\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      select\n                      name=\"purpose\"\n                      label=\"Stage of Inventory\"\n                      value={changeData.purpose || \"\"}\n                      multiple\n                      onChange={handleProductFields}\n                      helperText=\"Please select your purpose\"\n                      required\n                    >\n                      {purpose.map(\n                        (option) =>\n                          option && (\n                            <MenuItem key={option} value={option}>\n                              {option}\n                            </MenuItem>\n                          )\n                      )}\n                    </TextField>\n\n                    <TextareaAutosize\n                      size=\"small\"\n                      fullWidth\n                      minRows={3}\n                      maxRows={3}\n                      // required\n                      resize={\"none\"}\n                      id=\"fullWidth\"\n                      placeholder=\"Please eloburate the reson here...\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"reason\"\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Save\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* add outward Ends */}\n\n            {/* add Transfer */}\n\n            {form.formType === \"transfer\" && (\n              <Grid container p={5} className=\"productPadding\">\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Transfer\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Transfer stock and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={2}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleTransfer);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      fullWidth\n                      id=\"outlined-select\"\n                      select\n                      name=\"warehouse\"\n                      size=\"small\"\n                      required\n                      label=\"From Warehouse\"\n                      value={changeData.warehouse || \"\"}\n                      onChange={handleProductFields}\n                      multiple\n                    >\n                      {warehouse.map((option) => (\n                        <MenuItem key={option.value} value={option.value}>\n                          {option.value}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n\n                    <TextField\n                      fullWidth\n                      id=\"outlined-select\"\n                      select\n                      required\n                      size=\"small\"\n                      name=\"warehouse_to\"\n                      label=\"To Warehouse\"\n                      value={changeData.warehouse_to || \"\"}\n                      onChange={handleProductFields}\n                      multiple\n                    >\n                      {warehouse.map(\n                        (option) =>\n                          changeData.warehouse !== option.value && (\n                            <MenuItem key={option.value} value={option.value}>\n                              {option.value}\n                            </MenuItem>\n                          )\n                      )}\n                    </TextField>\n\n                    <Autocomplete\n                      disablePortal\n                      size=\"small\"\n                      fullWidth\n                      multiple\n                      autoHighlight\n                      noOptionsText={\"ex : P-01001\"}\n                      id=\"combo-box-demo\"\n                      options={productSKU.P_SKU.map((row) => {\n                        return row.product_id + \" Stock :\" + row.stock;\n                      })}\n                      renderInput={(params) => (\n                        <TextField\n                          onKeyUpCapture={handleSearchStockSKU}\n                          value={changeData.product_articles || \"\"}\n                          {...params}\n                          label=\"Product SKU\"\n                        />\n                      )}\n                      onChange={(e, newMember) =>\n                        setData((old) => ({\n                          ...old,\n                          product_articles: newMember,\n                        }))\n                      }\n                    />\n\n                    {changeData.product_articles.length > 0 && (\n                      <Box mt={1}>\n                        <Typography component={\"span\"} variant=\"body1\">\n                          Product Quantities\n                        </Typography>\n                        <Box\n                          p={1}\n                          sx={{\n                            display: \"flex\",\n                            gap: \"5px\",\n                            flexDirection: \"column\",\n                            maxHeight: 150,\n                            overflow: \"scroll\",\n                          }}\n                        >\n                          {changeData.product_articles.map((item) => (\n                            <TextField\n                              name={item}\n                              fullWidth\n                              size=\"small\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    {item.split(\"Stock\")[0]}\n                                  </InputAdornment>\n                                ),\n                              }}\n                              placeholder={item}\n                              onChange={handleProductFields}\n                              value={\n                                changeData[item] <= parseInt(item.split(\":\")[1])\n                                  ? changeData[item]\n                                  : parseInt(item.split(\":\")[1])\n                              }\n                            />\n                          ))}\n                        </Box>\n                      </Box>\n                    )}\n\n                    <Autocomplete\n                      disablePortal\n                      size=\"small\"\n                      fullWidth\n                      noOptionsText={\"ex : H-01001\"}\n                      multiple\n                      autoHighlight\n                      id=\"combo-box-demo\"\n                      options={productSKU.H_SKU.map((row) => {\n                        return row.product_id + \" Stock :\" + row.stock;\n                      })}\n                      renderInput={(params) => (\n                        <TextField\n                          onKeyUpCapture={handleSearchStockSKU}\n                          value={changeData.hardware_articles || \"\"}\n                          {...params}\n                          label=\"Hardware SKU\"\n                        />\n                      )}\n                      onChange={(e, newMember) =>\n                        setData((old) => ({\n                          ...old,\n                          hardware_articles: newMember,\n                        }))\n                      }\n                    />\n\n                    {changeData.hardware_articles.length > 0 && (\n                      <Box mt={1}>\n                        <Typography component={\"span\"} variant=\"body1\">\n                          Hardware Quantities\n                        </Typography>\n                        <Box\n                          p={1}\n                          sx={{\n                            display: \"flex\",\n                            gap: \"5px\",\n                            flexDirection: \"column\",\n                            maxHeight: 150,\n                            overflow: \"scroll\",\n                          }}\n                        >\n                          {changeData.hardware_articles.map((item) => (\n                            <TextField\n                              name={item}\n                              fullWidth\n                              size=\"small\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    {item.split(\"Stock\")[0]}\n                                  </InputAdornment>\n                                ),\n                              }}\n                              placeholder={item}\n                              onChange={handleProductFields}\n                              value={\n                                changeData[item] <= parseInt(item.split(\":\")[1])\n                                  ? changeData[item]\n                                  : parseInt(item.split(\":\")[1])\n                              }\n                            />\n                          ))}\n                        </Box>\n                      </Box>\n                    )}\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      select\n                      name=\"purpose\"\n                      label=\"Stage of Inventory\"\n                      value={changeData.purpose || \"\"}\n                      multiple\n                      onChange={handleProductFields}\n                      helperText=\"Please select your purpose\"\n                      required\n                    >\n                      {purpose.map(\n                        (option) =>\n                          option && (\n                            <MenuItem key={option} value={option}>\n                              {option}\n                            </MenuItem>\n                          )\n                      )}\n                    </TextField>\n\n                    <TextareaAutosize\n                      size=\"small\"\n                      fullWidth\n                      minRows={3}\n                      maxRows={3}\n                      // required\n                      resize={\"none\"}\n                      id=\"fullWidth\"\n                      placeholder=\"Please eloburate the reson here...\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"reason\"\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Save\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* add Transfer Ends */}\n\n            {/*  add Polish Material */}\n\n            {form.formType === \"addPolish\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Polish\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add your Polish and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handlePolish);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"polish_name\"\n                      label=\"Polish Name\"\n                      type=\"text\"\n                      helperText=\"Please enter your primary material\"\n                    />\n\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Outdoor Images\n                    </FormLabel>\n                    <ProductsPreviews\n                      text={\"Please Drag and Drop the outdoor image\"}\n                    >\n                      {\" \"}\n                    </ProductsPreviews>\n\n                    {files.length > 0 && (\n                      <Grid sx={{ p: 2 }} spacing={2} container>\n                        {files.map((img, index) => {\n                          return (\n                            <>\n                              <Grid item xs={2} sx={{ position: \"relative\" }}>\n                                <CancelIcon\n                                  onClick={() => {\n                                    // this function is for removing the image from savedImage array\n                                    let temp = files;\n                                    console.log(\">>>>>>\", temp, files);\n                                    temp.splice(index, 1);\n                                    setFiles([...temp]);\n                                  }}\n                                  className=\"imageCross\"\n                                  color=\"primary\"\n                                />\n                                <img\n                                  style={{ width: \"100%\" }}\n                                  src={URL.createObjectURL(img)}\n                                  alt={img.name}\n                                />\n                              </Grid>\n                            </>\n                          );\n                        })}\n                      </Grid>\n                    )}\n\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Indoor Images\n                    </FormLabel>\n                    <IndoorPreviews\n                      text={\"Please Drag and Drop the indoor image\"}\n                    >\n                      {\" \"}\n                    </IndoorPreviews>\n\n                    {Indoor.length > 0 && (\n                      <Grid sx={{ p: 2 }} spacing={2} container>\n                        {Indoor.map((img, index) => {\n                          return (\n                            <>\n                              <Grid item xs={2} sx={{ position: \"relative\" }}>\n                                <CancelIcon\n                                  onClick={() => {\n                                    // this function is for removing the image from savedImage array\n                                    let temp = Indoor;\n                                    console.log(\">>>>>>\", temp, Indoor);\n                                    temp.splice(index, 1);\n                                    setIndoor([...temp]);\n                                  }}\n                                  className=\"imageCross\"\n                                  color=\"primary\"\n                                />\n                                <img\n                                  style={{ width: \"100%\" }}\n                                  src={URL.createObjectURL(img)}\n                                  alt={img.name}\n                                />\n                              </Grid>\n                            </>\n                          );\n                        })}\n                      </Grid>\n                    )}\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      select\n                      name=\"polish_type\"\n                      label=\"Polish Type\"\n                      value={changeData.polish_type || \"\"}\n                      multiple\n                      onChange={handleProductFields}\n                      helperText=\"Please select your polish type.\"\n                      required\n                    >\n                      {polishCatalog.map(\n                        (option) =>\n                          option && (\n                            <MenuItem key={option} value={option}>\n                              {option}\n                            </MenuItem>\n                          )\n                      )}\n                      <MenuItem key={\"None\"} value={\"None\"}>\n                        {\"None\"}\n                      </MenuItem>\n                    </TextField>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      select\n                      name=\"polish_finish\"\n                      label=\"Polish Finish\"\n                      value={changeData.polish_finish || \"\"}\n                      multiple\n                      onChange={handleProductFields}\n                      helperText=\"Please select your polish finish.\"\n                      required\n                    >\n                      <MenuItem key={\"Glossy\"} value={\"Glossy\"}>\n                        {\"Glossy\"}\n                      </MenuItem>\n\n                      <MenuItem key={\"Matt\"} value={\"Matt\"}>\n                        {\"Matt\"}\n                      </MenuItem>\n                      <MenuItem key={\"None\"} value={\"None\"}>\n                        {\"None\"}\n                      </MenuItem>\n                    </TextField>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      select\n                      name=\"level\"\n                      label=\"Polish Level\"\n                      value={changeData.level || \"\"}\n                      multiple\n                      onChange={handleProductFields}\n                      helperText=\"Please select your polish level.\"\n                      required\n                    >\n                      {level.map(\n                        (option) =>\n                          option && (\n                            <MenuItem key={option} value={option}>\n                              {option}\n                            </MenuItem>\n                          )\n                      )}\n                      <MenuItem key={\"None\"} value={\"None\"}>\n                        {\"None\"}\n                      </MenuItem>\n                    </TextField>\n\n                    <TextField\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"price\"\n                      label=\"Price (per Inch)\"\n                      type=\"number\"\n                    />\n\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={changeData.lock}\n                          onChange={handleProductFields}\n                          name=\"lock\"\n                        />\n                      }\n                      label=\"Lock Polish\"\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Polish\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* add addPolish  Ends */}\n\n            {/*  update Polish Material */}\n\n            {form.formType === \"update_polish\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Polish\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update your Polish and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdatePolish);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"polish_name\"\n                      value={changeData.polish_name || \"\"}\n                      onChange={handleProductFields}\n                      label=\"Polish Name\"\n                      type=\"text\"\n                      helperText=\"Please enter your primary material\"\n                    />\n\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Outdoor Images\n                    </FormLabel>\n                    <ProductsPreviews\n                      text={\"Please Drag and Drop the outdoor image\"}\n                    >\n                      {\" \"}\n                    </ProductsPreviews>\n\n                    {files.length > 0 && (\n                      <Grid sx={{ p: 2 }} spacing={2} container>\n                        {files.map((img, index) => {\n                          return (\n                            <>\n                              <Grid item xs={2} sx={{ position: \"relative\" }}>\n                                <CancelIcon\n                                  onClick={() => {\n                                    // this function is for removing the image from savedImage array\n                                    let temp = files;\n                                    console.log(\">>>>>>\", temp, files);\n                                    temp.splice(index, 1);\n                                    setFiles([...temp]);\n                                  }}\n                                  className=\"imageCross\"\n                                  color=\"primary\"\n                                />\n                                <img\n                                  style={{ width: \"100%\" }}\n                                  src={URL.createObjectURL(img)}\n                                  alt={img.name}\n                                />\n                              </Grid>\n                            </>\n                          );\n                        })}\n                      </Grid>\n                    )}\n\n                    {changeData.savedImages.length > 0 && (\n                      <Grid sx={{ p: 2 }} spacing={2} container>\n                        <FormLabel id=\"demo-radio-buttons-group-label\">\n                          Saved Images\n                        </FormLabel>\n                        {changeData.savedImages.map((img, index) => {\n                          return (\n                            <>\n                              <Grid item xs={2} sx={{ position: \"relative\" }}>\n                                <CancelIcon\n                                  onClick={() => {\n                                    // this function is for removing the image from savedImage array\n                                    let temp = changeData.savedImages;\n                                    temp.splice(index, 1);\n                                    setData({\n                                      ...changeData,\n                                      savedImages: temp,\n                                    });\n                                  }}\n                                  className=\"imageCross\"\n                                  color=\"primary\"\n                                />\n                                <img\n                                  style={{ width: \"100%\" }}\n                                  src={img}\n                                  alt=\"productImage\"\n                                />\n                              </Grid>\n                            </>\n                          );\n                        })}\n                      </Grid>\n                    )}\n\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Indoor Images\n                    </FormLabel>\n                    <IndoorPreviews\n                      text={\"Please Drag and Drop the indoor image\"}\n                    >\n                      {\" \"}\n                    </IndoorPreviews>\n\n                    {/* {console.log(Indoor)} */}\n                    {Indoor.length > 0 && (\n                      <Grid sx={{ p: 2 }} spacing={2} container>\n                        {Indoor.map((img, index) => {\n                          return (\n                            <>\n                              <Grid item xs={2} sx={{ position: \"relative\" }}>\n                                <CancelIcon\n                                  onClick={() => {\n                                    // this function is for removing the image from savedImage array\n                                    let temp = Indoor;\n                                    console.log(\">>>>>>\", temp, Indoor);\n                                    temp.splice(index, 1);\n                                    setIndoor([...temp]);\n                                  }}\n                                  className=\"imageCross\"\n                                  color=\"primary\"\n                                />\n                                <img\n                                  style={{ width: \"100%\" }}\n                                  src={URL.createObjectURL(img)}\n                                  alt={img.name}\n                                />\n                              </Grid>\n                            </>\n                          );\n                        })}\n                      </Grid>\n                    )}\n\n                    {changeData.indoorSavedImage.length > 0 && (\n                      <Grid sx={{ p: 2 }} spacing={2} container>\n                        <FormLabel id=\"demo-radio-buttons-group-label\">\n                          Saved Images\n                        </FormLabel>\n                        {changeData.indoorSavedImage.map((img, index) => {\n                          return (\n                            <>\n                              <Grid item xs={2} sx={{ position: \"relative\" }}>\n                                <CancelIcon\n                                  onClick={() => {\n                                    // this function is for removing the image from savedImage array\n                                    let temp = changeData.indoorSavedImage;\n                                    temp.splice(index, 1);\n                                    setData({\n                                      ...changeData,\n                                      indoorSavedImage: temp,\n                                    });\n                                  }}\n                                  className=\"imageCross\"\n                                  color=\"primary\"\n                                />\n                                <img\n                                  style={{ width: \"100%\" }}\n                                  src={img}\n                                  alt=\"productImage\"\n                                />\n                              </Grid>\n                            </>\n                          );\n                        })}\n                      </Grid>\n                    )}\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"outlined-select\"\n                      value={changeData.polish_type || \"\"}\n                      onChange={handleProductFields}\n                      select\n                      name=\"polish_type\"\n                      label=\"Polish Type\"\n                      multiple\n                      helperText=\"Please select your polish type.\"\n                      required\n                    >\n                      {polishCatalog.map(\n                        (option) =>\n                          option && (\n                            <MenuItem key={option} value={option}>\n                              {option}\n                            </MenuItem>\n                          )\n                      )}\n                      <MenuItem key={\"None\"} value={\"None\"}>\n                        {\"None\"}\n                      </MenuItem>\n                    </TextField>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      select\n                      name=\"polish_finish\"\n                      value={changeData.polish_finish || \"\"}\n                      onChange={handleProductFields}\n                      label=\"Polish Finish\"\n                      multiple\n                      helperText=\"Please select your polish finish.\"\n                      required\n                    >\n                      <MenuItem key={\"Glossy\"} value={\"Glossy\"}>\n                        {\"Glossy\"}\n                      </MenuItem>\n\n                      <MenuItem key={\"Matt\"} value={\"Matt\"}>\n                        {\"Matt\"}\n                      </MenuItem>\n                      <MenuItem key={\"None\"} value={\"None\"}>\n                        {\"None\"}\n                      </MenuItem>\n                    </TextField>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      select\n                      name=\"level\"\n                      label=\"Polish Level\"\n                      value={changeData.level || \"\"}\n                      multiple\n                      onChange={handleProductFields}\n                      helperText=\"Please select your polish level.\"\n                      required\n                    >\n                      {level.map(\n                        (option) =>\n                          option && (\n                            <MenuItem key={option} value={option}>\n                              {option}\n                            </MenuItem>\n                          )\n                      )}\n                      <MenuItem key={\"None\"} value={\"None\"}>\n                        {\"None\"}\n                      </MenuItem>\n                    </TextField>\n\n                    <TextField\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"price\"\n                      value={changeData.price || 0}\n                      onChange={handleProductFields}\n                      label=\"Price (per Inch)\"\n                      type=\"number\"\n                    />\n\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={changeData.lock}\n                          onChange={handleProductFields}\n                          name=\"lock\"\n                        />\n                      }\n                      label=\"Lock Polish\"\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Polish\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* update addPolish  Ends */}\n\n            {/* add Review */}\n\n            {form.formType === \"review\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Review\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add review from here.\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={2}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleReview);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <Autocomplete\n                      freeSolo\n                      size=\"small\"\n                      fullWidth\n                      noOptionsText={\"ex : P-01001\"}\n                      autoHighlight\n                      id=\"combo-box-demo\"\n                      options={productSKU.P_SKU.map((row) => {\n                        return row.SKU;\n                      })}\n                      renderInput={(params) => (\n                        <TextField\n                          onKeyUpCapture={handleSearch}\n                          value={changeData.product_articles || \"\"}\n                          {...params}\n                          label=\"Product SKU\"\n                        />\n                      )}\n                      onChange={(e, val) =>\n                        setData((old) => ({\n                          ...old,\n                          product_id: val,\n                        }))\n                      }\n                    />\n\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Review Images\n                    </FormLabel>\n                    <ProductsPreviews\n                      text={\"Please Drag and Drop the review image\"}\n                    >\n                      {\" \"}\n                    </ProductsPreviews>\n\n                    {files.length > 0 && (\n                      <Grid sx={{ p: 2 }} spacing={2} container>\n                        {files.map((img, index) => {\n                          return (\n                            <>\n                              <Grid item xs={2} sx={{ position: \"relative\" }}>\n                                <CancelIcon\n                                  onClick={() => {\n                                    // this function is for removing the image from savedImage array\n                                    let temp = files;\n                                    console.log(\">>>>>>\", temp, files);\n                                    temp.splice(index, 1);\n                                    setFiles([...temp]);\n                                  }}\n                                  className=\"imageCross\"\n                                  color=\"primary\"\n                                />\n                                <img\n                                  style={{ width: \"100%\" }}\n                                  src={URL.createObjectURL(img)}\n                                  alt={img.name}\n                                />\n                              </Grid>\n                            </>\n                          );\n                        })}\n                      </Grid>\n                    )}\n\n                    {/* // image Squence  Images */}\n                    {files.length > 0 && (\n                      <ImageSquence\n                        text={\"New Images\"}\n                        image={files}\n                        setImage={setFiles}\n                        savedImage={false}\n                      />\n                    )}\n\n                    {/* rating */}\n                    <Box className=\"rating\">\n                      <Typography vriatn=\"h6\">\n                        How much you want to rate it?\n                      </Typography>\n                      <Rating\n                        name=\"hover-feedback\"\n                        // value={reviewData.data.rating || 4}\n                        precision={0.5}\n                        getLabelText={getLabelText}\n                        onChange={(event, newValue) => {\n                          setData((old) => ({ ...old, rating: newValue }));\n                        }}\n                        onChangeActive={(event, newHover) => {\n                          setHover(newHover);\n                        }}\n                        emptyIcon={\n                          <StarIcon\n                            style={{ opacity: 0.55 }}\n                            fontSize=\"inherit\"\n                          />\n                        }\n                      />\n                      {changeData.rating !== null && (\n                        <Box sx={{ ml: 2 }}>\n                          {labels[hover !== -1 ? hover : changeData.rating]}\n                        </Box>\n                      )}\n                    </Box>\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      label=\"Review Title\"\n                      size=\"small\"\n                      value={changeData.review_title}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"review_title\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"YouTube URL\"\n                      value={changeData.yourTube_url}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"yourTube_url\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"Reviewer Name (Name you want to show on review)\"\n                      value={changeData.reviewer_name}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"reviewer_name\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"Reviewer Email\"\n                      value={changeData.reviewer_email}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"reviewer_email\"\n                    />\n                    <TextareaAutosize\n                      minRows={5}\n                      maxRows={5}\n                      required\n                      name=\"review\"\n                      className=\"customTextArea\"\n                      placeholder=\"Write something beautiful...\"\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      value={changeData.review}\n                      onChange={handleProductFields}\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Review\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* add REview ends */}\n\n            {/*  update Review */}\n\n            {form.formType === \"update_review\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Edit Review\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Edit review from here.\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={2}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateReview);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      disabled\n                      onKeyUpCapture={handleSearch}\n                      size=\"small\"\n                      value={changeData.product_id}\n                      label=\"Product SKU\"\n                    />\n\n                    {/* rating */}\n                    <Box className=\"rating\">\n                      <Typography vriatn=\"h6\">\n                        How much you want to rate it?\n                      </Typography>\n                      <Rating\n                        name=\"hover-feedback\"\n                        value={changeData.rating || 4}\n                        precision={0.5}\n                        getLabelText={getLabelText}\n                        onChange={(event, newValue) => {\n                          setData((old) => ({ ...old, rating: newValue }));\n                        }}\n                        onChangeActive={(event, newHover) => {\n                          setHover(newHover);\n                        }}\n                        emptyIcon={\n                          <StarIcon\n                            style={{ opacity: 0.55 }}\n                            fontSize=\"inherit\"\n                          />\n                        }\n                      />\n                      {changeData.rating !== null && (\n                        <Box sx={{ ml: 2 }}>\n                          {labels[hover !== -1 ? hover : changeData.rating]}\n                        </Box>\n                      )}\n                    </Box>\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      label=\"Review Title\"\n                      size=\"small\"\n                      value={changeData.review_title}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"review_title\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"YouTube URL\"\n                      value={changeData.yourTube_url}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"yourTube_url\"\n                    />\n\n                    <TextareaAutosize\n                      minRows={5}\n                      maxRows={5}\n                      required\n                      name=\"review\"\n                      className=\"customTextArea\"\n                      placeholder=\"Write something beautiful...\"\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      value={changeData.review}\n                      onChange={handleProductFields}\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Review\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* update Review  Ends */}\n\n            {/* add Banner */}\n\n            {form.formType === \"add_banner\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Banner\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add banner details from here.\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={2}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleBanner);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Web View Banner Image (1920*1080)\n                    </FormLabel>\n                    <WebBannerPreviews\n                      webBanner={webBanner}\n                      setWebBanner={setWebBanner}\n                      text={\"Please Drag and Drop the Web Banner.\"}\n                    >\n                      {\" \"}\n                    </WebBannerPreviews>\n\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Mobile View Banner Image (800*200)\n                    </FormLabel>\n                    <MobileBannerPreviews\n                      mobileBanner={mobileBanner}\n                      setMobileBanner={setMobileBanner}\n                      text={\"Please Drag and Drop the Mobile Banner.\"}\n                    >\n                      {\" \"}\n                    </MobileBannerPreviews>\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      label=\"Banner Title\"\n                      size=\"small\"\n                      value={changeData.banner_title}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"banner_title\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"Redirecting URL for Web\"\n                      value={changeData.web_url}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"web_url\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"Redirecting URL for Mobile\"\n                      value={changeData.mobile_url}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"mobile_url\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      label=\"Sequence Number\"\n                      size=\"small\"\n                      required\n                      error={sequence.includes(\n                        parseInt(changeData.sequence_no)\n                      )}\n                      helperText={\n                        sequence.includes(parseInt(changeData.sequence_no)) &&\n                        \"Index is already in use.\"\n                      }\n                      type=\"number\"\n                      value={\n                        changeData.sequence_no < 0 ? 0 : changeData.sequence_no\n                      }\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"sequence_no\"\n                    />\n\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox\n                            checked={changeData.web_banner_status}\n                            onChange={handleProductFields}\n                            name=\"web_banner_status\"\n                          />\n                        }\n                        label=\"Web Banner Status\"\n                      />\n                      <FormControlLabel\n                        control={\n                          <Checkbox\n                            checked={changeData.mobile_banner_status}\n                            onChange={handleProductFields}\n                            name=\"mobile_banner_status\"\n                          />\n                        }\n                        label=\"Mobile Banner Status\"\n                      />\n                    </FormGroup>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Banner\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* add Banner ends */}\n            {/* Update Banner */}\n\n            {form.formType === \"update_banner\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Banner\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update banner details from here.\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={2}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateBanner);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Web View Banner Image (1920*1080)\n                    </FormLabel>\n                    <WebBannerPreviews\n                      webBanner={webBanner}\n                      setWebBanner={setWebBanner}\n                      text={\"Please Drag and Drop the Web Banner.\"}\n                    >\n                      {\" \"}\n                    </WebBannerPreviews>\n                    {changeData.web_banner && (\n                      <>\n                        <FormLabel id=\"demo-radio-buttons-group-label\">\n                          Present Banner\n                        </FormLabel>\n                        <Box\n                          sx={{\n                            width: \"200px\",\n                            img: {\n                              width: \"100%\",\n                            },\n                          }}\n                        >\n                          <img alt=\"web_banner\" src={changeData.web_banner} />\n                        </Box>\n                      </>\n                    )}\n\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Mobile View Banner Image (800*200)\n                    </FormLabel>\n                    <MobileBannerPreviews\n                      mobileBanner={mobileBanner}\n                      setMobileBanner={setMobileBanner}\n                      text={\"Please Drag and Drop the Mobile Banner.\"}\n                    >\n                      {\" \"}\n                    </MobileBannerPreviews>\n                    {changeData.mobile_banner && (\n                      <>\n                        <FormLabel id=\"demo-radio-buttons-group-label\">\n                          Present Banner\n                        </FormLabel>\n                        <Box\n                          sx={{\n                            width: \"200px\",\n                            img: {\n                              width: \"100%\",\n                            },\n                          }}\n                        >\n                          <img\n                            alt=\"mobile_banner\"\n                            src={changeData.mobile_banner}\n                          />\n                        </Box>\n                      </>\n                    )}\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      label=\"Banner Title\"\n                      size=\"small\"\n                      value={changeData.banner_title}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"banner_title\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"Redirecting URL for Web\"\n                      value={changeData.web_url}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"web_url\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"Redirecting URL for Mobile\"\n                      value={changeData.mobile_url}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"mobile_url\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      // error={sequence.includes(changeData.sequence_no)}\n                      label={`Sequence Number`}\n                      size=\"small\"\n                      type=\"number\"\n                      required\n                      error={\n                        parseInt(changeData.old_sequence_no) !==\n                          parseInt(changeData.sequence_no) &&\n                        sequence.includes(parseInt(changeData.sequence_no))\n                      }\n                      helperText={\n                        parseInt(changeData.old_sequence_no) !==\n                          parseInt(changeData.sequence_no) &&\n                        sequence.includes(parseInt(changeData.sequence_no)) &&\n                        \"Index is already in use.\"\n                      }\n                      value={\n                        changeData.sequence_no < 0 ? 0 : changeData.sequence_no\n                      }\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"sequence_no\"\n                    />\n\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox\n                            checked={changeData.web_banner_status}\n                            onChange={handleProductFields}\n                            name=\"web_banner_status\"\n                          />\n                        }\n                        label=\"Web Banner Status\"\n                      />\n                      <FormControlLabel\n                        control={\n                          <Checkbox\n                            checked={changeData.mobile_banner_status}\n                            onChange={handleProductFields}\n                            name=\"mobile_banner_status\"\n                          />\n                        }\n                        label=\"Mobile Banner Status\"\n                      />\n                    </FormGroup>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Banner\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* Update REview ends */}\n          </Box>\n        </Backdrop>\n      </Slide>\n    </>\n  );\n};\n\n// for label the ratting\n\nexport default SideForm;\n\n// banner dimension for web 1920*1080\nfunction WebBannerDimension(images, setWebBanner) {\n  let result = images.map(async (image) => {\n    let { width, height } = await size(URL.createObjectURL(image));\n    console.log(width, height);\n    Object.assign(image, {\n      preview: URL.createObjectURL(image),\n      validate: width === 1920 && height === 1080 ? true : false,\n    });\n    return image;\n  });\n  Promise.all(result).then((res) => setWebBanner([...res]));\n}\n\nfunction WebBannerPreviews({ text, webBanner, setWebBanner }) {\n  const [acceptedFileItems, setAcceptedFileItems] = useState([]);\n  const [fileRejectionItems, setFileRejectionItems] = useState([]);\n\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: \"image/*\",\n    multiple: false,\n    onDrop: (acceptedFiles) => {\n      WebBannerDimension(acceptedFiles, setWebBanner);\n    },\n  });\n\n  // for check the file state in done or\n  useMemo(() => {\n    if (webBanner) {\n      // REJECTED FILES\n      setFileRejectionItems(\n        webBanner.map((file) => {\n          return !file.validate ? (\n            <div style={thumb} key={file.name}>\n              <div style={thumbInner}>\n                {/* {console.log(file.validate)} */}\n\n                <img\n                  src={URL.createObjectURL(file)}\n                  style={img}\n                  alt=\"Images\"\n                  // Revoke data uri after image is loaded\n                  onLoad={() => {\n                    URL.revokeObjectURL(file.preview);\n                  }}\n                />\n              </div>\n            </div>\n          ) : null;\n        })\n      );\n\n      // accepted\n      setAcceptedFileItems(\n        webBanner.map((file, index) => {\n          return file.validate ? (\n            <div style={thumb} key={file.name}>\n              <div style={thumbInner}>\n                {/* {console.log(file.validate)} */}\n\n                <img\n                  src={URL.createObjectURL(file)}\n                  style={img}\n                  alt=\"Images\"\n                  // Revoke data uri after image is loaded\n                  onLoad={() => {\n                    URL.revokeObjectURL(file.preview);\n                  }}\n                />\n              </div>\n            </div>\n          ) : null;\n        })\n      );\n    }\n  }, [webBanner]);\n\n  useEffect(() => {\n    // Make sure to revoke the data uris to avoid memory leaks, will run on unmount\n    return () => webBanner.forEach((file) => URL.revokeObjectURL(file.preview));\n  }, []);\n\n  return (\n    <section className=\"container dorpContainer\">\n      <div {...getRootProps({ className: \"dropzone\" })}>\n        <input {...getInputProps()} />\n        <p>{text}</p>\n      </div>\n      <aside>\n        <h4>Accepted files</h4>\n        <aside style={thumbsContainer}>{acceptedFileItems}</aside>\n        <h4>Rejected files</h4>\n        <aside style={thumbsContainer}>{fileRejectionItems}</aside>\n      </aside>\n    </section>\n  );\n}\n// banner dimension for mobile 800*200\nfunction MobileBannerDimension(images, setMobileBanner) {\n  let result = images.map(async (image) => {\n    let { width, height } = await size(URL.createObjectURL(image));\n    // console.log(width,height)\n    Object.assign(image, {\n      preview: URL.createObjectURL(image),\n      validate: width === 800 && height === 200 ? true : false,\n    });\n    return image;\n  });\n  Promise.all(result).then((res) => setMobileBanner([...res]));\n}\n\nfunction MobileBannerPreviews({ text, mobileBanner, setMobileBanner }) {\n  const [acceptedFileItems, setAcceptedFileItems] = useState([]);\n  const [fileRejectionItems, setFileRejectionItems] = useState([]);\n\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: \"image/*\",\n    multiple: false,\n    onDrop: (acceptedFiles) => {\n      MobileBannerDimension(acceptedFiles, setMobileBanner);\n    },\n  });\n\n  // for check the file state in done or\n  useMemo(() => {\n    if (mobileBanner) {\n      // REJECTED FILES\n      setFileRejectionItems(\n        mobileBanner.map((file) => {\n          return !file.validate ? (\n            <div style={thumb} key={file.name}>\n              <div style={thumbInner}>\n                {/* {console.log(file.validate)} */}\n\n                <img\n                  src={URL.createObjectURL(file)}\n                  style={img}\n                  alt=\"Images\"\n                  // Revoke data uri after image is loaded\n                  onLoad={() => {\n                    URL.revokeObjectURL(file.preview);\n                  }}\n                />\n              </div>\n            </div>\n          ) : null;\n        })\n      );\n\n      // accepted\n      setAcceptedFileItems(\n        mobileBanner.map((file, index) => {\n          return file.validate ? (\n            <div style={thumb} key={file.name}>\n              <div style={thumbInner}>\n                {/* {console.log(file.validate)} */}\n\n                <img\n                  src={URL.createObjectURL(file)}\n                  style={img}\n                  alt=\"Images\"\n                  // Revoke data uri after image is loaded\n                  onLoad={() => {\n                    URL.revokeObjectURL(file.preview);\n                  }}\n                />\n              </div>\n            </div>\n          ) : null;\n        })\n      );\n    }\n  }, [mobileBanner]);\n\n  useEffect(() => {\n    // Make sure to revoke the data uris to avoid memory leaks, will run on unmount\n    return () =>\n      mobileBanner.forEach((file) => URL.revokeObjectURL(file.preview));\n  }, []);\n\n  return (\n    <section className=\"container dorpContainer\">\n      <div {...getRootProps({ className: \"dropzone\" })}>\n        <input {...getInputProps()} />\n        <p>{text}</p>\n      </div>\n      <aside>\n        <h4>Accepted files</h4>\n        <aside style={thumbsContainer}>{acceptedFileItems}</aside>\n        <h4>Rejected files</h4>\n        <aside style={thumbsContainer}>{fileRejectionItems}</aside>\n      </aside>\n    </section>\n  );\n}\n"],"names":["option","labels","confirmable","cancellable","thumbsContainer","display","flexDirection","flexWrap","marginTop","thumb","borderRadius","border","marginBottom","marginRight","width","height","padding","boxSizing","thumbInner","minWidth","overflow","img","style","position","top","left","transform","bgcolor","boxShadow","p","useState","files","setFiles","webBanner","setWebBanner","mobileBanner","setMobileBanner","featured","setFeatured","React","hover","setHover","sequence","setSequence","confirm","useConfirm","confirmBox","e","action","preventDefault","description","then","catch","err","console","log","Image","setImages","Indoor","setIndoor","open","setOpen","address","setAddress","FeaturesPreviews","props","useDropzone","accept","multiple","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","thumbs","src","alt","onLoad","revokeObjectURL","name","className","text","Dimension","images","result","image","size","validate","Promise","all","res","old","ProductsPreviews","acceptedFileItems","setAcceptedFileItems","fileRejectionItems","setFileRejectionItems","useMemo","index","useEffect","forEach","ImagePreviews","IndoorPreviews","polishCatalog","taxRateCatalog","value","label","backStyleCatalog","legCatalog","warehouse","weightCapCatalog","trollyMaterial","assemblyLevelCatalog","unitCatalog","purpose","level","useSelector","state","form","mode","dispatch","useDispatch","cat","setCat","discount_limit","MRP","discount","setDiscount","activeStep","setActiveStep","SKU","setSKU","category","setCategory","subCategory","setSubCategory","materialCatalog","setMaterialCatalog","SKUCatalog","setSKUCatalog","customer","setCustomerCatalog","P_SKU","H_SKU","supplier","productSKU","setProductSKU","hinge","knob","door","handle","fitting","polish","fabric","wheel","ceramic_drawer","ceramic_tiles","catalog","setCatalog","editorRef","useRef","CVW","ACIN","primary_material","product_articles","hardware_articles","category_discount","range","product_array","variation_array","savedImages","specification_image","featured_image","mannequin_image","shipping","product_title","seo_title","seo_description","seo_keyword","product_des","sub_category","length","breadth","selling_points","priMater","priMater_weight","secMater","secMater_weight","selling_price","mrp","discount_cap","polish_time","manufacturing_time","wight_cap","wall_hanging","assembly_required","assembly_leg","assembly_part","silver","weight","selling_point","mirror","joints","tax_rate","seat_width","seat_depth","seat_height","wheel_included","trolly","returnable","returnDays","trolly_mater","top_size_length","top_size_breadth","dial_size","COD","textile","paid_amount","total_amount","customer_name","customer_email","shipping_address","searchCustomer","mobile_store","online_store","continue_selling","ceramic_drawer_included","ceramic_tiles_included","unit","quantity","textile_type","category_id","sub_category_id","product_description","legs","assembly_level","mattress","mattress_length","mattress_breadth","hinge_qty","knob_qty","handle_qty","door_qty","plywood","wheel_qty","cradle_bed","amazon_url","flipkart_url","jiomart_url","cradle_bed_depth","cradle_bed_height","cradle_bed_width","showroom_price","length_main","ceramic_drawer_qty","ceramic_tiles_qty","back_style","weight_capacity","drawer","package_breadth","package_height","package_length","silver_weight","mirror_length","mirror_width","drawer_count","seating_size_width","seating_size_depth","seating_size_height","restocking_time","min_quantity","hardware_polish","warehouse_to","wood_weight","metal_weight","package_weight","polish_name","polish_type","polish_finish","lock","price","indoorSavedImage","status","web_banner_status","mobile_banner_status","marketing","sequence_no","changeData","setData","getLabelText","getDID","getDraftID","data","parseInt","DID","split","setSequenceFunc","getSequence","formType","getLastHardware","getPrimaryMaterial","categoryList","hardware","filter","row","category_name","_id","getSubCatagories","payload","title","sub_category_name","hardware_image","bangalore_stock","jodhpur_stock","primary_material_name","getHardwareDropdown","getLastProduct","product_image","warehouse_name","hinge_name","knob_name","handle_name","door_name","fitting_name","fabric_qty","fabric_name","upholstery","trolley","trolley_material","rotating_seats","eatable_oil_polish","no_chemical","straight_back","lean_back","weaving","knife","not_suitable_for_Micro_Dish","tilt_top","inside_compartments","stackable","wheel_name","ceramic_tiles_name","ceramic_drawers_qty","ceramic_drawers","ceramic_drawers_included","ceramic_drawers_name","getLastOrder","OID","getPresentSKUs","customerCatalog","primaryMaterial_name","primaryMaterial_description","customizations","card_image","card_description","parent_SKU","variations","variant_label","CID","register_time","username","mobile","email","password","city","getLastMergeProduct","M","item","qty","product_id","stock","supplier_name","gst_no","alt_mobile","specialization","SID","getLastSupplier","outDoor_image","inDoor_image","formattedValue","rating","review","review_title","yourTube_url","uuid","web_banner","web_url","old_sequence_no","mobile_banner","mobile_url","banner_title","handleNextStep","handleBackStep","handleDiscount","target","handleChangeData","feature","handleProductFields","includes","checked","handleChange","event","handleClose","resetAll","setForm","handleCategory","FD","FormData","append","category_status","addDraft","setAlert","variant","message","handleUpdateCategory","undefined","handleCustomer","JSON","stringify","addCustomer","setRow","id","response","profile_image","handleUpdateCustomer","updateCustomer","set","path","document","getElementById","reset","handleProduct","element","secondary_material_weight","handleVariation","variation","handleUpdateProduct","handleMergeProduct","Product_SKU","addMergeProduct","total","handleUpdateMergeProduct","updateMergeProduct","updates","handlePrimaryMaterial","primaryMaterial_status","handleUpdatePrimaryMaterial","handleSupplier","addSupplier","handleUpdateSupplier","editSupplier","handleApplyDiscount","discount_array","applyDiscount","handleInward","Hardware_SKU","challan_no","vehicle_no","toUpperCase","driver_name","driver_no","addInward","inward_id","order_no","date","handleOutward","cred","trim","reason","addOutward","outward_id","handleTransfer","addTransfer","transfer_id","handleSubCategories","sub_category_status","handleUpdateSubCategories","catName","url","setUrl","handleUpload","uploadImage","handleAddBlog","current","getContent","handleUpdateBlog","handleOrder","customer_mobile","addOrder","handleAddress","pincode","type","handleHardware","handleUpdateHardware","multiOBJ","handlePolish","handleUpdatePolish","handleReview","reviewer_name","reviewer_email","addReview","setCheck","admin_reply","review_images","review_videos","hide","handleUpdateReview","updateReview","handleSupplierList","delayDebounceFn","setTimeout","getSupplierDropdown","Suppliers","clearTimeout","handleSearchStockSKU","getStockSKU","search","handleSearch","getArticlesId","handleSearchCategory","getCategoryList","handleBanner","handleUpdateBanner","Slide","direction","in","mountOnEnter","unmountOnExit","Backdrop","sx","zIndex","theme","Box","IconButton","onClick","color","Cancel","Grid","container","xs","Typography","component","mt","onSubmit","encType","method","Stepper","orientation","Step","StepLabel","cursor","StepContent","Button","disabled","TextField","fullWidth","required","select","onChange","helperText","MenuItem","InputProps","startAdornment","InputAdornment","InputLabel","Select","renderValue","selected","join","Checkbox","indexOf","ListItemText","primary","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","mb","spacing","temp","splice","ImageSquence","setImage","savedImage","justifyContent","alignItems","FormGroup","Slider","defaultValue","valueLabelDisplay","ml","alignItem","i","maxHeight","overflowY","listStyleType","TextareaAutosize","minRows","placeholder","pattern","Autocomplete","autoHighlight","noOptionsText","options","renderInput","params","onKeyUpCapture","newMember","gap","disablePortal","isOptionEqualToValue","isInclude","maxRows","Modal","onClose","closeAfterTransition","BackdropComponent","BackdropProps","timeout","Fade","apiKey","initialValue","onInit","editor","init","menubar","plugins","displayEmpty","pb","overflowWrap","borderStyle","mr","Add","toString","toLowerCase","clearOnEscape","inputProps","textTransform","resize","freeSolo","val","vriatn","Rating","precision","newValue","onChangeActive","newHover","emptyIcon","Star","opacity","fontSize","WebBannerPreviews","MobileBannerPreviews","error","WebBannerDimension","MobileBannerDimension"],"sourceRoot":""}