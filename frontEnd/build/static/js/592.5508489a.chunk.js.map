{"version":3,"file":"static/js/592.5508489a.chunk.js","mappings":"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","sources":["components/dashboard/order/Orders.js","../node_modules/@mui/icons-material/FilterAlt.js","../node_modules/@mui/icons-material/FilterAltOff.js","../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js"],"sourcesContent":["import React, { useState, useMemo } from \"react\";\n// import PropTypes from 'prop-types';\nimport {\n  Typography,\n  TextField,\n  InputAdornment,\n  IconButton,\n  MenuItem,\n  Grid,\n  Box,\n  Button,\n} from \"@mui/material\";\nimport FilterAltIcon from \"@mui/icons-material/FilterAlt\";\nimport FilterAltOffIcon from \"@mui/icons-material/FilterAltOff\";\n\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { useDispatch } from \"react-redux\";\nimport { setAlert } from \"../../../store/action/action\";\nimport {\n  getOrder,\n  changeOrderStatus,\n  deleteOrder,\n} from \"../../../services/service\";\nimport \"../../../assets/custom/css/category.css\";\n\nimport { DataGrid } from \"@mui/x-data-grid\";\n\nexport default function Order() {\n  // context\n  const dispatch = useDispatch();\n  const [pageState, setPageState] = useState({\n    data: [],\n    isLoading: false,\n    page: 1,\n    limit: 10,\n    total: 0,\n    O: undefined,\n    customer_name: undefined,\n    customer_email: undefined,\n    date: \"\",\n    filter: false,\n  });\n\n  async function fetchData() {\n    setPageState((lastState) => ({\n      ...lastState,\n      isLoading: true,\n    }));\n    getOrder({\n      page: pageState.page,\n      limit: pageState.limit,\n      total: pageState.total,\n      O: pageState.O,\n      customer_name: pageState.customer_name,\n      customer_email: pageState.customer_email,\n    })\n      .then((data) => {\n        setPageState((lastState) => ({\n          ...lastState,\n          data: data.data.data.map((row, index) => {\n            return {\n              id: index + 1,\n              O: row.O,\n              order_time: row.order_time,\n              status: row.status,\n              CID: row.CID,\n              customer_name: row.customer_name,\n              customer_email: row.customer_email,\n              customer_mobile: row.customer_mobile,\n              city: row.city,\n              state: row.state,\n              shipping: row.shipping,\n              quantity: JSON.stringify(row.quantity),\n              discount: row.discount,\n              paid: parseInt((row.paid / row.total) * 100) + \"%\",\n              total: row.total,\n              note: row.note || \"\",\n              action: row._id,\n            };\n          }),\n          isLoading: false,\n          total: data.data.total,\n          filter: false,\n        }));\n      })\n      .catch((err) => {});\n  }\n\n  useMemo(() => {\n    fetchData();\n  }, [pageState.page, pageState.limit, pageState.filter]);\n\n  const [status, setStatus] = useState({});\n\n  const statusCatalog = [\n    {\n      key: \"processing\",\n      value: \"processing\",\n      color: \"blue\",\n    },\n    {\n      key: \"completed\",\n      value: \"completed\",\n      color: \"green\",\n    },\n    {\n      key: \"cancel\",\n      value: \"cancel\",\n      color: \"red\",\n    },\n  ];\n\n  const columns = [\n    {\n      field: \"id\",\n      headerName: \"ID\",\n      width: 50,\n    },\n    {\n      field: \"status\",\n      editable: true,\n      headerName: \"Status\",\n      width: 150,\n      renderCell: (params) => (\n        <TextField\n          size=\"small\"\n          fullWidth\n          id=\"outlined-select\"\n          sx={{\n            background:\n              params.formattedValue === \"completed\"\n                ? \"#52ffc9\"\n                : params.formattedValue === \"cancel\"\n                ? \"#fdabab\"\n                : params.formattedValue === \"processing\"\n                ? \"#b9abfd\"\n                : \"\",\n          }}\n          value={status[params.row.action] || params.formattedValue}\n          select\n          name={params.row.action}\n          multiple\n          onChange={handleStatus}\n        >\n          {statusCatalog.map((option) => (\n            <MenuItem key={option.key} value={option.value}>\n              {option.value}\n            </MenuItem>\n          ))}\n        </TextField>\n      ),\n    },\n    {\n      field: \"O\",\n      headerName: \"Order ID\",\n      width: 100,\n    },\n    {\n      field: \"CID\",\n      headerName: \"Customer ID\",\n      width: 100,\n    },\n    {\n      field: \"customer_name\",\n      headerName: \"Customer Name\",\n      width: 150,\n      align: \"center\",\n    },\n    {\n      field: \"customer_email\",\n      headerName: \"Customer Email\",\n      width: 250,\n      align: \"center\",\n    },\n    {\n      field: \"city\",\n      headerName: \"City\",\n      width: 100,\n    },\n    {\n      field: \"state\",\n      headerName: \"State\",\n      width: 100,\n    },\n    {\n      field: \"shipping\",\n      headerName: \"Shipping Address\",\n      width: 200,\n    },\n    {\n      field: \"order_time\",\n      headerName: \"Order Time/Date\",\n      width: 200,\n      align: \"center\",\n    },\n    {\n      field: \"quantity\",\n      headerName: \"Product $ Quantity\",\n      width: 200,\n    },\n\n    {\n      field: \"discount\",\n      headerName: \"Discount\",\n      width: 80,\n      align: \"center\",\n    },\n\n    {\n      field: \"paid\",\n      headerName: \"Paid Amount\",\n      width: 80,\n      align: \"center\",\n    },\n    {\n      field: \"total\",\n      headerName: \"Total Amount\",\n      width: 80,\n      align: \"center\",\n    },\n    {\n      field: \"note\",\n      headerName: \"Note\",\n      width: 80,\n      align: \"center\",\n    },\n\n    {\n      field: \"action\",\n      headerName: \"Actions\",\n      width: 200,\n      renderCell: (params) => (\n        <div className=\"categoryImage\">\n          {/* <IconButton\n            onClick={() => {\n              dispatch(setForm({\n                state: true,\n                formType: \"update_order\",\n                payload: params,\n                row: Row,\n                setRow: setRows\n              }));\n            }}\n            aria-label=\"delete\"\n          >\n            <CreateIcon />\n          </IconButton> */}\n          {/* <IconButton onClick={() => {\n            deleteOrder(params.formattedValue).then((res) => {\n              setPageState(old => ({\n                ...old, total: old.total - 1,\n                data: old.data.filter((set) => {\n                  return set.action !== params.formattedValue;\n                })\n              }));\n\n              dispatch(setAlert({\n                open: true,\n                variant: 'success',\n                message: 'Order Deleted !!!'\n              }))\n            })\n          }} aria-label=\"delete\"  >\n            <DeleteIcon />\n          </IconButton> */}\n        </div>\n      ),\n    },\n  ];\n\n  const clearFilter = () => {\n    return setPageState((old) => ({\n      ...old,\n      O: undefined,\n      date: \"\",\n      customer_name: undefined,\n      customer_email: undefined,\n      order_time: \"\",\n      filter: !old.filter,\n    }));\n  };\n  // status update\n  const handleStatus = (e) => {\n    setStatus({ ...status, [e.target.name]: e.target.value });\n\n    //console.log(e.target.name);\n\n    const FD = new FormData();\n\n    FD.append(\"_id\", e.target.name);\n    FD.append(\"status\", e.target.value);\n\n    const res = changeOrderStatus(FD);\n\n    res\n      .then((data) => {\n        console.log(data);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"success\",\n            message: \" Order Status Updated Successfully !!!\",\n          })\n        );\n      })\n      .catch((err) => {\n        console.log(err);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleSearch = (e) => {\n    return setPageState((old) => ({ ...old, [e.target.name]: e.target.value }));\n  };\n\n  //   setData({\n  //     OID: '',\n  //     CUS: '',\n  //     CID: null,\n  //     customer_email: '',\n  //     customer_mobile: '',\n  //     customer_name: '',\n  //     shipping: '',\n  //     product_array: [],\n  //     quantity: [],\n  //     subTotal: 0,\n  //     discount: 0,\n  //     total: 0,\n  //     status: 'processing',\n  //     city: '',\n  //     state: '',\n  //     paid: 0,\n  //     note: ''\n  //   })\n  //   setActiveStep(0)\n  //   setValue(0)\n  // }\n\n  // data grid for data view\n  function DataGridView(columns, height) {\n    return (\n      <div style={{ height: height, width: \"100%\" }}>\n        <DataGrid\n          filterModel={{\n            items: [\n              {\n                columnField: \"order_time\",\n                operatorValue: \"contains\",\n                value: `${pageState.date}`,\n              },\n            ],\n          }}\n          rows={pageState.data}\n          rowCount={pageState.total}\n          loading={pageState.isLoading}\n          rowsPerPageOptions={[10, 30, 50, 70, 100]}\n          pagination\n          pageSize={pageState.limit}\n          page={pageState.page - 1}\n          limit={pageState.limit}\n          paginationMode=\"server\"\n          onPageChange={(newPage) => {\n            setPageState((old) => ({ ...old, page: newPage + 1 }));\n          }}\n          onPageSizeChange={(newPageSize) =>\n            setPageState((old) => ({ ...old, limit: newPageSize }))\n          }\n          columns={columns}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Box sx={{ pl: 4, pr: 4 }}>\n      <Typography component={\"span\"} sx={{ display: \"block\" }} variant=\"h5\">\n        Order\n      </Typography>\n      <br></br>\n\n      {/* Section 1  */}\n\n      <Grid\n        container\n        p={2}\n        sx={{\n          boxShadow: 1,\n          borderRadius: 2,\n          alignItems: \"center !important\",\n          gap: \"10px\",\n        }}\n      >\n        <Grid xs={12} md={2.5}>\n          <TextField\n            size=\"small\"\n            fullWidth\n            id=\"demo-helper-text-aligned-no-helper\"\n            type=\"text\"\n            placeholder=\"ex O-01001\"\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">O</InputAdornment>\n              ),\n            }}\n            value={pageState.O || \"\"}\n            name=\"O\"\n            onChange={handleSearch}\n          />\n        </Grid>\n        <Grid xs={12} md={2.5}>\n          <TextField\n            size=\"small\"\n            fullWidth\n            id=\"demo-helper-text-aligned-no-helper\"\n            type=\"text\"\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">Name</InputAdornment>\n              ),\n            }}\n            value={pageState.customer_name || \"\"}\n            name=\"customer_name\"\n            onChange={handleSearch}\n          />\n        </Grid>\n        <Grid xs={12} md={2.5}>\n          <TextField\n            size=\"small\"\n            fullWidth\n            // autoComplete={false}\n            id=\"demo-helper-text-aligned-no-helper\"\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">Email</InputAdornment>\n              ),\n            }}\n            value={pageState.customer_email || \"\"}\n            name=\"customer_email\"\n            type=\"email\"\n            onChange={handleSearch}\n          />\n        </Grid>\n        <Grid xs={12} md={2.5}>\n          <TextField\n            size=\"small\"\n            fullWidth\n            // autoComplete={false}\n            value={pageState.date}\n            id=\"demo-helper-text-aligned-no-helper\"\n            type=\"date\"\n            name=\"date\"\n            onChange={handleSearch}\n          />\n        </Grid>\n\n        <Grid\n          xs={12}\n          md={1.5}\n          sx={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            gap: \"5px\",\n          }}\n        >\n          <Button\n            color=\"primary\"\n            fullWidth\n            variant=\"contained\"\n            onClick={() => {\n              setPageState((old) => ({ ...old, filter: !old.filter }));\n            }}\n          >\n            <FilterAltIcon />\n          </Button>\n          <Button\n            color=\"primary\"\n            fullWidth\n            variant=\"outlined\"\n            onClick={clearFilter}\n          >\n            <FilterAltOffIcon />\n          </Button>\n        </Grid>\n      </Grid>\n\n      {/* Section 1 ends  */}\n      <br></br>\n\n      {/* data grid & create order  */}\n\n      <Grid\n        container\n        scaping={2}\n        sx={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItem: \"center\",\n        }}\n      >\n        <Grid\n          item\n          p={2}\n          xs={12}\n          sx={{ boxShadow: 1, borderRadius: 5, maxHeight: 500 }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Typography component={\"span\"} variant=\"h6\">\n              {\" \"}\n              Order List{\" \"}\n            </Typography>\n            {/* <Button\n              onClick={() => {\n               dispatch({type : OpenBox,payload : { state: true, formType: \"add_order\" }});\n              }}\n              color=\"primary\"\n              variant=\"contained\"\n            >\n              Show Custom Order\n            </Button> */}\n          </div>\n          <></>\n          <br></br>\n          {DataGridView(columns, 400)}\n        </Grid>\n      </Grid>\n\n      {/* data grid ends  */}\n    </Box>\n  );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z\"\n}), 'FilterAlt');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19.79 5.61C20.3 4.95 19.83 4 19 4H6.83l7.97 7.97 4.99-6.36zM2.81 2.81 1.39 4.22 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-2.17l5.78 5.78 1.41-1.41L2.81 2.81z\"\n}), 'FilterAltOff');\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _span;\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      disablePointerEvents = false,\n      disableTypography = false,\n      position,\n      variant: variantProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ? /* notranslate needed while Google Translate will not fix zero-width space issue */_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        })) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;"],"names":["Order","dispatch","useDispatch","useState","data","isLoading","page","limit","total","O","undefined","customer_name","customer_email","date","filter","pageState","setPageState","lastState","getOrder","then","map","row","index","id","order_time","status","CID","customer_mobile","city","state","shipping","quantity","JSON","stringify","discount","paid","parseInt","note","action","_id","catch","err","useMemo","fetchData","setStatus","statusCatalog","key","value","color","columns","field","headerName","width","editable","renderCell","params","size","fullWidth","sx","background","formattedValue","select","name","multiple","onChange","handleStatus","option","align","className","e","target","FD","FormData","append","changeOrderStatus","console","log","setAlert","open","variant","message","handleSearch","old","pl","pr","component","display","container","p","boxShadow","borderRadius","alignItems","gap","xs","md","type","placeholder","InputProps","startAdornment","position","justifyContent","onClick","scaping","alignItem","item","maxHeight","style","height","filterModel","items","columnField","operatorValue","rows","rowCount","loading","rowsPerPageOptions","pagination","pageSize","paginationMode","onPageChange","newPage","onPageSizeChange","newPageSize","DataGridView","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getInputAdornmentUtilityClass","slot","generateUtilityClass","_span","generateUtilityClasses","_excluded","InputAdornmentRoot","styled","overridesResolver","props","styles","ownerState","root","capitalize","disablePointerEvents","theme","_extends","whiteSpace","vars","palette","active","inputAdornmentClasses","marginTop","marginRight","marginLeft","pointerEvents","React","inProps","ref","useThemeProps","children","disableTypography","variantProp","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","hiddenLabel","classes","slots","composeClasses","useUtilityClasses","_jsx","FormControlContext","as","clsx","_jsxs","Typography"],"sourceRoot":""}