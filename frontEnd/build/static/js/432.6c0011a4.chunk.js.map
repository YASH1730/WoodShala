{"version":3,"file":"static/js/432.6c0011a4.chunk.js","mappings":"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oBACA,gBACA,aACA,iBACA,aACA,kBAGIC,GAAiB,CACrB,CACEC,MAAO,GACPC,MAAO,IAET,CACED,MAAO,GACPC,MAAO,IAET,CACED,MAAO,GACPC,MAAO,IAET,CACED,MAAO,EACPC,MAAO,GAET,CACED,MAAO,EACPC,MAAO,GAET,CACED,MAAO,EACPC,MAAO,GAET,CACED,MAAO,EACPC,MAAO,IAGLC,GAAmB,CACvB,CACEF,MAAO,YACPC,MAAO,aAET,CACED,MAAO,gBACPC,MAAO,kBAILE,GAAa,CACjB,CACEH,MAAO,eACPC,MAAO,gBAET,CACED,MAAO,iBACPC,MAAO,mBAGLG,GAAY,CAChB,CACEJ,MAAO,wBACPC,MAAO,yBAET,CACED,MAAO,sBACPC,MAAO,wBAILI,GAAmB,CACvB,CACEL,MAAO,QACPC,MAAO,SAET,CACED,MAAO,eACPC,MAAO,gBAET,CACED,MAAO,QACPC,MAAO,UAILK,GAAiB,CACrB,CACEN,MAAO,YACPC,MAAO,aAET,CACED,MAAO,qBACPC,MAAO,sBAET,CACED,MAAO,QACPC,MAAO,SAET,CACED,MAAO,QACPC,MAAO,SAET,CACED,MAAO,QACPC,MAAO,SAET,CACED,MAAO,SACPC,MAAO,UAET,CACED,MAAO,QACPC,MAAO,SAET,CACED,MAAO,aACPC,MAAO,cAET,CACED,MAAO,YACPC,MAAO,aAET,CACED,MAAO,cACPC,MAAO,eAET,CACED,MAAO,gBACPC,MAAO,iBAET,CACED,MAAO,UACPC,MAAO,WAET,CACED,MAAO,kBACPC,MAAO,mBAET,CACED,MAAO,YACPC,MAAO,aAET,CACED,MAAO,aACPC,MAAO,eAGLM,GAAO,CACX,CACEP,MAAO,YACPC,MAAO,aAGT,CACED,MAAO,QACPC,MAAO,SAGT,CACED,MAAO,0BACPC,MAAO,2BAGT,CACED,MAAO,QACPC,MAAO,SAGT,CACED,MAAO,cACPC,MAAO,gBA8BLO,GAAU,CACd,QACA,UACA,WACA,WACA,WACA,SACA,OACA,gBACA,YACA,UACA,SACA,YAGIC,GAAuB,CAC3B,CA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","sources":["components/dashboard/form/SideForm.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useMemo } from \"react\";\nimport {\n  Button,\n  IconButton,\n  MenuItem,\n  Grid,\n  Box,\n  Typography,\n  TextField,\n  Modal,\n  InputAdornment,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  Checkbox,\n  FormGroup,\n  Fade,\n  Stepper,\n  Step,\n  StepLabel,\n  StepContent,\n  Slider,\n  Select,\n  TextareaAutosize,\n  ListItemText,\n  InputLabel,\n  Autocomplete,\n  Rating,\n} from \"@mui/material\";\nimport { Editor } from \"@tinymce/tinymce-react\";\nimport Slide from \"@mui/material/Slide\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport \"../../../assets/custom/css/sideForm.css\";\nimport { useDropzone } from \"react-dropzone\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport AddIcon from \"@mui/icons-material/Add\";\n\n// component\nimport ImageSquence from \"../../Utility/ImageSquence\";\n// service APIS\nimport {\n  getLastProduct,\n  categoryList,\n  getSubCatagories,\n  // addPrimaryMaterial,\n  // editPrimaryMaterial,\n  getPrimaryMaterial,\n  addSupplier,\n  editSupplier,\n  createBlog,\n  updateBlog,\n  getLastHardware,\n  addMergeProduct,\n  updateMergeProduct,\n  getLastMergeProduct,\n  getPresentSKUs,\n  addCustomer,\n  updateCustomer,\n  addOrder,\n  getLastOrder,\n  customerCatalog,\n  variation,\n  getHardwareDropdown,\n  getDraftID,\n  addDraft,\n  getArticlesId,\n  getLastSupplier,\n  getSupplierDropdown,\n  addInward,\n  addOutward,\n  uploadImage,\n  addTransfer,\n  getStockSKU,\n  // addPolish,\n  // editPolish,\n  updateReview,\n  getCategoryList,\n  applyDiscount,\n  addReview,\n  getSequence,\n  getAddress,\n  listPincode,\n  addUser,\n  updateUser,\n} from \"../../../services/service.js\";\nimport { useConfirm } from \"material-ui-confirm\";\n\nimport { setAlert, setForm } from \"../../../store/action/action\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport StarIcon from \"@mui/icons-material/Star\";\nimport size from \"react-image-size\";\nimport { fromUnixTime } from \"date-fns/esm\";\n\nimport config from \"../../../config.json\";\n\nconst option = {\n  labels: {\n    confirmable: \"Proceed\",\n    cancellable: \"Cancel\",\n  },\n};\n\nconst thumbsContainer = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  flexWrap: \"wrap\",\n  marginTop: 16,\n};\n\nconst thumb = {\n  display: \"inline-flex\",\n  borderRadius: 2,\n  border: \"1px solid #eaeaea\",\n  marginBottom: 8,\n  marginRight: 8,\n  width: 50,\n  height: 50,\n  padding: 4,\n  boxSizing: \"border-box\",\n};\n\nconst thumbInner = {\n  display: \"flex\",\n  minWidth: 0,\n  overflow: \"hidden\",\n};\n\nconst img = {\n  display: \"block\",\n  width: \"auto\",\n  height: \"100%\",\n};\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 3,\n};\n\nconst SideForm = () => {\n  // multiple images\n  const [files, setFiles] = useState([]);\n  const [webBanner, setWebBanner] = useState([]);\n  const [mobileBanner, setMobileBanner] = useState([]);\n  const [featured, setFeatured] = useState([]);\n  const [hover, setHover] = React.useState(-1); // for rating in review\n\n  const [sequence, setSequence] = useState([]);\n  // image link\n  const imageLink = `${config.Official_API_Image}/upload/`;\n\n  const confirm = useConfirm();\n\n  // confirmBox\n  const confirmBox = (e, action) => {\n    e.preventDefault();\n\n    confirm({ description: `Data will listed in Database !!!` }, option)\n      .then(() => action(e))\n      .catch((err) => {\n        console.log(\"Operation cancelled because. \", err);\n      });\n  };\n\n  // single images\n  const [Image, setImages] = useState([]);\n  const [Indoor, setIndoor] = useState([]);\n\n  // modal state\n  const [open, setOpen] = useState(false);\n\n  // address object\n  const [address, setAddress] = useState([]);\n\n  function FeaturesPreviews(props) {\n    const { getRootProps, getInputProps } = useDropzone({\n      accept: \"image/*\",\n      multiple: false,\n      onDrop: (acceptedFiles) => {\n        setFeatured(\n          acceptedFiles.map((file) =>\n            Object.assign(file, {\n              preview: URL.createObjectURL(file),\n            })\n          )\n        );\n      },\n    });\n\n    const thumbs = featured.map((file) => (\n      <div style={thumb} key={file.name}>\n        <div style={thumbInner}>\n          <img\n            src={file.preview}\n            style={img}\n            alt=\"Images\"\n            // Revoke data uri after image is loaded\n            onLoad={() => {\n              URL.revokeObjectURL(file.preview);\n            }}\n          />\n        </div>\n      </div>\n    ));\n\n    return (\n      <section className=\"container dorpContainer\">\n        <div {...getRootProps({ className: \"dropzone\" })}>\n          <input {...getInputProps()} />\n          <p>{props.text}</p>\n        </div>\n        <aside style={thumbsContainer}>{thumbs}</aside>\n      </section>\n    );\n  }\n\n  const labels = {\n    0.5: \"Useless\",\n    1: \"Useless+\",\n    1.5: \"Poor\",\n    2: \"Poor+\",\n    2.5: \"Ok\",\n    3: \"Ok+\",\n    3.5: \"Good\",\n    4: \"Good+\",\n    4.5: \"Excellent\",\n    5: \"Excellent+\",\n  };\n\n  // function for the filter the image to the basis of ratio 1:1\n  function Dimension(images, setFiles) {\n    let result = images.map(async (image) => {\n      let { width, height } = await size(URL.createObjectURL(image));\n      // console.log(width,height)\n      Object.assign(image, {\n        preview: URL.createObjectURL(image),\n        validate: width === height ? true : false,\n      });\n      return image;\n    });\n    Promise.all(result).then((res) =>\n      setFiles((old) => {\n        return [...old, ...res];\n      })\n    );\n  }\n  function ProductsPreviews(props) {\n    const [acceptedFileItems, setAcceptedFileItems] = useState([]);\n    const [fileRejectionItems, setFileRejectionItems] = useState([]);\n\n    const { getRootProps, getInputProps } = useDropzone({\n      accept: \"image/*\",\n      multiple: true,\n      onDrop: (acceptedFiles) => {\n        Dimension(acceptedFiles, setFiles);\n      },\n    });\n\n    // for check the file state in done or\n    useMemo(() => {\n      if (files) {\n        // REJECTED FILES\n        setFileRejectionItems(\n          files.map((file) => {\n            return !file.validate ? (\n              <div style={thumb} key={file.name}>\n                <div style={thumbInner}>\n                  {/* {console.log(file.validate)} */}\n\n                  <img\n                    src={URL.createObjectURL(file)}\n                    style={img}\n                    alt=\"Images\"\n                    // Revoke data uri after image is loaded\n                    onLoad={() => {\n                      URL.revokeObjectURL(file.preview);\n                    }}\n                  />\n                </div>\n              </div>\n            ) : null;\n          })\n        );\n\n        // accepted\n        setAcceptedFileItems(\n          files.map((file, index) => {\n            return file.validate ? (\n              <div style={thumb} key={file.name}>\n                <div style={thumbInner}>\n                  {/* {console.log(file.validate)} */}\n\n                  <img\n                    src={URL.createObjectURL(file)}\n                    style={img}\n                    alt=\"Images\"\n                    // Revoke data uri after image is loaded\n                    onLoad={() => {\n                      URL.revokeObjectURL(file.preview);\n                    }}\n                  />\n                </div>\n              </div>\n            ) : null;\n          })\n        );\n      }\n    }, [files]);\n\n    useEffect(() => {\n      // Make sure to revoke the data uris to avoid memory leaks, will run on unmount\n      return () => files.forEach((file) => URL.revokeObjectURL(file.preview));\n    }, []);\n\n    return (\n      <section className=\"container dorpContainer\">\n        <div {...getRootProps({ className: \"dropzone\" })}>\n          <input {...getInputProps()} />\n          <p>{props.text}</p>\n        </div>\n        <aside>\n          <h4>Accepted files</h4>\n          <aside style={thumbsContainer}>{acceptedFileItems}</aside>\n          <h4>Rejected files</h4>\n          <aside style={thumbsContainer}>{fileRejectionItems}</aside>\n        </aside>\n      </section>\n    );\n  }\n  function ImagePreviews(props) {\n    const { getRootProps, getInputProps } = useDropzone({\n      accept: \"image/*\",\n      multiple: false,\n      onDrop: (acceptedFiles) => {\n        setImages(\n          acceptedFiles.map((file) =>\n            Object.assign(file, {\n              preview: URL.createObjectURL(file),\n            })\n          )\n        );\n      },\n    });\n\n    const thumbs = Image.map((file) => (\n      <div style={thumb} key={file.name}>\n        <div style={thumbInner}>\n          <img\n            src={file.preview}\n            style={img}\n            alt=\"Images\"\n            // Revoke data uri after image is loaded\n            onLoad={() => {\n              URL.revokeObjectURL(file.preview);\n            }}\n          />\n        </div>\n      </div>\n    ));\n\n    return (\n      <section className=\"container dorpContainer\">\n        <div {...getRootProps({ className: \"dropzone\" })}>\n          <input {...getInputProps()} />\n          <p>{props.text}</p>\n        </div>\n        <aside style={thumbsContainer}>{thumbs}</aside>\n      </section>\n    );\n  }\n  function IndoorPreviews(props) {\n    const [acceptedFileItems, setAcceptedFileItems] = useState([]);\n    const [fileRejectionItems, setFileRejectionItems] = useState([]);\n\n    const { getRootProps, getInputProps } = useDropzone({\n      accept: \"image/*\",\n      multiple: true,\n      onDrop: (acceptedFiles) => {\n        Dimension(acceptedFiles, setIndoor);\n      },\n    });\n\n    // for check the file state in done or\n    useMemo(() => {\n      if (Indoor) {\n        // REJECTED FILES\n        setFileRejectionItems(\n          Indoor.map((file) => {\n            return !file.validate ? (\n              <div style={thumb} key={file.name}>\n                <div style={thumbInner}>\n                  {/* {console.log(file.validate)} */}\n\n                  <img\n                    src={URL.createObjectURL(file)}\n                    style={img}\n                    alt=\"Images\"\n                    // Revoke data uri after image is loaded\n                    onLoad={() => {\n                      URL.revokeObjectURL(file.preview);\n                    }}\n                  />\n                </div>\n              </div>\n            ) : null;\n          })\n        );\n\n        // accepted\n        setAcceptedFileItems(\n          Indoor.map((file, index) => {\n            return file.validate ? (\n              <div style={thumb} key={file.name}>\n                <div style={thumbInner}>\n                  {/* {console.log(file.validate)} */}\n\n                  <img\n                    src={URL.createObjectURL(file)}\n                    style={img}\n                    alt=\"Images\"\n                    // Revoke data uri after image is loaded\n                    onLoad={() => {\n                      URL.revokeObjectURL(file.preview);\n                    }}\n                  />\n                </div>\n              </div>\n            ) : null;\n          })\n        );\n      }\n    }, [Indoor]);\n\n    useEffect(() => {\n      // Make sure to revoke the data uris to avoid memory leaks, will run on unmount\n      return () => Indoor.forEach((file) => URL.revokeObjectURL(file.preview));\n    }, []);\n\n    return (\n      <section className=\"container dorpContainer\">\n        <div {...getRootProps({ className: \"dropzone\" })}>\n          <input {...getInputProps()} />\n          <p>{props.text}</p>\n        </div>\n        <aside>\n          <h4>Accepted files</h4>\n          <aside style={thumbsContainer}>{acceptedFileItems}</aside>\n          <h4>Rejected files</h4>\n          <aside style={thumbsContainer}>{fileRejectionItems}</aside>\n        </aside>\n      </section>\n    );\n  }\n\n  // static catalog\n\n  const polishCatalog = [\n    \"Stain Finish\",\n    \"Distressed Polish\",\n    \"Antique Touch\",\n    \"Duco Paint\",\n    \"Natural Finish\",\n    \"Oil Massge\",\n    \"Powder Coating\",\n  ];\n\n  const taxRateCatalog = [\n    {\n      value: 28,\n      label: 28,\n    },\n    {\n      value: 18,\n      label: 18,\n    },\n    {\n      value: 12,\n      label: 12,\n    },\n    {\n      value: 5,\n      label: 5,\n    },\n    {\n      value: 3,\n      label: 3,\n    },\n    {\n      value: 2,\n      label: 2,\n    },\n    {\n      value: 0,\n      label: 0,\n    },\n  ];\n  const backStyleCatalog = [\n    {\n      value: \"Lean Back\",\n      label: \"Lean Back\",\n    },\n    {\n      value: \"Straight Back\",\n      label: \"Straight Back\",\n    },\n  ];\n\n  const legCatalog = [\n    {\n      value: \"Folding Legs\",\n      label: \"Folding Legs\",\n    },\n    {\n      value: \"Knockdown Legs\",\n      label: \"Knockdown Legs\",\n    },\n  ];\n  const warehouse = [\n    {\n      value: \"Bangalore (Karnataka)\",\n      label: \"Bangalore (Karnataka)\",\n    },\n    {\n      value: \"Jodhpur (Rajasthan)\",\n      label: \"Jodhpur (Rajasthan)\",\n    },\n  ];\n\n  const weightCapCatalog = [\n    {\n      value: \"Child\",\n      label: \"Child\",\n    },\n    {\n      value: \"Light Weight\",\n      label: \"Light Weight\",\n    },\n    {\n      value: \"Adult\",\n      label: \"Adult\",\n    },\n  ];\n\n  const trollyMaterial = [\n    {\n      value: \"Teak Wood\",\n      label: \"Teak Wood\",\n    },\n    {\n      value: \"Natural Solid Wood\",\n      label: \"Natural Solid Wood\",\n    },\n    {\n      value: \"Stone\",\n      label: \"Stone\",\n    },\n    {\n      value: \"Metal\",\n      label: \"Metal\",\n    },\n    {\n      value: \"Brass\",\n      label: \"Brass\",\n    },\n    {\n      value: \"Copper\",\n      label: \"Copper\",\n    },\n    {\n      value: \"Glass\",\n      label: \"Glass\",\n    },\n    {\n      value: \"Mango Wood\",\n      label: \"Mango Wood\",\n    },\n    {\n      value: \"Pine wood\",\n      label: \"Pine wood\",\n    },\n    {\n      value: \"Acacia wood\",\n      label: \"Acacia wood\",\n    },\n    {\n      value: \"Sheesham wood\",\n      label: \"Sheesham wood\",\n    },\n    {\n      value: \"Ceramic\",\n      label: \"Ceramic\",\n    },\n    {\n      value: \"Brass Coated SS\",\n      label: \"Brass Coated SS\",\n    },\n    {\n      value: \"Iron Jali\",\n      label: \"Iron Jali\",\n    },\n    {\n      value: \"Glass Jali\",\n      label: \"Glass Jali\",\n    },\n  ];\n  const role = [\n    {\n      value: \"Marketing\",\n      label: \"Marketing\",\n    },\n\n    {\n      value: \"Sales\",\n      label: \"Sales\",\n    },\n\n    {\n      value: \"Management & Accountant\",\n      label: \"Management & Accountant\",\n    },\n\n    {\n      value: \"Admin\",\n      label: \"Admin\",\n    },\n\n    {\n      value: \"Super Admin\",\n      label: \"Super Admin\",\n    },\n  ];\n  const rangeCatalog = [\n    {\n      value: \"Traditional\",\n      label: \"Traditional\",\n    },\n\n    {\n      value: \"Distressed\",\n      label: \"Distressed\",\n    },\n\n    {\n      value: \"Crackle\",\n      label: \"Crackle\",\n    },\n\n    {\n      value: \"Painting\",\n      label: \"Painting\",\n    },\n\n    {\n      value: \"Antique\",\n      label: \"Antique\",\n    },\n  ];\n\n  const modules = [\n    \"Order\",\n    \"Product\",\n    \"Settings\",\n    \"Wishlist\",\n    \"Customer\",\n    \"Reward\",\n    \"Blog\",\n    \"Action Center\",\n    \"Inventory\",\n    \"Profile\",\n    \"Banner\",\n    \"Hardware\",\n  ];\n\n  const assemblyLevelCatalog = [\n    {\n      value: \"Easy Assembly\",\n      label: \"Easy Assembly\",\n    },\n    {\n      value: \"Carpenter Assembly\",\n      label: \"Carpenter Assembly\",\n    },\n  ];\n\n  const unitCatalog = [\n    {\n      value: \"Pcs\",\n      label: \"Pcs\",\n    },\n    {\n      value: \"Kg\",\n      label: \"Kg\",\n    },\n    {\n      value: \"Ft\",\n      label: \"Ft\",\n    },\n    {\n      value: \"Set\",\n      label: \"Set\",\n    },\n    {\n      value: \"Metre\",\n      label: \"Metre\",\n    },\n  ];\n\n  const purpose = [\n    \"Manufacturing\",\n    \"Repairing\",\n    \"Polish\",\n    \"Packing\",\n    \"Shipping\",\n    \"Others\",\n  ];\n  const level = [\n    \"Level 1\",\n    \"Level 2\",\n    \"Level 3\",\n    \"Level 4\",\n    \"Level 5\",\n    \"Level 6\",\n    \"Level 7\",\n    \"Level 8\",\n    \"Level 9\",\n    \"Level 10\",\n  ];\n\n  // redux\n  const { form, mode } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  // states\n  const [cat, setCat] = useState(\"\");\n  const [discount, setDiscount] = useState({ discount_limit: 0, MRP: 0 });\n  // const [showFabric, setShowFabric] = useState(\"No\");\n\n  //  State for stepper\n  const [activeStep, setActiveStep] = useState(0);\n\n  // states for the dynamic rendering\n  const [SKU, setSKU] = useState(\"\");\n  const [category, setCategory] = useState([]);\n  const [subCategory, setSubCategory] = useState([]);\n  const [materialCatalog, setMaterialCatalog] = useState([]);\n  // const [textileCatalog, setTextileCatalog] = useState([]);\n  // const [fabricCatalog, setFabricCatalog] = useState([]);\n  const [SKUCatalog, setSKUCatalog] = useState([]);\n  const [customer, setCustomerCatalog] = useState([]);\n  const [productSKU, setProductSKU] = useState({\n    P_SKU: [],\n    H_SKU: [],\n    supplier: [],\n    category: [],\n  });\n\n  const [catalog, setCatalog] = useState({\n    hinge: [],\n    knob: [],\n    door: [],\n    handle: [],\n    fitting: [],\n    polish: [],\n    fabric: [],\n    wheel: [],\n    ceramic_drawer: [],\n    ceramic_tiles: [],\n  });\n\n  // ref\n  const editorRef = useRef();\n\n  // pres data\n  const [changeData, setData] = useState({\n    CVW: 0,\n    ACIN: \"\",\n    primary_material: [],\n    product_articles: [],\n    hardware_articles: [],\n    category_discount: [],\n    supplier: \"\",\n    range: \"None\",\n    product_array: [],\n    variation_array: [],\n    warehouse: [],\n    savedImages: [],\n    specification_image: \"\",\n    featured_image: \"\",\n    mannequin_image: \"\",\n    shipping: \"\",\n    product_title: \"\",\n    seo_title: \"\",\n    seo_description: \"\",\n    seo_keyword: \"\",\n    product_des: \"\",\n    category: \"\",\n    sub_category: \"\",\n    length: 0,\n    breadth: 0,\n    selling_points: [],\n    height: 0,\n    priMater: \"\",\n    priMater_weight: \"\",\n    secMater: \"\",\n    secMater_weight: \"\",\n    selling_price: 0,\n    mrp: 0,\n    discount_cap: 0,\n    polish_time: 0,\n    manufacturing_time: 0,\n    polish: [],\n    wight_cap: \"\",\n    wall_hanging: \"\",\n    assembly_required: \"\",\n    assembly_leg: \"\",\n    assembly_part: 2,\n    fitting: \"None\",\n    silver: \"\",\n    weight: 0,\n    selling_point: \"\",\n    mirror: \"\",\n    joints: \"\",\n    tax_rate: 18,\n    seat_width: 0,\n    ceramic_drawer: \"None\",\n    ceramic_tiles: \"None\",\n    seat_depth: 0,\n    seat_height: 0,\n    wheel: \"None\",\n    wheel_included: \"no\",\n    trolly: \"\",\n    returnable: false,\n    returnDays: 0,\n    trolly_mater: \"\",\n    top_size_length: 0,\n    top_size_breadth: 0,\n    dial_size: 0,\n    COD: false,\n    textile: \"\",\n    paid_amount: 0,\n    total_amount: 0,\n    customer_name: \"\",\n    customer_email: \"\",\n    shipping_address: \"\",\n    searchCustomer: \"\",\n    mobile_store: true,\n    online_store: true,\n    continue_selling: true,\n    ceramic_drawer_included: false,\n    ceramic_tiles_included: false,\n    unit: \"Pcs\",\n    quantity: 1,\n    textile_type: \"\",\n    category_id: \"\",\n    sub_category_id: \"\",\n    product_description: \"\",\n    legs: \"None\",\n    fabric: \"None\",\n    assembly_level: \"Easy Assembly\",\n    mattress: \"no\",\n    mattress_length: 0,\n    mattress_breadth: 0,\n    hinge: \"None\",\n    hinge_qty: 0,\n    knob: \"None\",\n    knob_qty: 0,\n    handle: \"None\",\n    handle_qty: 0,\n    door: \"None\",\n    door_qty: 0,\n    plywood: \"no\",\n    wheel_qty: 0,\n    cradle_bed: \"no\",\n    amazon_url: \"\",\n    flipkart_url: \"\",\n    jiomart_url: \"\",\n    cradle_bed_depth: 0,\n    cradle_bed_height: 0,\n    cradle_bed_width: 0,\n    showroom_price: 0,\n    discount_limit: 0,\n    length_main: 0,\n    ceramic_drawer_qty: 0,\n    ceramic_tiles_qty: 0,\n    back_style: \"None\",\n    weight_capacity: \"None\",\n    drawer: \"None\",\n    package_breadth: 0,\n    package_height: 0,\n    package_length: 0,\n    silver_weight: 0,\n    mirror_length: 0,\n    mirror_width: 0,\n    drawer_count: 0,\n    seating_size_width: 0,\n    seating_size_depth: 0,\n    seating_size_height: 0,\n    restocking_time: 0,\n    min_quantity: 1,\n    hardware_polish: \"None\",\n    warehouse_to: \"\",\n    wood_weight: 0,\n    metal_weight: 0,\n    package_weight: 0,\n    polish_name: \"\",\n    polish_type: \"None\",\n    polish_finish: \"None\",\n    level: \"None\",\n    lock: false,\n    price: 0,\n    indoorSavedImage: [],\n    status: true,\n    web_banner_status: false,\n    mobile_banner_status: false,\n    marketing: false,\n    sequence_no: \"\",\n  });\n\n  function getLabelText(value) {\n    return `${value} Star${value !== 1 ? \"s\" : \"\"}, ${labels[value]}`;\n  }\n\n  // function for generating Merged product  ID\n\n  const getMKU = () => {\n    getLastMergeProduct()\n      .then((res) => {\n        if (res.data.length > 0) {\n          let index = parseInt(res.data[0].M.split(\"-\")[1]) + 1;\n\n          setSKU(`M-0${index}`);\n        } else {\n          setSKU(\"M-01001\");\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n      });\n  };\n  // function for generating product SKU ID\n\n  const getSKU = () => {\n    getLastProduct()\n      .then((res) => {\n        if (res.data.length > 0) {\n          // // //console.log(res.data[0].SKU)\n\n          let index = parseInt(res.data[0].SKU.split(\"-\")[1]) + 1;\n\n          setSKU(`P-0${index}`);\n        } else {\n          setSKU(\"P-01001\");\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n      });\n  };\n  // function for generating hardware  ID\n\n  const getHKU = () => {\n    getLastHardware()\n      .then((res) => {\n        if (res.data.length > 0) {\n          let index = parseInt(res.data[0].SKU.split(\"-\")[1]) + 1;\n\n          setSKU(`H-0${index}`);\n        } else {\n          setSKU(\"H-01001\");\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n      });\n  };\n  // function for generating product OID ID\n\n  const getOID = () => {\n    getLastOrder()\n      .then((res) => {\n        if (res.data.length > 0) {\n          let index = parseInt(res.data[0].OID.split(\"-\")[1]) + 1;\n\n          setSKU(`OID-0${index}`);\n        } else {\n          setSKU(\"OID-01001\");\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n      });\n  };\n  // function for generating product DID ID\n\n  const getSID = () => {\n    getLastSupplier()\n      .then((res) => {\n        if (res.data.length > 0) {\n          let index = parseInt(res.data[0].SID.split(\"-\")[1]) + 1;\n\n          setSKU(`SID-0${index}`);\n        } else {\n          setSKU(\"SID-01001\");\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n      });\n  };\n  // function for generating product DID ID\n\n  const getDID = () => {\n    getDraftID()\n      .then((res) => {\n        if (res.data.length > 0) {\n          let index = parseInt(res.data[0].DID.split(\"-\")[1]) + 1;\n\n          setSKU(`DID-0${index}`);\n        } else {\n          setSKU(\"DID-01001\");\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n      });\n  };\n\n  useMemo(() => {\n    switch (form.formType) {\n      case \"hardware\":\n        getHKU();\n        getDID();\n        getPrimaryMaterial().then((data) => {\n          if (data.data === null) return setMaterialCatalog([]);\n\n          return setMaterialCatalog(data.data);\n        });\n\n        categoryList().then((data) => {\n          if (data.data === null) return setCategory([]);\n\n          let hardware = data.data.filter((row) => {\n            return row.category_name === \"Hardware\";\n          });\n\n          setData({\n            ...changeData,\n            category_name: hardware.length > 0 ? hardware[0]._id : \"None\",\n          });\n          return setCategory(data.data);\n        });\n\n        getSubCatagories().then((data) => {\n          if (data.data === null) return setSubCategory([]);\n\n          return setSubCategory(data.data);\n        });\n\n        // console.log(category,category.filter((row) => { return row.category_name === 'Hardware' }))\n\n        break;\n      case \"update_hardware\":\n        // getHKU();\n        getDID();\n        getPrimaryMaterial().then((data) => {\n          if (data.data === null) return setMaterialCatalog([]);\n\n          return setMaterialCatalog(data.data);\n        });\n        categoryList().then((data) => {\n          if (data.data === null) return setCategory([]);\n\n          return setCategory(data.data);\n        });\n\n        getSubCatagories().then((data) => {\n          if (data.data === null) return setSubCategory([]);\n\n          return setSubCategory(data.data);\n        });\n\n        const row = form.payload.row;\n\n        console.log(row);\n\n        setData({\n          SKU: row.SKU,\n          title: row.title,\n          category_name: row.category_id,\n          category_id: row.category_id,\n          sub_category_name: row.sub_category_id,\n          sub_category_id: row.sub_category_id,\n          hardware_image: row.hardware_image,\n          savedImages: row.hardware_image,\n          featured_image: row.featured_image,\n          mannequin_image: row.mannequin_image,\n          warehouse: row.warehouse || [],\n          bangalore_stock: row.bangalore_stock,\n          discount_limit: row.discount_limit,\n          jodhpur_stock: row.jodhpur_stock,\n          manufacturing_time: row.manufacturing_time,\n          online_store: row.online_store,\n          mobile_store: row.mobile_store,\n          primary_material: row.primary_material,\n          primary_material_name: row.primary_material_name,\n          status: row.status,\n          returnDays: row.returnDays,\n          COD: row.COD,\n          returnable: row.returnable,\n          quantity: row.quantity,\n          package_length: row.package_length,\n          package_height: row.package_height,\n          package_breadth: row.package_breadth,\n          unit: row.unit,\n          selling_price: row.selling_price,\n          showroom_price: row.showroom_price,\n          polish_time: row.polish_time,\n          restocking_time: row.restocking_time,\n          selling_points: row.selling_points || [],\n          seo_title: row.seo_title,\n          seo_description: row.seo_description,\n          seo_keyword: row.seo_keyword,\n          hardware_polish: row.hardware_polish,\n          min_quantity: row.min_quantity,\n          continue_selling: row.continue_selling,\n          tax_rate: row.tax_rate,\n          weight: row.weight,\n          package_weight: row.package_weight,\n        });\n        break;\n      case \"product\":\n        // getSKU();\n        getDID();\n\n        getHardwareDropdown().then((data) => {\n          if (data.data !== null)\n            return setCatalog((old) => ({ ...old, ...data.data }));\n        });\n\n        categoryList().then((data) => {\n          if (data.data === null) return setCategory([]);\n\n          return setCategory(data.data);\n        });\n\n        getSubCatagories().then((data) => {\n          if (data.data === null) return setSubCategory([]);\n\n          return setSubCategory(data.data);\n        });\n\n        getPrimaryMaterial().then((data) => {\n          if (data.data === null) return setMaterialCatalog([]);\n\n          return setMaterialCatalog(data.data);\n        });\n\n        console.log(form);\n\n        if (form.payload) {\n          setData((old) => ({ ...old, ...form.payload }));\n        }\n\n        break;\n      case \"variation\":\n        getSKU();\n        getHardwareDropdown().then((data) => {\n          if (data.data !== null)\n            return setCatalog((old) => ({ ...old, ...data.data }));\n        });\n\n        categoryList().then((data) => {\n          if (data.data === null) return setCategory([]);\n\n          return setCategory(data.data);\n        });\n\n        getSubCatagories().then((data) => {\n          if (data.data === null) return setSubCategory([]);\n\n          return setSubCategory(data.data);\n        });\n\n        getPrimaryMaterial().then((data) => {\n          if (data.data === null) return setMaterialCatalog([]);\n\n          return setMaterialCatalog(data.data);\n        });\n\n        setData({\n          _id: form.payload.value._id || form.payload.row.action._id,\n          SKU: form.payload.row.action.SKU,\n          ACIN: form.payload.row.action.ACIN,\n          CVW: form.payload.row.action.CVW,\n          product_title: form.payload.row.action.product_title,\n          category_name: form.payload.row.action.category_id,\n          category_id: form.payload.row.action.category_id,\n          sub_category_name: form.payload.row.action.sub_category_id,\n          sub_category_id: form.payload.row.action.sub_category_id,\n          product_description: form.payload.row.action.product_description,\n          seo_title: form.payload.row.action.seo_title,\n          seo_description: form.payload.row.action.seo_description,\n          seo_keyword: form.payload.row.action.seo_keyword,\n          product_image: form.payload.row.action.product_image,\n          savedImages: form.payload.row.action.product_image,\n          featured_image: form.payload.row.action.featured_image,\n          mannequin_image: form.payload.row.action.mannequin_image,\n          specification_image: form.payload.row.action.specification_image,\n          primary_material: form.payload.row.action.primary_material,\n          primary_material_name: form.payload.row.action.primary_material_name,\n          warehouse: form.payload.row.action.warehouse,\n          warehouse_name: form.payload.row.action.warehouse_name,\n          length_main: form.payload.row.action.length_main,\n          breadth: form.payload.row.action.breadth,\n          height: form.payload.row.action.height,\n          bangalore_stock: form.payload.row.action.bangalore_stock,\n          jodhpur_stock: form.payload.row.action.jodhpur_stock,\n          weight: form.payload.row.action.weight,\n          polish: form.payload.row.action.polish,\n          polish_name: form.payload.row.action.polish_name,\n          hinge: form.payload.row.action.hinge,\n          hinge_qty: form.payload.row.action.hinge_qty,\n          hinge_name: form.payload.row.action.hinge_name,\n          knob: form.payload.row.action.knob,\n          knob_qty: form.payload.row.action.knob_qty,\n          knob_name: form.payload.row.action.knob_name,\n          handle: form.payload.row.action.handle,\n          handle_qty: form.payload.row.action.handle_qty,\n          handle_name: form.payload.row.action.handle_name,\n          door: form.payload.row.action.door,\n          door_qty: form.payload.row.action.door_qty,\n          door_name: form.payload.row.action.door_name,\n          fitting: form.payload.row.action.fitting,\n          fitting_name: form.payload.row.action.fitting_name,\n          selling_points: form.payload.row.action.selling_points,\n          dial_size: form.payload.row.action.dial_size,\n          seating_size_width: form.payload.row.action.seating_size_width,\n          seating_size_depth: form.payload.row.action.seating_size_depth,\n          seating_size_height: form.payload.row.action.seating_size_height,\n          weight_capacity: form.payload.row.action.weight_capacity,\n          fabric: form.payload.row.action.fabric,\n          fabric_qty: form.payload.row.action.fabric_qty,\n          fabric_name: form.payload.row.action.fabric_name,\n          wall_hanging: form.payload.row.action.wall_hanging,\n          assembly_required: form.payload.row.action.assembly_required,\n          assembly_part: form.payload.row.action.assembly_part,\n          legs: form.payload.row.action.legs,\n          mirror: form.payload.row.action.mirror,\n          mirror_length: form.payload.row.action.mirror_length,\n          mirror_width: form.payload.row.action.mirror_width,\n          silver: form.payload.row.action.silver,\n          silver_weight: form.payload.row.action.silver_weight,\n          joints: form.payload.row.action.joints,\n          upholstery: form.payload.row.action.upholstery,\n          trolley: form.payload.row.action.trolley,\n          trolley_material: form.payload.row.action.trolley_material,\n          rotating_seats: form.payload.row.action.rotating_seats,\n          eatable_oil_polish: form.payload.row.action.eatable_oil_polish,\n          no_chemical: form.payload.row.action.no_chemical,\n          straight_back: form.payload.row.action.straight_back,\n          lean_back: form.payload.row.action.lean_back,\n          weaving: form.payload.row.action.weaving,\n          knife: form.payload.row.action.knife,\n          not_suitable_for_Micro_Dish:\n            form.payload.row.action.not_suitable_for_Micro_Dish,\n          tilt_top: form.payload.row.action.tilt_top,\n          inside_compartments: form.payload.row.action.inside_compartments,\n          stackable: form.payload.row.action.stackable,\n          MRP: form.payload.row.action.MRP,\n          tax_rate: form.payload.row.action.tax_rate,\n          selling_price: form.payload.row.action.selling_price,\n          showroom_price: form.payload.row.action.showroom_price,\n          discount_limit: form.payload.row.action.discount_limit,\n          polish_time: form.payload.row.action.polish_time,\n          manufacturing_time: form.payload.row.action.manufacturing_time,\n          status: form.payload.row.action.status,\n          returnDays: form.payload.row.action.returnDays,\n          COD: form.payload.row.action.COD,\n          returnable: form.payload.row.action.returnable,\n          drawer: form.payload.row.action.drawer,\n          drawer_count: form.payload.row.action.drawer_count,\n          mobile_store: form.payload.row.action.mobile_store,\n          online_store: form.payload.row.action.online_store,\n          range: form.payload.row.action.range,\n          back_style: form.payload.row.action.back_style,\n          package_length: form.payload.row.action.package_length,\n          package_height: form.payload.row.action.package_height,\n          package_breadth: form.payload.row.action.package_breadth,\n          quantity: form.payload.row.action.quantity,\n          unit: form.payload.row.action.unit,\n          variation_array: form.payload.row.action.variation_array,\n          assembly_level: form.payload.row.action.assembly_level,\n          continue_selling: form.payload.row.action.continue_selling,\n          wheel: form.payload.row.action.wheel,\n          wheel_included: form.payload.row.action.wheel_included,\n          wheel_qty: form.payload.row.action.wheel_qty,\n          wheel_name: form.payload.row.action.wheel_name,\n          ceramic_tiles: form.payload.row.action.ceramic_tiles,\n          ceramic_tiles_qty: form.payload.row.action.ceramic_tiles_qty,\n          ceramic_tiles_included:\n            form.payload.row.action.ceramic_tiles_included,\n          ceramic_tiles_name: form.payload.row.action.ceramic_tiles_name,\n          ceramic_drawers_qty: form.payload.row.action.ceramic_drawers_qty,\n          ceramic_drawers: form.payload.row.action.ceramic_drawers,\n          ceramic_drawers_included:\n            form.payload.row.action.ceramic_drawers_included,\n          ceramic_drawers_name: form.payload.row.action.ceramic_drawers_name,\n          mattress: form.payload.row.action.mattress,\n          mattress_length: form.payload.row.action.mattress_length,\n          mattress_breadth: form.payload.row.action.mattress_breadth,\n          plywood: form.payload.row.action.plywood,\n          top_size_breadth: form.payload.row.action.top_size_breadth,\n          top_size_length: form.payload.row.action.top_size_length,\n          amazon_url: form.payload.row.action.amazon_url,\n          flipkart_url: form.payload.row.action.flipkart_url,\n          jiomart_url: form.payload.row.action.jiomart_url,\n          wood_weight: form.payload.row.action.wood_weight,\n          package_weight: form.payload.row.action.package_weight,\n          metal_weight: form.payload.row.action.metal_weight,\n        });\n\n        setCat(form.payload.row.action.category_id);\n        break;\n      case \"add_order\":\n        getOID();\n        getPresentSKUs().then((data) => {\n          if (data.data === null) return setSKUCatalog([]);\n\n          return setSKUCatalog(data.data);\n        });\n\n        customerCatalog().then((data) => {\n          //console.log(data);\n          if (data.data === null) return setCustomerCatalog([]);\n\n          return setCustomerCatalog(data.data);\n        });\n\n        break;\n      case \"category\":\n        getDID();\n        break;\n      case \"update_category\":\n        getDID();\n        categoryList().then((data) => {\n          if (data.data === null) return setCategory([]);\n\n          return setCategory(data.data);\n        });\n        setData({\n          _id: form.payload.row.action,\n          category: form.payload.row.category_name,\n          seo_title: form.payload.row.seo_title,\n          seo_description: form.payload.row.seo_description,\n          seo_keyword: form.payload.row.seo_keyword,\n          product_description: form.payload.row.product_description,\n        });\n        break;\n      case \"update_PrimaryMaterial\":\n        getDID();\n        console.log(form.payload.row);\n        setData({\n          primaryMaterial_name: form.payload.row.primaryMaterial_name,\n          primaryMaterial_description:\n            form.payload.row.primaryMaterial_description,\n          customizations: form.payload.row.customizations,\n        });\n        break;\n      case \"subcategory\":\n        getDID();\n        categoryList().then((data) => {\n          if (data.data === null) return setCategory([]);\n          return setCategory(data.data);\n        });\n        // setCat(form.payload.row.category_id);\n        break;\n      case \"update_Subcategory\":\n        getDID();\n        categoryList().then((data) => {\n          if (data.data === null) return setCategory([]);\n          return setCategory(data.data);\n        });\n        setCat(form.payload.row.category_id);\n        setData({\n          _id: form.payload.row.action,\n          sub_category_name: form.payload.row.sub_category_name,\n          seo_title: form.payload.row.seo_title,\n          seo_description: form.payload.row.seo_description,\n          seo_keyword: form.payload.row.seo_keyword,\n          product_description: form.payload.row.product_description,\n        });\n        break;\n      case \"update_blog\":\n        getDID();\n        setData({\n          title: form.payload.value.title,\n          card_image: form.payload.value.card_image,\n          seo_title: form.payload.value.seo_title,\n          seo_description: form.payload.value.seo_description,\n          card_description: form.payload.value.card_description,\n          description: form.payload.value.description,\n        });\n        break;\n      case \"update_product\":\n        getDID();\n\n        getHardwareDropdown().then((data) => {\n          if (data.data !== null)\n            return setCatalog((old) => ({ ...old, ...data.data }));\n        });\n\n        categoryList().then((data) => {\n          if (data.data === null) return setCategory([]);\n\n          return setCategory(data.data);\n        });\n\n        getSubCatagories().then((data) => {\n          if (data.data === null) return setSubCategory([]);\n\n          return setSubCategory(data.data);\n        });\n\n        getPrimaryMaterial().then((data) => {\n          if (data.data === null) return setMaterialCatalog([]);\n\n          return setMaterialCatalog(data.data);\n        });\n\n        setData({\n          _id: form.payload.value._id || form.payload.row.action._id,\n          SKU: form.payload.row.action.SKU,\n          CVW: form.payload.row.action.CVW,\n          parent_SKU: form.payload.row.parent_SKU,\n          variations: form.payload.row.variations,\n          variant_label: form.payload.row.variant_label,\n          product_title: form.payload.row.action.product_title,\n          category_name: form.payload.row.action.category_id,\n          category_id: form.payload.row.action.category_id,\n          sub_category_name: form.payload.row.action.sub_category_id,\n          sub_category_id: form.payload.row.action.sub_category_id,\n          product_description: form.payload.row.action.product_description,\n          seo_title: form.payload.row.action.seo_title,\n          seo_description: form.payload.row.action.seo_description,\n          seo_keyword: form.payload.row.action.seo_keyword,\n          product_image: form.payload.row.action.product_image,\n          savedImages: form.payload.row.action.product_image,\n          featured_image: form.payload.row.action.featured_image,\n          mannequin_image: form.payload.row.action.mannequin_image,\n          specification_image: form.payload.row.action.specification_image,\n          primary_material: form.payload.row.action.primary_material,\n          primary_material_name: form.payload.row.action.primary_material_name,\n          warehouse: form.payload.row.action.warehouse,\n          warehouse_name: form.payload.row.action.warehouse_name,\n          length_main: form.payload.row.action.length_main,\n          breadth: form.payload.row.action.breadth,\n          height: form.payload.row.action.height,\n          bangalore_stock: form.payload.row.action.bangalore_stock,\n          jodhpur_stock: form.payload.row.action.jodhpur_stock,\n          weight: form.payload.row.action.weight,\n          polish: form.payload.row.action.polish,\n          polish_name: form.payload.row.action.polish_name,\n          hinge: form.payload.row.action.hinge,\n          hinge_qty: form.payload.row.action.hinge_qty,\n          hinge_name: form.payload.row.action.hinge_name,\n          knob: form.payload.row.action.knob,\n          knob_qty: form.payload.row.action.knob_qty,\n          knob_name: form.payload.row.action.knob_name,\n          handle: form.payload.row.action.handle,\n          handle_qty: form.payload.row.action.handle_qty,\n          handle_name: form.payload.row.action.handle_name,\n          door: form.payload.row.action.door,\n          door_qty: form.payload.row.action.door_qty,\n          door_name: form.payload.row.action.door_name,\n          fitting: form.payload.row.action.fitting,\n          fitting_name: form.payload.row.action.fitting_name,\n          selling_points: form.payload.row.action.selling_points,\n          dial_size: form.payload.row.action.dial_size,\n          seating_size_width: form.payload.row.action.seating_size_width,\n          seating_size_depth: form.payload.row.action.seating_size_depth,\n          seating_size_height: form.payload.row.action.seating_size_height,\n          weight_capacity: form.payload.row.action.weight_capacity,\n          fabric: form.payload.row.action.fabric,\n          fabric_qty: form.payload.row.action.fabric_qty,\n          fabric_name: form.payload.row.action.fabric_name,\n          wall_hanging: form.payload.row.action.wall_hanging,\n          assembly_required: form.payload.row.action.assembly_required,\n          assembly_part: form.payload.row.action.assembly_part,\n          legs: form.payload.row.action.legs,\n          mirror: form.payload.row.action.mirror,\n          mirror_length: form.payload.row.action.mirror_length,\n          mirror_width: form.payload.row.action.mirror_width,\n          silver: form.payload.row.action.silver,\n          silver_weight: form.payload.row.action.silver_weight,\n          joints: form.payload.row.action.joints,\n          upholstery: form.payload.row.action.upholstery,\n          trolley: form.payload.row.action.trolley,\n          trolley_material: form.payload.row.action.trolley_material,\n          rotating_seats: form.payload.row.action.rotating_seats,\n          eatable_oil_polish: form.payload.row.action.eatable_oil_polish,\n          no_chemical: form.payload.row.action.no_chemical,\n          straight_back: form.payload.row.action.straight_back,\n          lean_back: form.payload.row.action.lean_back,\n          weaving: form.payload.row.action.weaving,\n          knife: form.payload.row.action.knife,\n          not_suitable_for_Micro_Dish:\n            form.payload.row.action.not_suitable_for_Micro_Dish,\n          tilt_top: form.payload.row.action.tilt_top,\n          inside_compartments: form.payload.row.action.inside_compartments,\n          stackable: form.payload.row.action.stackable,\n          MRP: form.payload.row.action.MRP,\n          tax_rate: form.payload.row.action.tax_rate,\n          selling_price: form.payload.row.action.selling_price,\n          showroom_price: form.payload.row.action.showroom_price,\n          discount_limit: form.payload.row.action.discount_limit,\n          polish_time: form.payload.row.action.polish_time,\n          manufacturing_time: form.payload.row.action.manufacturing_time,\n          status: form.payload.row.action.status,\n          returnDays: form.payload.row.action.returnDays,\n          COD: form.payload.row.action.COD,\n          returnable: form.payload.row.action.returnable,\n          drawer: form.payload.row.action.drawer,\n          drawer_count: form.payload.row.action.drawer_count,\n          mobile_store: form.payload.row.action.mobile_store,\n          online_store: form.payload.row.action.online_store,\n          range: form.payload.row.action.range,\n          back_style: form.payload.row.action.back_style,\n          package_length: form.payload.row.action.package_length,\n          package_height: form.payload.row.action.package_height,\n          package_breadth: form.payload.row.action.package_breadth,\n          quantity: form.payload.row.action.quantity,\n          unit: form.payload.row.action.unit,\n          variation_array: form.payload.row.action.variation_array,\n          assembly_level: form.payload.row.action.assembly_level,\n          continue_selling: form.payload.row.action.continue_selling,\n          wheel: form.payload.row.action.wheel,\n          wheel_included: form.payload.row.action.wheel_included,\n          wheel_qty: form.payload.row.action.wheel_qty,\n          wheel_name: form.payload.row.action.wheel_name,\n          ceramic_tiles: form.payload.row.action.ceramic_tiles,\n          ceramic_tiles_qty: form.payload.row.action.ceramic_tiles_qty,\n          ceramic_tiles_included:\n            form.payload.row.action.ceramic_tiles_included,\n          ceramic_tiles_name: form.payload.row.action.ceramic_tiles_name,\n          ceramic_drawers_qty: form.payload.row.action.ceramic_drawers_qty,\n          ceramic_drawers: form.payload.row.action.ceramic_drawers,\n          ceramic_drawers_included:\n            form.payload.row.action.ceramic_drawers_included,\n          ceramic_drawers_name: form.payload.row.action.ceramic_drawers_name,\n          mattress: form.payload.row.action.mattress,\n          mattress_length: form.payload.row.action.mattress_length,\n          mattress_breadth: form.payload.row.action.mattress_breadth,\n          plywood: form.payload.row.action.plywood,\n          top_size_breadth: form.payload.row.action.top_size_breadth,\n          top_size_length: form.payload.row.action.top_size_length,\n          amazon_url: form.payload.row.action.amazon_url,\n          flipkart_url: form.payload.row.action.flipkart_url,\n          jiomart_url: form.payload.row.action.jiomart_url,\n          wood_weight: form.payload.row.action.wood_weight,\n          package_weight: form.payload.row.action.package_weight,\n          metal_weight: form.payload.row.action.metal_weight,\n        });\n\n        setCat(form.payload.row.action.category_id);\n\n        break;\n      case \"update_customer\":\n        //console.log(form.payload);\n        setData({\n          CID: form.payload.row.CID,\n          register_time: form.payload.row.register_time,\n          username: form.payload.row.username,\n          mobile: form.payload.row.mobile,\n          email: form.payload.row.email,\n          password: form.payload.row.password,\n          city: form.payload.row.city,\n          state: form.payload.row.state,\n          shipping: form.payload.row.shipping,\n        });\n        break;\n      case \"merge_product\":\n        getMKU();\n\n        getHardwareDropdown().then((data) => {\n          if (data.data !== null)\n            return setCatalog((old) => ({ ...old, ...data.data }));\n        });\n\n        categoryList().then((data) => {\n          if (data.data === null) return setCategory([]);\n\n          return setCategory(data.data);\n        });\n\n        getSubCatagories().then((data) => {\n          if (data.data === null) return setSubCategory([]);\n\n          return setSubCategory(data.data);\n        });\n\n        getPrimaryMaterial().then((data) => {\n          if (data.data === null) return setMaterialCatalog([]);\n\n          return setMaterialCatalog(data.data);\n        });\n\n        setData({\n          ...changeData,\n        });\n\n        break;\n      case \"update_merge\":\n        categoryList().then((data) => {\n          if (data.data === null) return setCategory([]);\n          return setCategory(data.data);\n        });\n\n        getSubCatagories().then((data) => {\n          if (data.data === null) return setSubCategory([]);\n          return setSubCategory(data.data);\n        });\n\n        console.log(form.payload.row.product_articles);\n\n        // for product qty\n        form.payload.row.product_articles.length > 0 &&\n          form.payload.row.product_articles.map((item) => {\n            setData((old) => ({\n              ...old,\n              [item.SKU]: item.qty,\n            }));\n          });\n\n        setData((old) => ({\n          ...old,\n          M: form.payload.row.M,\n          product_articles:\n            form.payload.row.product_articles.map((item) => item.SKU) || [],\n          product_title: form.payload.row.product_title,\n          category_name: form.payload.row.category_id,\n          category_id: form.payload.row.category_id,\n          sub_category_name: form.payload.row.sub_category_id,\n          sub_category_id: form.payload.row.sub_category_id,\n          warehouse: form.payload.row.warehouse,\n          warehouse_name: form.payload.row.warehouse_name,\n          bangalore_stock: form.payload.row.bangalore_stock,\n          jodhpur_stock: form.payload.row.jodhpur_stock,\n          product_description: form.payload.row.product_description,\n          product_image: form.payload.row.product_image,\n          savedImages: form.payload.row.product_image,\n          featured_image: form.payload.row.featured_image,\n          mannequin_image: form.payload.row.mannequin_image,\n          specification_image: form.payload.row.specification_image,\n          selling_points: form.payload.row.selling_points,\n          selling_price: form.payload.row.selling_price,\n          showroom_price: form.payload.row.showroom_price,\n          discount_limit: form.payload.row.discount_limit,\n          mobile_store: form.payload.row.mobile_store,\n          online_store: form.payload.row.online_store,\n          continue_selling: form.payload.row.continue_selling,\n          COD: form.payload.row.COD,\n          returnDays: form.payload.row.returnDays,\n          returnable: form.payload.row.returnable,\n          polish_time: form.payload.row.polish_time,\n          manufacturing_time: form.payload.row.manufacturing_time,\n          package_length: form.payload.row.package_length,\n          package_height: form.payload.row.package_height,\n          package_breadth: form.payload.row.package_breadth,\n          seo_title: form.payload.row.seo_title,\n          seo_description: form.payload.row.seo_description,\n          seo_keyword: form.payload.row.seo_keyword,\n        }));\n\n        break;\n      case \"update_Stock\":\n        setData({\n          ...changeData,\n          _id: form.payload.row._id,\n          product_id: form.payload.row.product_id,\n          stock: form.payload.row.stock,\n          warehouse: form.payload.row.warehouse,\n        });\n        break;\n      case \"update_supplier\":\n        setData({\n          ...changeData,\n          _id: form.payload.row._id,\n          supplier_name: form.payload.row.supplier_name,\n          mobile: form.payload.row.mobile,\n          gst_no: form.payload.row.gst_no,\n          alt_mobile: form.payload.row.alt_mobile,\n          specialization: form.payload.row.specialization,\n          SID: form.payload.row.SID,\n          address: form.payload.row.address,\n        });\n        break;\n      case \"add_supplier\":\n        getSID();\n        break;\n      case \"update_polish\":\n        // console.log(form.payload.row)\n        getDID();\n        setData({\n          ...changeData,\n          _id: form.payload.row.action._id,\n          polish_name: form.payload.row.action.polish_name,\n          polish_type: form.payload.row.action.polish_type,\n          level: form.payload.row.action.level,\n          polish_finish: form.payload.row.action.polish_finish,\n          outDoor_image: form.payload.row.action.outDoor_image,\n          savedImages: form.payload.row.action.outDoor_image,\n          inDoor_image: form.payload.row.action.inDoor_image,\n          indoorSavedImage: form.payload.row.action.inDoor_image,\n          lock: form.payload.row.action.lock,\n          price: form.payload.row.action.price,\n        });\n        break;\n      case \"primaryMaterial\":\n        getDID();\n        break;\n      case \"addPolish\":\n        getDID();\n        break;\n      case \"addBlog\":\n        getDID();\n        break;\n      case \"update_review\":\n        console.log(form.payload);\n        setData((old) => ({\n          ...old,\n          _id: form.payload.formattedValue._id,\n          product_id: form.payload.row.product_id,\n          rating: parseInt(form.payload.row.rating),\n          review: form.payload.row.review,\n          review_title: form.payload.row.review_title,\n          yourTube_url: form.payload.row.yourTube_url,\n          action: form.payload.row.action,\n        }));\n        break;\n      case \"add_banner\":\n        getDID();\n        setSequenceFunc();\n        break;\n      case \"update_banner\":\n        setSequenceFunc();\n        getDID();\n        console.log(form.payload);\n        setData({\n          uuid: form.payload.value.uuid,\n          web_banner: form.payload.value.web_banner,\n          web_url: form.payload.value.web_url,\n          sequence_no: form.payload.value.sequence_no,\n          old_sequence_no: form.payload.value.sequence_no,\n          mobile_banner: form.payload.value.mobile_banner,\n          mobile_url: form.payload.value.mobile_url,\n          banner_title: form.payload.value.banner_title,\n          web_banner_status: form.payload.value.web_banner_status,\n          mobile_banner_status: form.payload.value.mobile_banner_status,\n        });\n        break;\n      case \"update_user\":\n        console.log(form.payload);\n        setData((old) => ({\n          ...old,\n          _id: form.payload.formattedValue._id,\n          user_name: form.payload.formattedValue.user_name,\n          email: form.payload.formattedValue.email,\n          mobile: form.payload.formattedValue.mobile,\n          role: form.payload.formattedValue.role,\n          access:\n            form.payload.row.access[0] !== \"No Permissions Alloted\"\n              ? form.payload.row.access\n              : [],\n          action: form.payload.row.action,\n        }));\n        break;\n      default:\n    }\n  }, [form.formType, form.state]);\n\n  async function setSequenceFunc() {\n    const data = await getSequence();\n    console.log(data);\n    if (data.status === 200) {\n      return setSequence([...data.data]);\n    }\n  }\n\n  // stepper button\n  const handleNextStep = () => {\n    setActiveStep(activeStep + 1);\n  };\n\n  // stepper button\n  const handleBackStep = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  const handleDiscount = (e) => {\n    if (e.target.name === \"discount_limit\") {\n      if (e.target.value > 25) e.target.value = 25;\n    }\n    setDiscount({\n      ...discount,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // for update\n  const handleChangeData = (e) => {\n    switch (form.formType) {\n      case \"update_category\":\n        setData({\n          ...changeData,\n          category: e.target.value,\n        });\n        break;\n      case \"update_PrimaryMaterial\":\n        setData({\n          ...changeData,\n          [e.target.name]: e.target.value,\n        });\n        break;\n      case \"update_polish\":\n        setData({\n          ...changeData,\n          polish: e.target.value,\n        });\n        break;\n      case \"update_knob\":\n        setData({\n          ...changeData,\n          knob: e.target.value,\n        });\n        break;\n      case \"update_fitting\":\n        setData({\n          ...changeData,\n          fitting: e.target.value,\n        });\n        break;\n      case \"update_hinge\":\n        setData({\n          ...changeData,\n          hinge: e.target.value,\n        });\n        break;\n      case \"update_supplier\":\n        setData({\n          ...changeData,\n          [e.target.name]: e.target.value,\n        });\n        break;\n      case \"update_handle\":\n        setData({\n          ...changeData,\n          handle: e.target.value,\n        });\n        break;\n      case \"update_secondaryMaterial\":\n        setData({\n          ...changeData,\n          secMater: e.target.value,\n        });\n        break;\n      case \"update_product\":\n        setData({\n          ...changeData,\n          [e.target.name]: e.target.value,\n        });\n        break;\n      case \"update_blog\":\n        setData({\n          ...changeData,\n          [e.target.name]: e.target.value,\n        });\n        break;\n      case \"update_fabric\":\n        setData({\n          ...changeData,\n          [e.target.name]: e.target.value,\n        });\n        break;\n      case \"update_textile\":\n        setData({\n          ...changeData,\n          [e.target.name]: e.target.value,\n        });\n        break;\n      case \"inward\":\n        setData({\n          ...changeData,\n          [e.target.name]: e.target.value,\n        });\n        break;\n\n      default:\n      // //console.log(\"\");\n    }\n  };\n\n  const feature = [\n    \"web_banner_status\",\n    \"mobile_banner_status\",\n    \"rotating_seats\",\n    \"eatable_oil_polish\",\n    \"no_chemical\",\n    \"lean_back\",\n    \"straight_back\",\n    \"weaving\",\n    \"not_suitable_for_Micro_Dish\",\n    \"tilt_top\",\n    \"inside_compartments\",\n    \"stackable\",\n    \"knife\",\n    \"wall_hanging\",\n    \"COD\",\n    \"returnable\",\n    \"mobile_store\",\n    \"online_store\",\n    \"continue_selling\",\n    \"ceramic_drawer_included\",\n    \"ceramic_tiles_included\",\n    \"status\",\n    \"lock\",\n    \"customizations\",\n    \"marketing\",\n  ];\n\n  //  for product felids\n  const handleProductFields = (e) => {\n    if (feature.includes(e.target.name)) {\n      setData({\n        ...changeData,\n        [e.target.name]: e.target.checked,\n      });\n    } else {\n      setData({\n        ...changeData,\n        [e.target.name]: e.target.value,\n      });\n    }\n    // //console.log(changeData);\n  };\n\n  const handleChange = (event) => {\n    // //console.log(event.target.name);\n    setCat(event.target.value);\n  };\n\n  const handleClose = () => {\n    resetAll();\n    dispatch(setForm({ state: false, formType: null, payload: null }));\n  };\n\n  // function for handling category\n  const handleCategory = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", \"Not Assigned \" + SKU);\n    FD.append(\"type\", \"Category\");\n    FD.append(\"operation\", \"insertCategory\");\n\n    FD.append(\"category_image\", Image[0]);\n    FD.append(\"category_name\", e.target.category_name.value);\n    FD.append(\"seo_title\", changeData.seo_title);\n    FD.append(\"seo_description\", changeData.seo_description);\n    FD.append(\"seo_keyword\", changeData.seo_keyword);\n    FD.append(\"product_description\", changeData.product_description);\n    FD.append(\"category_status\", e.target.category_status.checked);\n\n    // // //console.log(acceptedFiles[0].name, e.target.category_name.value)\n\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          // form.setRow([\n          //   ...form.row,\n          //   {\n          //     id: form.row.length + 1,\n          //     category_name: data.data.response.category_name,\n          //     category_status: data.data.response.category_status,\n          //     category_image: data.data.response.category_image,\n          //     seo_title: data.data.response.seo_title,\n          //     seo_description: data.data.response.seo_description,\n          //     seo_keyword: data.data.response.seo_keyword,\n          //     product_description: data.data.response.product_description,\n          //     action: data.data.response,\n          //   },\n          // ]);\n          // form.setCheck((old) => [...old, data.data.response.category_status]);\n          setImages([]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  // function for handling update category\n  const handleUpdateCategory = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", changeData._id);\n    FD.append(\"type\", \"Category\");\n    FD.append(\"operation\", \"updateCategory\");\n\n    FD.append(\"_id\", changeData._id);\n\n    Image[0] !== undefined && FD.append(\"category_image\", Image[0]);\n    // console.log(Image[0])\n\n    FD.append(\"seo_title\", changeData.seo_title);\n    FD.append(\"seo_description\", changeData.seo_description);\n    FD.append(\"seo_keyword\", changeData.seo_keyword);\n    FD.append(\"product_description\", changeData.product_description);\n\n    e.target.category_name.value !== undefined\n      ? FD.append(\"category_name\", e.target.category_name.value)\n      : console.log();\n\n    const res = addDraft(FD);\n    res\n      .then((data) => {\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          // form.setRow(\n          //   form.row.map((set) => {\n          //     if (set.action === form.payload.row.action) {\n          //       set.category_name = e.target.category_name.value;\n          //       Image[0] !== undefined\n          //         ? (set.category_image = `https://admin.woodshala.in/upload/${Image[0].path}`)\n          //         : console.log();\n          //       set.seo_title = changeData.seo_title;\n          //       set.seo_description = changeData.seo_description;\n          //       set.seo_keyword = changeData.seo_keyword;\n          //       set.product_description = changeData.product_description;\n          //     }\n          //     return set;\n          //   })\n          // );\n          setImages([]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  // function for handling Customer\n  const handleCustomer = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"profile_image\", Image[0]);\n\n    FD.append(\"username\", e.target.username.value);\n    FD.append(\"mobile\", e.target.mobile.value);\n    FD.append(\"email\", e.target.email.value);\n    FD.append(\"password\", e.target.password.value);\n    FD.append(\"shipping\", JSON.stringify(address));\n    FD.append(\"marketing\", changeData.marketing);\n\n    const res = addCustomer(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          form.setRow([\n            ...form.row,\n            {\n              id: form.row.length + 1,\n              CID: data.data.response.CID,\n              register_time: data.data.response.register_time,\n              profile_image: data.data.response.profile_image,\n              username: data.data.response.username,\n              mobile: data.data.response.mobile,\n              email: data.data.response.email,\n              password: data.data.response.password,\n              shipping: data.data.response.shipping,\n              action: data.data.response,\n            },\n          ]);\n          setAddress([]);\n          setImages([]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n  // function for handling Customer\n  const handleUpdateCustomer = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    Image[0] !== undefined && FD.append(\"profile_image\", Image[0]);\n\n    FD.append(\"CID\", changeData.CID);\n    FD.append(\"username\", changeData.username);\n    FD.append(\"mobile\", changeData.mobile);\n    FD.append(\"email\", changeData.email);\n    FD.append(\"password\", changeData.password);\n    FD.append(\"city\", changeData.city);\n    // FD.append(\"pincode\", changeData.pincode);\n    FD.append(\"state\", changeData.state);\n    // FD.append(\"landmark\", changeData.landmark);\n    FD.append(\"shipping\", changeData.shipping);\n\n    const res = updateCustomer(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          form.setRow(\n            form.row.map((set) => {\n              if (set.action === form.payload.row.action) {\n                set.CID = changeData.CID;\n                set.register_time = changeData.register_time;\n                set.profile_image =\n                  Image[0] !== undefined\n                    ? `${imageLink}${Image[0].path}`\n                    : console.log();\n                set.username = changeData.username;\n                set.mobile = changeData.mobile;\n                set.email = changeData.email;\n                set.password = changeData.password;\n                set.city = changeData.city;\n                set.state = changeData.state;\n                set.shipping = changeData.shipping;\n              }\n              return set;\n            })\n          );\n          setImages([]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  // function fo resting the values\n\n  const resetAll = () => {\n    setProductSKU({\n      P_SKU: [],\n      H_SKU: [],\n      supplier: [],\n      category: [],\n    });\n    setWebBanner([]);\n    setMobileBanner([]);\n    setImages([]);\n    setFeatured([]);\n    setFiles([]);\n    setActiveStep(0);\n    setData({\n      CVW: 0,\n      ACIN: \"\",\n      web_banner_status: false,\n      mobile_banner_status: false,\n      warehouse_to: \"\",\n      sequence_no: \"\",\n      marketing: false,\n      primary_material: [],\n      product_articles: [],\n      hardware_articles: [],\n      category_discount: [],\n      supplier: \"\",\n      range: \"None\",\n      product_array: [],\n      variation_array: [],\n      warehouse: [],\n      savedImages: [],\n      shipping: \"\",\n      product_title: \"\",\n      amazon_url: \"\",\n      status: true,\n      flipkart_url: \"\",\n      jiomart_url: \"\",\n      seo_title: \"\",\n      seo_description: \"\",\n      specification_image: \"\",\n      featured_image: \"\",\n      mannequin_image: \"\",\n      seo_keyword: \"\",\n      product_des: \"\",\n      category: \"\",\n      sub_category: \"\",\n      length: 0,\n      breadth: 0,\n      selling_points: [],\n      height: 0,\n      priMater: \"\",\n      priMater_weight: \"\",\n      secMater: \"\",\n      secMater_weight: \"\",\n      selling_price: 0,\n      mrp: 0,\n      discount_cap: 0,\n      polish_time: 0,\n      manufacturing_time: 0,\n      polish: [],\n      wight_cap: \"\",\n      wall_hanging: \"\",\n      assembly_required: \"\",\n      assembly_leg: \"\",\n      assembly_part: 2,\n      fitting: \"None\",\n      silver: \"\",\n      selling_point: \"\",\n      mirror: \"\",\n      joints: \"\",\n      tax_rate: 18,\n      seat_width: 0,\n      ceramic_drawer: \"None\",\n      ceramic_tiles: \"None\",\n      seat_depth: 0,\n      seat_height: 0,\n      wheel: \"None\",\n      wheel_included: \"no\",\n      trolly: \"\",\n      returnable: false,\n      returnDays: 0,\n      trolly_mater: \"\",\n      top_size_length: 0,\n      top_size_breadth: 0,\n      dial_size: 0,\n      COD: false,\n      textile: \"\",\n      paid_amount: 0,\n      total_amount: 0,\n      customer_name: \"\",\n      customer_email: \"\",\n      shipping_address: \"\",\n      searchCustomer: \"\",\n      mobile_store: true,\n      online_store: true,\n      continue_selling: true,\n      ceramic_drawer_included: false,\n      ceramic_tiles_included: false,\n      unit: \"Pcs\",\n      quantity: 1,\n      textile_type: \"\",\n      category_id: \"\",\n      sub_category_id: \"\",\n      product_description: \"\",\n      legs: \"None\",\n      fabric: \"None\",\n      assembly_level: \"Easy Assembly\",\n      mattress: \"no\",\n      mattress_length: 0,\n      mattress_breadth: 0,\n      hinge: \"None\",\n      hinge_qty: 0,\n      knob: \"None\",\n      knob_qty: 0,\n      handle: \"None\",\n      handle_qty: 0,\n      door: \"None\",\n      door_qty: 0,\n      plywood: \"no\",\n      wheel_qty: 0,\n      cradle_bed: \"no\",\n      cradle_bed_depth: 0,\n      cradle_bed_height: 0,\n      cradle_bed_width: 0,\n      showroom_price: 0,\n      discount_limit: 0,\n      length_main: 0,\n      weight: 0,\n      ceramic_drawer_qty: 0,\n      ceramic_tiles_qty: 0,\n      back_style: \"None\",\n      weight_capacity: \"None\",\n      drawer: \"None\",\n      package_breadth: 0,\n      package_height: 0,\n      package_length: 0,\n      silver_weight: 0,\n      mirror_length: 0,\n      mirror_width: 0,\n      drawer_count: 0,\n      seating_size_width: 0,\n      seating_size_depth: 0,\n      seating_size_height: 0,\n      restocking_time: 0,\n      min_quantity: 1,\n      hardware_polish: \"None\",\n      wood_weight: 0,\n      metal_weight: 0,\n      package_weight: 0,\n      polish_type: \"None\",\n      polish_finish: \"None\",\n      level: \"None\",\n      lock: false,\n      price: 0,\n      indoorSavedImage: [],\n    });\n    document.getElementById(\"myForm\").reset();\n  };\n\n  const handleProduct = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", \"Not Assigned \" + SKU);\n    FD.append(\"type\", \"Product\");\n    FD.append(\"operation\", \"insertProduct\");\n\n    FD.append(\"SKU\", \"Not Assigned \" + SKU);\n    FD.append(\"status\", false);\n\n    FD.append(\"CVW\", changeData.CVW);\n\n    files.map((element) => {\n      if (element.validate) return FD.append(\"product_image\", element);\n    });\n\n    FD.append(\"specification_image\", changeData.specification_image || \"\");\n    FD.append(\"featured_image\", changeData.featured_image || \"\");\n    FD.append(\"mannequin_image\", changeData.mannequin_image || \"\");\n\n    console.log(changeData.primary_material);\n\n    FD.append(\n      \"primary_material_name\",\n      JSON.stringify(changeData.primary_material)\n    );\n    FD.append(\"primary_material\", changeData.primary_material);\n\n    FD.append(\"warehouse_name\", JSON.stringify(changeData.warehouse));\n    FD.append(\"polish_name\", JSON.stringify(changeData.polish));\n\n    category.map((item) => {\n      return (\n        item._id === changeData.category_name &&\n        FD.append(\"category_name\", item.category_name)\n      );\n    });\n\n    subCategory.map((item) => {\n      return (\n        item._id === changeData.sub_category_name &&\n        FD.append(\"sub_category_name\", item.sub_category_name)\n      );\n    });\n\n    catalog.hinge.map((item) => {\n      return (\n        item.SKU === changeData.hinge && FD.append(\"hinge_name\", item.title)\n      );\n    });\n    catalog.fitting.map((item) => {\n      return (\n        item.SKU === changeData.fitting && FD.append(\"fitting_name\", item.title)\n      );\n    });\n    catalog.knob.map((item) => {\n      return item.SKU === changeData.knob && FD.append(\"knob_name\", item.title);\n    });\n    catalog.door.map((item) => {\n      return item.SKU === changeData.door && FD.append(\"door_name\", item.title);\n    });\n    catalog.wheel.map((item) => {\n      return (\n        item.SKU === changeData.wheel && FD.append(\"wheel_name\", item.title)\n      );\n    });\n    catalog.handle.map((item) => {\n      return (\n        item.SKU === changeData.handle && FD.append(\"handle_name\", item.title)\n      );\n    });\n    catalog.ceramic_tiles.map((item) => {\n      return (\n        item.SKU === changeData.ceramic_tiles &&\n        FD.append(\"ceramic_tiles_name\", item.title)\n      );\n    });\n    catalog.ceramic_drawer.map((item) => {\n      return (\n        item.SKU === changeData.ceramic_drawer &&\n        FD.append(\"ceramic_drawer_name\", item.title)\n      );\n    });\n\n    catalog.fabric.map((item) => {\n      return (\n        item.fabric === changeData.fabric &&\n        FD.append(\"fabric_name\", item.title)\n      );\n    });\n\n    catalog.wheel.map((item) => {\n      return (\n        item.wheel === changeData.wheel && FD.append(\"wheel_name\", item.title)\n      );\n    });\n\n    FD.append(\"parentProduct\", changeData.SKU);\n    FD.append(\"returnDays\", changeData.returnable ? changeData.returnDays : 0);\n    FD.append(\"returnable\", changeData.returnable);\n    FD.append(\"COD\", changeData.COD);\n    FD.append(\"polish\", changeData.polish);\n    FD.append(\"hinge\", changeData.hinge);\n    FD.append(\"knob\", changeData.knob);\n    FD.append(\"handle\", changeData.handle);\n    FD.append(\"door\", changeData.door);\n    FD.append(\"fitting\", changeData.fitting);\n    FD.append(\"amazon_url\", changeData.amazon_url);\n    FD.append(\"flipkart_url\", changeData.flipkart_url);\n    FD.append(\"jiomart_url\", changeData.jiomart_url);\n    FD.append(\"wood_weight\", changeData.wood_weight);\n    FD.append(\"metal_weight\", changeData.metal_weight);\n    FD.append(\"package_weight\", changeData.package_weight);\n\n    FD.append(\"cradle_bed\", changeData.cradle_bed);\n    if (changeData.cradle_bed) {\n      FD.append(\"cradle_bed_depth\", changeData.cradle_bed_depth);\n      FD.append(\"cradle_bed_height\", changeData.cradle_bed_height);\n      FD.append(\"cradle_bed_width\", changeData.cradle_bed_width);\n    }\n\n    FD.append(\"wheel_included\", changeData.wheel_included);\n\n    if (changeData.wheel_included) {\n      FD.append(\"wheel_qty\", changeData.wheel_qty);\n      FD.append(\"wheel\", changeData.wheel);\n    }\n    if (changeData.handle !== \"None\") {\n      FD.append(\"handle_qty\", changeData.handle_qty);\n    }\n    if (changeData.hinge !== \"None\") {\n      FD.append(\"hinge_qty\", changeData.hinge_qty);\n    }\n    if (changeData.door !== \"None\") {\n      FD.append(\"door_qty\", changeData.door_qty);\n    }\n    if (changeData.knob !== \"None\") {\n      FD.append(\"knob_qty\", changeData.knob_qty);\n    }\n    if (changeData.fabric !== \"None\") {\n      FD.append(\"fabric_qty\", changeData.fabric_qty);\n    }\n\n    FD.append(\"ceramic_drawer_included\", changeData.ceramic_drawer_included);\n\n    if (changeData.ceramic_drawer_included) {\n      FD.append(\"ceramic_drawer\", changeData.ceramic_drawer);\n      FD.append(\"ceramic_drawer_qty\", changeData.ceramic_drawer_qty);\n    }\n\n    FD.append(\"ceramic_tiles_included\", changeData.ceramic_tiles_included);\n\n    if (changeData.ceramic_tiles_included) {\n      FD.append(\"ceramic_tiles\", changeData.ceramic_tiles);\n      FD.append(\"ceramic_tiles_qty\", changeData.ceramic_tiles_qty);\n    }\n\n    FD.append(\"mattress\", changeData.mattress);\n    FD.append(\"mattress_length\", changeData.mattress_length);\n    FD.append(\"mattress_breadth\", changeData.mattress_breadth);\n    FD.append(\"plywood\", changeData.plywood);\n\n    FD.append(\"range\", changeData.range);\n    FD.append(\"category_id\", changeData.category_name);\n    FD.append(\"back_style\", changeData.back_style);\n    FD.append(\"sub_category_id\", changeData.sub_category_name);\n    FD.append(\"polish_time\", changeData.polish_time);\n    FD.append(\"manufacturing_time\", changeData.manufacturing_time);\n    FD.append(\"product_title\", changeData.product_title);\n    FD.append(\"product_description\", changeData.product_description);\n    FD.append(\"selling_points\", JSON.stringify(changeData.selling_points));\n    FD.append(\"MRP\", changeData.MRP ? changeData.MRP : 0);\n    FD.append(\n      \"showroom_price\",\n      changeData.showroom_price ? changeData.showroom_price : 0\n    );\n    FD.append(\"seo_title\", changeData.seo_title);\n    FD.append(\"seo_description\", changeData.seo_description);\n    FD.append(\"seo_keyword\", changeData.seo_keyword);\n    FD.append(\"discount_limit\", changeData.discount_limit || 0);\n    FD.append(\"selling_price\", changeData.selling_price);\n    FD.append(\"warehouse\", changeData.warehouse);\n    // FD.append(\"polish\", changeData.polish);\n    FD.append(\"fabric\", changeData.fabric);\n\n    FD.append(\"drawer\", changeData.drawer);\n\n    FD.append(\"unit\", changeData.unit);\n    FD.append(\"quantity\", changeData.quantity ? changeData.quantity : 1);\n\n    if (changeData.drawer !== undefined || changeData.drawer !== \"none\")\n      FD.append(\n        \"drawer_count\",\n        changeData.drawer_count ? changeData.drawer_count : 0\n      );\n\n    //  // //console.log(secMaterial)\n    if (changeData.secondary_material_weight !== undefined)\n      FD.append(\n        \"secondary_material_weight\",\n        changeData.secondary_material_weight\n      );\n    FD.append(\n      \"length_main\",\n      changeData.length_main ? changeData.length_main : 0\n    );\n    FD.append(\"assembly_level\", changeData.assembly_level);\n\n    FD.append(\n      \"package_length\",\n      changeData.package_length ? changeData.package_length : 0\n    );\n    FD.append(\n      \"package_height\",\n      changeData.package_height ? changeData.package_height : 0\n    );\n    FD.append(\n      \"package_breadth\",\n      changeData.package_breadth ? changeData.package_breadth : 0\n    );\n\n    FD.append(\"breadth\", changeData.breadth ? changeData.breadth : 0);\n    FD.append(\"height\", changeData.height ? changeData.height : 0);\n    FD.append(\"weight\", changeData.weight ? changeData.weight : 0);\n\n    FD.append(\"top_size_length\", changeData.top_size_length);\n    FD.append(\"top_size_breadth\", changeData.top_size_breadth);\n    FD.append(\"dial_size\", changeData.dial_size);\n    FD.append(\n      \"seating_size_width\",\n      changeData.seating_size_width ? changeData.seating_size_width : 0\n    );\n    FD.append(\n      \"seating_size_depth\",\n      changeData.seating_size_depth ? changeData.seating_size_depth : 0\n    );\n    FD.append(\n      \"seating_size_height\",\n      changeData.seating_size_height ? changeData.seating_size_height : 0\n    );\n    FD.append(\"weight_capacity\", changeData.weight_capacity);\n    FD.append(\"assembly_required\", changeData.assembly_required);\n\n    if (changeData.jodhpur_stock && changeData.jodhpur_stock > 0)\n      FD.append(\"jodhpur_stock\", changeData.jodhpur_stock);\n\n    if (changeData.bangalore_stock && changeData.bangalore_stock > 0)\n      FD.append(\"bangalore_stock\", changeData.bangalore_stock);\n\n    if (changeData.assembly_required === \"shipping\")\n      FD.append(\"assembly_part\", changeData.assembly_part);\n    if (changeData.assembly_required === \"yes\")\n      FD.append(\"legs\", changeData.legs);\n\n    if (changeData.silver === \"yes\")\n      FD.append(\n        \"silver_weight\",\n        changeData.silver_weight ? changeData.silver_weight : 0\n      );\n\n    if (changeData.trolley === \"yes\")\n      FD.append(\"trolley_material\", changeData.trolley_material);\n\n    if (changeData.upholstery === \"Yes\") FD.append(\"fabric\", changeData.fabric);\n\n    FD.append(\"mirror\", changeData.mirror);\n\n    if (changeData.mirror === \"yes\") {\n      FD.append(\n        \"mirror_length\",\n        changeData.mirror_length ? changeData.mirror_length : 0\n      );\n      FD.append(\n        \"mirror_width\",\n        changeData.mirror_width ? changeData.mirror_width : 0\n      );\n    }\n    FD.append(\"joints\", changeData.joints ? changeData.joints : \"\");\n    FD.append(\n      \"upholstery\",\n      changeData.upholstery ? changeData.upholstery : \"no\"\n    );\n    FD.append(\"trolley\", changeData.trolley ? changeData.trolley : \"no\");\n    FD.append(\"silver\", changeData.silver ? changeData.silver : \"no\");\n    FD.append(\n      \"rotating_seats\",\n      changeData.rotating_seats ? changeData.rotating_seats : false\n    );\n    FD.append(\n      \"eatable_oil_polish\",\n      changeData.eatable_oil_polish ? changeData.eatable_oil_polish : false\n    );\n    FD.append(\n      \"no_chemical\",\n      changeData.no_chemical ? changeData.no_chemical : false\n    );\n    FD.append(\"weaving\", changeData.weaving ? changeData.weaving : false);\n    FD.append(\"knife\", changeData.knife ? changeData.knife : false);\n    FD.append(\n      \"mobile_store\",\n      changeData.mobile_store ? changeData.mobile_store : true\n    );\n    FD.append(\n      \"online_store\",\n      changeData.online_store ? changeData.online_store : true\n    );\n    FD.append(\n      \"continue_selling\",\n      changeData.continue_selling ? changeData.continue_selling : true\n    );\n\n    FD.append(\n      \"wall_hanging\",\n      changeData.wall_hanging ? changeData.wall_hanging : false\n    );\n\n    FD.append(\n      \"not_suitable_for_Micro_Dish\",\n      changeData.not_suitable_for_Micro_Dish\n        ? changeData.not_suitable_for_Micro_Dish\n        : false\n    );\n\n    FD.append(\"tilt_top\", changeData.tilt_top ? changeData.tilt_top : false);\n    FD.append(\n      \"inside_compartments\",\n      changeData.inside_compartments ? changeData.inside_compartments : false\n    );\n    FD.append(\"stackable\", changeData.stackable ? changeData.stackable : false);\n    FD.append(\"tax_rate\", changeData.tax_rate);\n\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n  const handleVariation = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n    files.map((element) => {\n      if (element.validate) return FD.append(\"product_image\", element);\n    });\n    FD.append(\"savedImages\", JSON.stringify(changeData.savedImages));\n\n    FD.append(\"status\", true);\n    FD.append(\"parent_SKU\", changeData.SKU);\n\n    FD.append(\"SKU\", SKU);\n    FD.append(\"ACIN\", changeData.ACIN);\n\n    FD.append(\"variant_label\", changeData.variant_label);\n    FD.append(\"specification_image\", changeData.specification_image);\n    FD.append(\"featured_image\", changeData.featured_image);\n    FD.append(\"mannequin_image\", changeData.mannequin_image);\n    FD.append(\"wood_weight\", changeData.wood_weight);\n    FD.append(\"metal_weight\", changeData.metal_weight);\n    FD.append(\"package_weight\", changeData.package_weight);\n\n    console.log(changeData.primary_material);\n\n    FD.append(\n      \"primary_material_name\",\n      JSON.stringify(changeData.primary_material)\n    );\n\n    FD.append(\"warehouse_name\", JSON.stringify(changeData.warehouse));\n    FD.append(\"polish_name\", JSON.stringify(changeData.polish));\n\n    category.map((item) => {\n      return (\n        item._id === changeData.category_name &&\n        FD.append(\"category_name\", item.category_name)\n      );\n    });\n\n    subCategory.map((item) => {\n      return (\n        item._id === changeData.sub_category_name &&\n        FD.append(\"sub_category_name\", item.sub_category_name)\n      );\n    });\n\n    catalog.hinge.map((item) => {\n      return (\n        item.SKU === changeData.hinge && FD.append(\"hinge_name\", item.title)\n      );\n    });\n    catalog.fitting.map((item) => {\n      return (\n        item.SKU === changeData.fitting && FD.append(\"fitting_name\", item.title)\n      );\n    });\n    catalog.knob.map((item) => {\n      return item.SKU === changeData.knob && FD.append(\"knob_name\", item.title);\n    });\n    catalog.door.map((item) => {\n      return item.SKU === changeData.door && FD.append(\"door_name\", item.title);\n    });\n    catalog.wheel.map((item) => {\n      return (\n        item.SKU === changeData.wheel && FD.append(\"wheel_name\", item.title)\n      );\n    });\n    catalog.handle.map((item) => {\n      return (\n        item.SKU === changeData.handle && FD.append(\"handle_name\", item.title)\n      );\n    });\n    catalog.ceramic_tiles.map((item) => {\n      return (\n        item.SKU === changeData.ceramic_tiles &&\n        FD.append(\"ceramic_tiles_name\", item.title)\n      );\n    });\n    catalog.ceramic_drawer.map((item) => {\n      return (\n        item.SKU === changeData.ceramic_drawer &&\n        FD.append(\"ceramic_drawer_name\", item.title)\n      );\n    });\n\n    catalog.fabric.map((item) => {\n      return (\n        item.fabric === changeData.fabric &&\n        FD.append(\"fabric_name\", item.title)\n      );\n    });\n\n    catalog.wheel.map((item) => {\n      return (\n        item.wheel === changeData.wheel && FD.append(\"wheel_name\", item.title)\n      );\n    });\n\n    FD.append(\"parentProduct\", changeData.SKU);\n    FD.append(\"returnDays\", changeData.returnable ? changeData.returnDays : 0);\n    FD.append(\"returnable\", changeData.returnable);\n    FD.append(\"COD\", changeData.COD);\n    FD.append(\"polish\", changeData.polish);\n    FD.append(\"hinge\", changeData.hinge);\n    FD.append(\"knob\", changeData.knob);\n    FD.append(\"handle\", changeData.handle);\n    FD.append(\"door\", changeData.door);\n    FD.append(\"fitting\", changeData.fitting);\n    FD.append(\"amazon_url\", changeData.amazon_url);\n    FD.append(\"flipkart_url\", changeData.flipkart_url);\n    FD.append(\"jiomart_url\", changeData.jiomart_url);\n\n    FD.append(\"cradle_bed\", changeData.cradle_bed);\n    if (changeData.cradle_bed) {\n      FD.append(\"cradle_bed_depth\", changeData.cradle_bed_depth);\n      FD.append(\"cradle_bed_height\", changeData.cradle_bed_height);\n      FD.append(\"cradle_bed_width\", changeData.cradle_bed_width);\n    }\n\n    FD.append(\"wheel_included\", changeData.wheel_included);\n\n    if (changeData.wheel_included) {\n      FD.append(\"wheel_qty\", changeData.wheel_qty);\n      FD.append(\"wheel\", changeData.wheel);\n    }\n    if (changeData.handle !== \"None\") {\n      FD.append(\"handle_qty\", changeData.handle_qty);\n    }\n    if (changeData.hinge !== \"None\") {\n      FD.append(\"hinge_qty\", changeData.hinge_qty);\n    }\n    if (changeData.door !== \"None\") {\n      FD.append(\"door_qty\", changeData.door_qty);\n    }\n    if (changeData.knob !== \"None\") {\n      FD.append(\"knob_qty\", changeData.knob_qty);\n    }\n    if (changeData.fabric !== \"None\") {\n      FD.append(\"fabric_qty\", changeData.fabric_qty);\n    }\n\n    FD.append(\"ceramic_drawer_included\", changeData.ceramic_drawer_included);\n\n    if (changeData.ceramic_drawer_included) {\n      FD.append(\"ceramic_drawer\", changeData.ceramic_drawer);\n      FD.append(\"ceramic_drawer_qty\", changeData.ceramic_drawer_qty);\n    }\n\n    FD.append(\"ceramic_tiles_included\", changeData.ceramic_tiles_included);\n\n    if (changeData.ceramic_tiles_included) {\n      FD.append(\"ceramic_tiles\", changeData.ceramic_tiles);\n      FD.append(\"ceramic_tiles_qty\", changeData.ceramic_tiles_qty);\n    }\n\n    FD.append(\"mattress\", changeData.mattress);\n    FD.append(\"mattress_length\", changeData.mattress_length);\n    FD.append(\"mattress_breadth\", changeData.mattress_breadth);\n    FD.append(\"plywood\", changeData.plywood);\n\n    FD.append(\"range\", changeData.range);\n    FD.append(\"category_id\", changeData.category_name);\n    FD.append(\"back_style\", changeData.back_style);\n    FD.append(\"sub_category_id\", changeData.sub_category_name);\n    FD.append(\"polish_time\", changeData.polish_time);\n    FD.append(\"manufacturing_time\", changeData.manufacturing_time);\n    FD.append(\"product_title\", changeData.product_title);\n    FD.append(\"product_description\", changeData.product_description);\n    FD.append(\"selling_points\", JSON.stringify(changeData.selling_points));\n    FD.append(\"MRP\", changeData.MRP ? changeData.MRP : 0);\n    FD.append(\n      \"showroom_price\",\n      changeData.showroom_price ? changeData.showroom_price : 0\n    );\n    FD.append(\"seo_title\", changeData.seo_title);\n    FD.append(\"seo_description\", changeData.seo_description);\n    FD.append(\"seo_keyword\", changeData.seo_keyword);\n    FD.append(\"discount_limit\", changeData.discount_limit || 0);\n    FD.append(\"selling_price\", changeData.selling_price);\n    FD.append(\"primary_material\", changeData.primary_material);\n    FD.append(\"warehouse\", changeData.warehouse);\n    // FD.append(\"polish\", changeData.polish);\n    FD.append(\"fabric\", changeData.fabric);\n    FD.append(\"CVW\", changeData.CVW);\n\n    FD.append(\"drawer\", changeData.drawer);\n\n    FD.append(\"unit\", changeData.unit);\n    FD.append(\"quantity\", changeData.quantity ? changeData.quantity : 1);\n\n    if (changeData.drawer !== undefined || changeData.drawer !== \"none\")\n      FD.append(\n        \"drawer_count\",\n        changeData.drawer_count ? changeData.drawer_count : 0\n      );\n\n    //  // //console.log(secMaterial)\n    if (changeData.secondary_material_weight !== undefined)\n      FD.append(\n        \"secondary_material_weight\",\n        changeData.secondary_material_weight\n      );\n    FD.append(\n      \"length_main\",\n      changeData.length_main ? changeData.length_main : 0\n    );\n    FD.append(\"assembly_level\", changeData.assembly_level);\n\n    FD.append(\n      \"package_length\",\n      changeData.package_length ? changeData.package_length : 0\n    );\n    FD.append(\n      \"package_height\",\n      changeData.package_height ? changeData.package_height : 0\n    );\n    FD.append(\n      \"package_breadth\",\n      changeData.package_breadth ? changeData.package_breadth : 0\n    );\n\n    FD.append(\"breadth\", changeData.breadth ? changeData.breadth : 0);\n    FD.append(\"height\", changeData.height ? changeData.height : 0);\n    FD.append(\"weight\", changeData.weight ? changeData.weight : 0);\n\n    FD.append(\"top_size_length\", changeData.top_size_length);\n    FD.append(\"top_size_breadth\", changeData.top_size_breadth);\n    FD.append(\"dial_size\", changeData.dial_size);\n    FD.append(\n      \"seating_size_width\",\n      changeData.seating_size_width ? changeData.seating_size_width : 0\n    );\n    FD.append(\n      \"seating_size_depth\",\n      changeData.seating_size_depth ? changeData.seating_size_depth : 0\n    );\n    FD.append(\n      \"seating_size_height\",\n      changeData.seating_size_height ? changeData.seating_size_height : 0\n    );\n    FD.append(\"weight_capacity\", changeData.weight_capacity);\n    FD.append(\"assembly_required\", changeData.assembly_required);\n\n    if (changeData.jodhpur_stock && changeData.jodhpur_stock > 0)\n      FD.append(\"jodhpur_stock\", changeData.jodhpur_stock);\n\n    if (changeData.bangalore_stock && changeData.bangalore_stock > 0)\n      FD.append(\"bangalore_stock\", changeData.bangalore_stock);\n\n    if (changeData.assembly_required === \"shipping\")\n      FD.append(\"assembly_part\", changeData.assembly_part);\n    if (changeData.assembly_required === \"yes\")\n      FD.append(\"legs\", changeData.legs);\n\n    if (changeData.silver === \"yes\")\n      FD.append(\n        \"silver_weight\",\n        changeData.silver_weight ? changeData.silver_weight : 0\n      );\n\n    if (changeData.trolley === \"yes\")\n      FD.append(\"trolley_material\", changeData.trolley_material);\n\n    if (changeData.upholstery === \"Yes\") FD.append(\"fabric\", changeData.fabric);\n\n    FD.append(\"mirror\", changeData.mirror);\n\n    if (changeData.mirror === \"yes\") {\n      FD.append(\n        \"mirror_length\",\n        changeData.mirror_length ? changeData.mirror_length : 0\n      );\n      FD.append(\n        \"mirror_width\",\n        changeData.mirror_width ? changeData.mirror_width : 0\n      );\n    }\n    FD.append(\"joints\", changeData.joints ? changeData.joints : \"\");\n    FD.append(\n      \"upholstery\",\n      changeData.upholstery ? changeData.upholstery : \"no\"\n    );\n    FD.append(\"trolley\", changeData.trolley ? changeData.trolley : \"no\");\n    FD.append(\"silver\", changeData.silver ? changeData.silver : \"no\");\n    FD.append(\n      \"rotating_seats\",\n      changeData.rotating_seats ? changeData.rotating_seats : false\n    );\n    FD.append(\n      \"eatable_oil_polish\",\n      changeData.eatable_oil_polish ? changeData.eatable_oil_polish : false\n    );\n    FD.append(\n      \"no_chemical\",\n      changeData.no_chemical ? changeData.no_chemical : false\n    );\n    FD.append(\"weaving\", changeData.weaving ? changeData.weaving : false);\n    FD.append(\"knife\", changeData.knife ? changeData.knife : false);\n    FD.append(\n      \"mobile_store\",\n      changeData.mobile_store ? changeData.mobile_store : true\n    );\n    FD.append(\n      \"online_store\",\n      changeData.online_store ? changeData.online_store : true\n    );\n    FD.append(\n      \"continue_selling\",\n      changeData.continue_selling ? changeData.continue_selling : true\n    );\n\n    FD.append(\n      \"wall_hanging\",\n      changeData.wall_hanging ? changeData.wall_hanging : false\n    );\n\n    FD.append(\n      \"not_suitable_for_Micro_Dish\",\n      changeData.not_suitable_for_Micro_Dish\n        ? changeData.not_suitable_for_Micro_Dish\n        : false\n    );\n\n    FD.append(\"tilt_top\", changeData.tilt_top ? changeData.tilt_top : false);\n    FD.append(\n      \"inside_compartments\",\n      changeData.inside_compartments ? changeData.inside_compartments : false\n    );\n    FD.append(\"stackable\", changeData.stackable ? changeData.stackable : false);\n    FD.append(\"tax_rate\", changeData.tax_rate);\n\n    const res = variation(FD);\n\n    res\n      .then((data) => {\n        if (data.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          form.setRow((old) => ({\n            ...old,\n            data: [\n              ...old.data,\n              {\n                id: old.data.length + 1,\n                SKU: data.data.response.SKU,\n                CVW: data.data.response.CVW,\n                product_title: data.data.response.product_title,\n                category_name: data.data.response.category_name,\n                category_id: data.data.response.category_id,\n                sub_category_name: data.data.response.sub_category_name,\n                sub_category_id: data.data.response.sub_category_id,\n                product_description: data.data.response.product_description,\n                seo_title: data.data.response.seo_title,\n                seo_description: data.data.response.seo_description,\n                seo_keyword: data.data.response.seo_keyword,\n                product_image: data.data.response.product_image,\n                featured_image: data.data.response.featured_image,\n                mannequin_image: data.data.response.mannequin_image,\n                specification_image: data.data.response.specification_image,\n                primary_material: data.data.response.primary_material,\n                primary_material_name: data.data.response.primary_material_name,\n                warehouse: data.data.response.warehouse,\n                warehouse_name: data.data.response.warehouse_name,\n                length_main: data.data.response.length_main,\n                breadth: data.data.response.breadth,\n                height: data.data.response.height,\n                bangalore_stock: data.data.response.bangalore_stock,\n                jodhpur_stock: data.data.response.jodhpur_stock,\n                weight: data.data.response.weight,\n                polish: data.data.response.polish,\n                polish_name: data.data.response.polish_name,\n                hinge: data.data.response.hinge,\n                hinge_qty: data.data.response.hinge_qty,\n                hinge_name: data.data.response.hinge_name,\n                knob: data.data.response.knob,\n                knob_qty: data.data.response.knob_qty,\n                knob_name: data.data.response.knob_name,\n                handle: data.data.response.handle,\n                handle_qty: data.data.response.handle_qty,\n                handle_name: data.data.response.handle_name,\n                door: data.data.response.door,\n                door_qty: data.data.response.door_qty,\n                door_name: data.data.response.door_name,\n                fitting: data.data.response.fitting,\n                fitting_name: data.data.response.fitting_name,\n                selling_points: data.data.response.selling_points,\n                dial_size: data.data.response.dial_size,\n                seating_size_width: data.data.response.seating_size_width,\n                seating_size_depth: data.data.response.seating_size_depth,\n                seating_size_height: data.data.response.seating_size_height,\n                weight_capacity: data.data.response.weight_capacity,\n                fabric: data.data.response.fabric,\n                fabric_qty: data.data.response.fabric_qty,\n                fabric_name: data.data.response.fabric_name,\n                wall_hanging: data.data.response.wall_hanging,\n                assembly_required: data.data.response.assembly_required,\n                assembly_part: data.data.response.assembly_part,\n                legs: data.data.response.legs,\n                mirror: data.data.response.mirror,\n                mirror_length: data.data.response.mirror_length,\n                mirror_width: data.data.response.mirror_width,\n                silver: data.data.response.silver,\n                silver_weight: data.data.response.silver_weight,\n                joints: data.data.response.joints,\n                upholstery: data.data.response.upholstery,\n                trolley: data.data.response.trolley,\n                trolley_material: data.data.response.trolley_material,\n                rotating_seats: data.data.response.rotating_seats,\n                eatable_oil_polish: data.data.response.eatable_oil_polish,\n                no_chemical: data.data.response.no_chemical,\n                straight_back: data.data.response.straight_back,\n                lean_back: data.data.response.lean_back,\n                weaving: data.data.response.weaving,\n                knife: data.data.response.knife,\n                not_suitable_for_Micro_Dish:\n                  data.data.response.not_suitable_for_Micro_Dish,\n                tilt_top: data.data.response.tilt_top,\n                inside_compartments: data.data.response.inside_compartments,\n                stackable: data.data.response.stackable,\n                MRP: data.data.response.MRP,\n                tax_rate: data.data.response.tax_rate,\n                selling_price: data.data.response.selling_price,\n                showroom_price: data.data.response.showroom_price,\n                discount_limit: data.data.response.discount_limit,\n                polish_time: data.data.response.polish_time,\n                manufacturing_time: data.data.response.manufacturing_time,\n                status: data.data.response.status,\n                returnDays: data.data.response.returnDays,\n                COD: data.data.response.COD,\n                returnable: data.data.response.returnable,\n                drawer: data.data.response.drawer,\n                drawer_count: data.data.response.drawer_count,\n                mobile_store: data.data.response.mobile_store,\n                online_store: data.data.response.online_store,\n                range: data.data.response.range,\n                back_style: data.data.response.back_style,\n                package_length: data.data.response.package_length,\n                package_height: data.data.response.package_height,\n                package_breadth: data.data.response.package_breadth,\n                quantity: data.data.response.quantity,\n                unit: data.data.response.unit,\n                assembly_level: data.data.response.assembly_level,\n                continue_selling: data.data.response.continue_selling,\n                wheel: data.data.response.wheel,\n                wheel_included: data.data.response.wheel_included,\n                wheel_qty: data.data.response.wheel_qty,\n                wheel_name: data.data.response.wheel_name,\n                ceramic_tiles: data.data.response.ceramic_tiles,\n                ceramic_tiles_qty: data.data.response.ceramic_tiles_qty,\n                ceramic_tiles_included:\n                  data.data.response.ceramic_tiles_included,\n                ceramic_tiles_name: data.data.response.ceramic_tiles_name,\n                ceramic_drawers: data.data.response.ceramic_drawers,\n                ceramic_drawers_included:\n                  data.data.response.ceramic_drawers_included,\n                ceramic_drawers_name: data.data.response.ceramic_drawers_name,\n                mattress: data.data.response.mattress,\n                mattress_length: data.data.response.mattress_length,\n                mattress_breadth: data.data.response.mattress_breadth,\n                plywood: data.data.response.plywood,\n                top_size_breadth: data.data.response.top_size_breadth,\n                top_size_length: data.data.response.top_size_length,\n                ceramic_drawers_qty: data.data.response.ceramic_drawers_qty,\n                variations: data.data.response.variations,\n                variant_label: data.data.response.variant_label,\n                parent_SKU: data.data.response.parent_SKU,\n                amazon_url: data.data.response.amazon_url,\n                flipkart_url: data.data.response.flipkart_url,\n                jiomart_url: data.data.response.jiomart_url,\n\n                action: data.data.response,\n              },\n            ],\n          }));\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleUpdateProduct = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", changeData.SKU);\n    FD.append(\"type\", \"Product\");\n    FD.append(\"operation\", \"updateProduct\");\n    FD.append(\"parentProduct\", changeData.SKU);\n    FD.append(\"variations\", changeData.variations);\n    FD.append(\"variant_label\", changeData.variant_label);\n    FD.append(\"amazon_url\", changeData.amazon_url);\n    FD.append(\"flipkart_url\", changeData.flipkart_url);\n    FD.append(\"jiomart_url\", changeData.jiomart_url);\n    FD.append(\"wood_weight\", changeData.wood_weight);\n    FD.append(\"metal_weight\", changeData.metal_weight);\n    FD.append(\"package_weight\", changeData.package_weight);\n\n    files.map((element) => {\n      if (element.validate) return FD.append(\"product_image\", element);\n    });\n    FD.append(\"savedImages\", JSON.stringify(changeData.savedImages));\n\n    FD.append(\"_id\", changeData._id);\n\n    FD.append(\"specification_image\", changeData.specification_image);\n    FD.append(\"featured_image\", changeData.featured_image);\n    FD.append(\"mannequin_image\", changeData.mannequin_image);\n\n    console.log(changeData.primary_material);\n\n    FD.append(\n      \"primary_material_name\",\n      JSON.stringify(changeData.primary_material)\n    );\n\n    FD.append(\"warehouse_name\", JSON.stringify(changeData.warehouse));\n    FD.append(\"polish_name\", JSON.stringify(changeData.polish));\n\n    category.map((item) => {\n      return (\n        item._id === changeData.category_name &&\n        FD.append(\"category_name\", item.category_name)\n      );\n    });\n\n    subCategory.map((item) => {\n      return (\n        item._id === changeData.sub_category_name &&\n        FD.append(\"sub_category_name\", item.sub_category_name)\n      );\n    });\n\n    catalog.hinge.map((item) => {\n      return (\n        item.SKU === changeData.hinge && FD.append(\"hinge_name\", item.title)\n      );\n    });\n    catalog.fitting.map((item) => {\n      return (\n        item.SKU === changeData.fitting && FD.append(\"fitting_name\", item.title)\n      );\n    });\n    catalog.knob.map((item) => {\n      return item.SKU === changeData.knob && FD.append(\"knob_name\", item.title);\n    });\n    catalog.door.map((item) => {\n      return item.SKU === changeData.door && FD.append(\"door_name\", item.title);\n    });\n    catalog.wheel.map((item) => {\n      return (\n        item.SKU === changeData.wheel && FD.append(\"wheel_name\", item.title)\n      );\n    });\n    catalog.handle.map((item) => {\n      return (\n        item.SKU === changeData.handle && FD.append(\"handle_name\", item.title)\n      );\n    });\n    catalog.ceramic_tiles.map((item) => {\n      return (\n        item.SKU === changeData.ceramic_tiles &&\n        FD.append(\"ceramic_tiles_name\", item.title)\n      );\n    });\n    catalog.ceramic_drawer.map((item) => {\n      return (\n        item.SKU === changeData.ceramic_drawer &&\n        FD.append(\"ceramic_drawer_name\", item.title)\n      );\n    });\n\n    catalog.fabric.map((item) => {\n      return (\n        item.fabric === changeData.fabric &&\n        FD.append(\"fabric_name\", item.title)\n      );\n    });\n\n    catalog.wheel.map((item) => {\n      return (\n        item.wheel === changeData.wheel && FD.append(\"wheel_name\", item.title)\n      );\n    });\n\n    FD.append(\"parentProduct\", changeData.SKU);\n    FD.append(\"returnDays\", changeData.returnable ? changeData.returnDays : 0);\n    FD.append(\"returnable\", changeData.returnable);\n    FD.append(\"COD\", changeData.COD);\n    FD.append(\"polish\", changeData.polish);\n    FD.append(\"hinge\", changeData.hinge);\n    FD.append(\"knob\", changeData.knob);\n    FD.append(\"handle\", changeData.handle);\n    FD.append(\"door\", changeData.door);\n    FD.append(\"fitting\", changeData.fitting);\n\n    FD.append(\"cradle_bed\", changeData.cradle_bed);\n    if (changeData.cradle_bed) {\n      FD.append(\"cradle_bed_depth\", changeData.cradle_bed_depth);\n      FD.append(\"cradle_bed_height\", changeData.cradle_bed_height);\n      FD.append(\"cradle_bed_width\", changeData.cradle_bed_width);\n    }\n\n    FD.append(\"wheel_included\", changeData.wheel_included);\n\n    if (changeData.wheel_included) {\n      FD.append(\"wheel_qty\", changeData.wheel_qty);\n      FD.append(\"wheel\", changeData.wheel);\n    }\n    if (changeData.handle !== \"None\") {\n      FD.append(\"handle_qty\", changeData.handle_qty);\n    }\n    if (changeData.hinge !== \"None\") {\n      FD.append(\"hinge_qty\", changeData.hinge_qty);\n    }\n    if (changeData.door !== \"None\") {\n      FD.append(\"door_qty\", changeData.door_qty);\n    }\n    if (changeData.knob !== \"None\") {\n      FD.append(\"knob_qty\", changeData.knob_qty);\n    }\n    if (changeData.fabric !== \"None\") {\n      FD.append(\"fabric_qty\", changeData.fabric_qty);\n    }\n\n    FD.append(\"ceramic_drawer_included\", changeData.ceramic_drawer_included);\n\n    if (changeData.ceramic_drawer_included) {\n      FD.append(\"ceramic_drawer\", changeData.ceramic_drawer);\n      FD.append(\"ceramic_drawer_qty\", changeData.ceramic_drawer_qty);\n    }\n\n    FD.append(\"ceramic_tiles_included\", changeData.ceramic_tiles_included);\n\n    if (changeData.ceramic_tiles_included) {\n      FD.append(\"ceramic_tiles\", changeData.ceramic_tiles);\n      FD.append(\"ceramic_tiles_qty\", changeData.ceramic_tiles_qty);\n    }\n\n    FD.append(\"mattress\", changeData.mattress);\n    FD.append(\"mattress_length\", changeData.mattress_length);\n    FD.append(\"mattress_breadth\", changeData.mattress_breadth);\n    FD.append(\"plywood\", changeData.plywood);\n\n    FD.append(\"range\", changeData.range);\n    FD.append(\"category_id\", changeData.category_name);\n    FD.append(\"back_style\", changeData.back_style);\n    FD.append(\"sub_category_id\", changeData.sub_category_name);\n    FD.append(\"polish_time\", changeData.polish_time);\n    FD.append(\"manufacturing_time\", changeData.manufacturing_time);\n    FD.append(\"product_title\", changeData.product_title);\n    FD.append(\"product_description\", changeData.product_description);\n    FD.append(\"selling_points\", JSON.stringify(changeData.selling_points));\n    FD.append(\"MRP\", changeData.MRP ? changeData.MRP : 0);\n    FD.append(\n      \"showroom_price\",\n      changeData.showroom_price ? changeData.showroom_price : 0\n    );\n    FD.append(\"seo_title\", changeData.seo_title);\n    FD.append(\"seo_description\", changeData.seo_description);\n    FD.append(\"seo_keyword\", changeData.seo_keyword);\n    FD.append(\"discount_limit\", changeData.discount_limit || 0);\n    FD.append(\"selling_price\", changeData.selling_price);\n    FD.append(\"primary_material\", changeData.primary_material);\n    FD.append(\"warehouse\", changeData.warehouse);\n    // FD.append(\"polish\", changeData.polish);\n    FD.append(\"fabric\", changeData.fabric);\n    FD.append(\"CVW\", changeData.CVW);\n\n    FD.append(\"drawer\", changeData.drawer);\n\n    FD.append(\"unit\", changeData.unit);\n    FD.append(\"quantity\", changeData.quantity ? changeData.quantity : 1);\n\n    if (changeData.drawer !== undefined || changeData.drawer !== \"none\")\n      FD.append(\n        \"drawer_count\",\n        changeData.drawer_count ? changeData.drawer_count : 0\n      );\n\n    //  // //console.log(secMaterial)\n    if (changeData.secondary_material_weight !== undefined)\n      FD.append(\n        \"secondary_material_weight\",\n        changeData.secondary_material_weight\n      );\n    FD.append(\n      \"length_main\",\n      changeData.length_main ? changeData.length_main : 0\n    );\n    FD.append(\"assembly_level\", changeData.assembly_level);\n\n    FD.append(\n      \"package_length\",\n      changeData.package_length ? changeData.package_length : 0\n    );\n    FD.append(\n      \"package_height\",\n      changeData.package_height ? changeData.package_height : 0\n    );\n    FD.append(\n      \"package_breadth\",\n      changeData.package_breadth ? changeData.package_breadth : 0\n    );\n\n    FD.append(\"breadth\", changeData.breadth ? changeData.breadth : 0);\n    FD.append(\"height\", changeData.height ? changeData.height : 0);\n    FD.append(\"weight\", changeData.weight ? changeData.weight : 0);\n\n    FD.append(\"top_size_length\", changeData.top_size_length);\n    FD.append(\"top_size_breadth\", changeData.top_size_breadth);\n    FD.append(\"dial_size\", changeData.dial_size);\n    FD.append(\n      \"seating_size_width\",\n      changeData.seating_size_width ? changeData.seating_size_width : 0\n    );\n    FD.append(\n      \"seating_size_depth\",\n      changeData.seating_size_depth ? changeData.seating_size_depth : 0\n    );\n    FD.append(\n      \"seating_size_height\",\n      changeData.seating_size_height ? changeData.seating_size_height : 0\n    );\n    FD.append(\"weight_capacity\", changeData.weight_capacity);\n    FD.append(\"assembly_required\", changeData.assembly_required);\n\n    if (changeData.jodhpur_stock && changeData.jodhpur_stock > 0)\n      FD.append(\"jodhpur_stock\", changeData.jodhpur_stock);\n\n    if (changeData.bangalore_stock && changeData.bangalore_stock > 0)\n      FD.append(\"bangalore_stock\", changeData.bangalore_stock);\n\n    if (changeData.assembly_required === \"shipping\")\n      FD.append(\"assembly_part\", changeData.assembly_part);\n    if (changeData.assembly_required === \"yes\")\n      FD.append(\"legs\", changeData.legs);\n\n    if (changeData.silver === \"yes\")\n      FD.append(\n        \"silver_weight\",\n        changeData.silver_weight ? changeData.silver_weight : 0\n      );\n\n    if (changeData.trolley === \"yes\")\n      FD.append(\"trolley_material\", changeData.trolley_material);\n\n    if (changeData.upholstery === \"Yes\") FD.append(\"fabric\", changeData.fabric);\n\n    FD.append(\"mirror\", changeData.mirror);\n\n    if (changeData.mirror === \"yes\") {\n      FD.append(\n        \"mirror_length\",\n        changeData.mirror_length ? changeData.mirror_length : 0\n      );\n      FD.append(\n        \"mirror_width\",\n        changeData.mirror_width ? changeData.mirror_width : 0\n      );\n    }\n    FD.append(\"joints\", changeData.joints ? changeData.joints : \"\");\n    FD.append(\n      \"upholstery\",\n      changeData.upholstery ? changeData.upholstery : \"no\"\n    );\n    FD.append(\"trolley\", changeData.trolley ? changeData.trolley : \"no\");\n    FD.append(\"silver\", changeData.silver ? changeData.silver : \"no\");\n    FD.append(\n      \"rotating_seats\",\n      changeData.rotating_seats ? changeData.rotating_seats : false\n    );\n    FD.append(\n      \"eatable_oil_polish\",\n      changeData.eatable_oil_polish ? changeData.eatable_oil_polish : false\n    );\n    FD.append(\n      \"no_chemical\",\n      changeData.no_chemical ? changeData.no_chemical : false\n    );\n    FD.append(\"weaving\", changeData.weaving ? changeData.weaving : false);\n    FD.append(\"knife\", changeData.knife ? changeData.knife : false);\n    FD.append(\n      \"mobile_store\",\n      changeData.mobile_store ? changeData.mobile_store : true\n    );\n    FD.append(\n      \"online_store\",\n      changeData.online_store ? changeData.online_store : true\n    );\n    FD.append(\n      \"continue_selling\",\n      changeData.continue_selling ? changeData.continue_selling : true\n    );\n\n    FD.append(\n      \"wall_hanging\",\n      changeData.wall_hanging ? changeData.wall_hanging : false\n    );\n\n    FD.append(\n      \"not_suitable_for_Micro_Dish\",\n      changeData.not_suitable_for_Micro_Dish\n        ? changeData.not_suitable_for_Micro_Dish\n        : false\n    );\n\n    FD.append(\"tilt_top\", changeData.tilt_top ? changeData.tilt_top : false);\n    FD.append(\n      \"inside_compartments\",\n      changeData.inside_compartments ? changeData.inside_compartments : false\n    );\n    FD.append(\"stackable\", changeData.stackable ? changeData.stackable : false);\n    FD.append(\"tax_rate\", changeData.tax_rate);\n\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleMergeProduct = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    files.map((element) => {\n      if (element.validate) return FD.append(\"product_image\", element);\n    });\n\n    FD.append(\"specification_image\", changeData.specification_image || \"\");\n    FD.append(\"featured_image\", changeData.featured_image || \"\");\n    FD.append(\"mannequin_image\", changeData.mannequin_image || \"\");\n\n    category.map((item) => {\n      return (\n        item._id === changeData.category_name &&\n        FD.append(\"category_name\", item.category_name)\n      );\n    });\n\n    subCategory.map((item) => {\n      return (\n        item._id === changeData.sub_category_name &&\n        FD.append(\"sub_category_name\", item.sub_category_name)\n      );\n    });\n\n    let Product_SKU = [];\n\n    if (changeData.product_articles.length > 0)\n      Product_SKU = changeData.product_articles.map((SKU) => ({\n        SKU: SKU,\n        qty: changeData[SKU] || 1,\n      }));\n\n    FD.append(\"product_articles\", JSON.stringify(Product_SKU));\n\n    FD.append(\"product_description\", changeData.product_description);\n    FD.append(\"seo_title\", changeData.seo_title);\n    FD.append(\"seo_description\", changeData.seo_description);\n    FD.append(\"seo_keyword\", changeData.seo_keyword);\n    FD.append(\"selling_points\", JSON.stringify(changeData.selling_points));\n\n    if (changeData.jodhpur_stock && changeData.jodhpur_stock > 0)\n      FD.append(\"jodhpur_stock\", changeData.jodhpur_stock);\n\n    if (changeData.bangalore_stock && changeData.bangalore_stock > 0)\n      FD.append(\"bangalore_stock\", changeData.bangalore_stock);\n\n    FD.append(\"category_id\", changeData.category_name);\n    FD.append(\"sub_category_id\", changeData.sub_category_name);\n    FD.append(\"product_title\", changeData.product_title);\n    FD.append(\"COD\", changeData.COD);\n    FD.append(\"returnDays\", changeData.returnable ? changeData.returnDays : 0);\n    FD.append(\"returnable\", changeData.returnable);\n    FD.append(\"M\", SKU);\n    FD.append(\"polish_time\", changeData.polish_time);\n    FD.append(\"manufacturing_time\", changeData.manufacturing_time);\n    FD.append(\n      \"package_length\",\n      changeData.package_length ? changeData.package_length : 0\n    );\n    FD.append(\n      \"package_height\",\n      changeData.package_height ? changeData.package_height : 0\n    );\n    FD.append(\n      \"package_breadth\",\n      changeData.package_breadth ? changeData.package_breadth : 0\n    );\n    FD.append(\"warehouse\", changeData.warehouse);\n\n    FD.append(\n      \"showroom_price\",\n      changeData.showroom_price ? changeData.showroom_price : 0\n    );\n\n    FD.append(\"discount_limit\", changeData.discount_limit);\n    FD.append(\"selling_price\", changeData.selling_price);\n\n    FD.append(\n      \"mobile_store\",\n      changeData.mobile_store ? changeData.mobile_store : true\n    );\n    FD.append(\n      \"online_store\",\n      changeData.online_store ? changeData.online_store : true\n    );\n    FD.append(\n      \"continue_selling\",\n      changeData.continue_selling ? changeData.continue_selling : true\n    );\n\n    const res = addMergeProduct(FD);\n\n    res\n      .then((data) => {\n        if (data.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          form.setRow((old) => ({\n            ...old,\n            total: old.total + 1,\n            data: [\n              ...form.row,\n              {\n                id: form.row.length + 1,\n                M: data.data.response.M,\n                product_articles: data.data.response.product_articles,\n                product_title: data.data.response.product_title,\n                category_name: data.data.response.category_name,\n                sub_category_name: data.data.response.category_name,\n                category_id: data.data.response.category_id,\n                sub_category_id: data.data.response.category_id,\n                warehouse: data.data.response.warehouse,\n                warehouse_name: data.data.response.warehouse_name,\n                bangalore_stock: data.data.response.bangalore_stock,\n                jodhpur_stock: data.data.response.jodhpur_stock,\n                product_description: data.data.response.product_description,\n                product_image: data.data.response.product_image,\n                featured_image: data.data.response.featured_image,\n                mannequin_image: data.data.response.mannequin_image,\n                specification_image: data.data.response.specification_image,\n                selling_points: data.data.response.selling_points,\n                selling_price: data.data.response.selling_price,\n                showroom_price: data.data.response.showroom_price,\n                discount_limit: data.data.response.discount_limit,\n                mobile_store: data.data.response.mobile_store,\n                online_store: data.data.response.online_store,\n                continue_selling: data.data.response.continue_selling,\n                COD: data.data.response.COD,\n                returnDays: data.data.response.returnDays,\n                returnable: data.data.response.returnable,\n                polish_time: data.data.response.polish_time,\n                manufacturing_time: data.data.response.manufacturing_time,\n                package_length: data.data.response.package_length,\n                package_height: data.data.response.package_height,\n                package_breadth: data.data.response.package_breadth,\n                seo_title: data.data.response.seo_title,\n                seo_description: data.data.response.seo_description,\n                seo_keyword: data.data.response.seo_keyword,\n                action: data.data.response._id,\n              },\n            ],\n          }));\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n  const handleUpdateMergeProduct = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"_id\", form.payload.row.action);\n\n    files.map((element) => {\n      if (element.validate) return FD.append(\"product_image\", element);\n    });\n\n    FD.append(\"specification_image\", changeData.specification_image || \"\");\n    FD.append(\"featured_image\", changeData.featured_image || \"\");\n    FD.append(\"mannequin_image\", changeData.mannequin_image || \"\");\n\n    category.map((item) => {\n      return (\n        item._id === changeData.category_name &&\n        FD.append(\"category_name\", item.category_name)\n      );\n    });\n\n    subCategory.map((item) => {\n      return (\n        item._id === changeData.sub_category_name &&\n        FD.append(\"sub_category_name\", item.sub_category_name)\n      );\n    });\n\n    let Product_SKU = [];\n\n    if (changeData.product_articles.length > 0)\n      Product_SKU = changeData.product_articles.map((SKU) => ({\n        SKU: SKU,\n        qty: changeData[SKU] || 0,\n      }));\n\n    FD.append(\"product_articles\", JSON.stringify(Product_SKU));\n\n    FD.append(\"product_description\", changeData.product_description);\n    FD.append(\"savedImages\", JSON.stringify(changeData.savedImages));\n    FD.append(\"seo_title\", changeData.seo_title);\n    FD.append(\"seo_description\", changeData.seo_description);\n    FD.append(\"seo_keyword\", changeData.seo_keyword);\n    FD.append(\"selling_points\", JSON.stringify(changeData.selling_points));\n\n    if (changeData.jodhpur_stock && changeData.jodhpur_stock > 0)\n      FD.append(\"jodhpur_stock\", changeData.jodhpur_stock);\n\n    if (changeData.bangalore_stock && changeData.bangalore_stock > 0)\n      FD.append(\"bangalore_stock\", changeData.bangalore_stock);\n\n    FD.append(\"category_id\", changeData.category_name);\n    FD.append(\"sub_category_id\", changeData.sub_category_name);\n    FD.append(\"product_title\", changeData.product_title);\n    FD.append(\"COD\", changeData.COD);\n    FD.append(\"returnDays\", changeData.returnable ? changeData.returnDays : 0);\n    FD.append(\"returnable\", changeData.returnable);\n\n    FD.append(\"polish_time\", changeData.polish_time);\n    FD.append(\"manufacturing_time\", changeData.manufacturing_time);\n    FD.append(\n      \"package_length\",\n      changeData.package_length ? changeData.package_length : 0\n    );\n    FD.append(\n      \"package_height\",\n      changeData.package_height ? changeData.package_height : 0\n    );\n    FD.append(\n      \"package_breadth\",\n      changeData.package_breadth ? changeData.package_breadth : 0\n    );\n    FD.append(\"warehouse\", changeData.warehouse);\n\n    FD.append(\n      \"showroom_price\",\n      changeData.showroom_price ? changeData.showroom_price : 0\n    );\n\n    FD.append(\"discount_limit\", changeData.discount_limit);\n    FD.append(\"selling_price\", changeData.selling_price);\n\n    FD.append(\n      \"mobile_store\",\n      changeData.mobile_store ? changeData.mobile_store : true\n    );\n    FD.append(\n      \"online_store\",\n      changeData.online_store ? changeData.online_store : true\n    );\n    FD.append(\n      \"continue_selling\",\n      changeData.continue_selling ? changeData.continue_selling : true\n    );\n\n    const res = updateMergeProduct(FD);\n\n    res\n      .then((data) => {\n        if (data.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          console.log(data.data.updates.product_articles);\n          form.setRow((old) => ({\n            ...old,\n            data: form.row.map((set) => {\n              if (set.action === form.payload.row.action) {\n                set.product_title = changeData.product_title;\n                set.product_articles = data.data.updates.product_articles;\n                set.category_name = data.data.updates.category_name;\n                set.category_id = data.data.updates.category_id;\n                set.sub_category_name = data.data.updates.sub_category_name;\n                set.sub_category_id = data.data.updates.sub_category_id;\n                set.featured_image = data.data.updates.featured_image;\n                set.mannequin_image = data.data.updates.mannequin_image;\n                set.specification_image = data.data.updates.specification_image;\n                set.warehouse = data.data.updates.warehouse;\n                set.warehouse_name = data.data.updates.warehouse_name;\n                set.bangalore_stock = data.data.updates.bangalore_stock;\n                set.jodhpur_stock = data.data.updates.jodhpur_stock;\n                set.product_description = data.data.updates.product_description;\n                set.product_image = data.data.updates.product_image;\n                set.selling_points = data.data.updates.selling_points;\n                set.selling_price = data.data.updates.selling_price;\n                set.showroom_price = data.data.updates.showroom_price;\n                set.discount_limit = data.data.updates.discount_limit;\n                set.mobile_store = data.data.updates.mobile_store;\n                set.online_store = data.data.updates.online_store;\n                set.continue_selling = data.data.updates.continue_selling;\n                set.COD = data.data.updates.COD;\n                set.returnDays = data.data.updates.returnDays;\n                set.returnable = data.data.updates.returnable;\n                set.polish_time = data.data.updates.polish_time;\n                set.manufacturing_time = data.data.updates.manufacturing_time;\n                set.package_length = data.data.updates.package_length;\n                set.package_height = data.data.updates.package_height;\n                set.package_breadth = data.data.updates.package_breadth;\n                set.seo_title = data.data.updates.seo_title;\n                set.seo_description = data.data.updates.seo_description;\n                set.seo_keyword = data.data.updates.seo_keyword;\n                return set;\n              } else return set;\n            }),\n          }));\n\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handlePrimaryMaterial = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", \"Not Assigned \" + SKU);\n    FD.append(\"type\", \"Matrial\");\n    FD.append(\"operation\", \"insertMaterial\");\n\n    Image.map((element) => {\n      return FD.append(\"primaryMaterial_image\", element);\n    });\n    FD.append(\n      \"primaryMaterial_description\",\n      e.target.primaryMaterial_description.value\n    );\n\n    FD.append(\"primaryMaterial_name\", e.target.primaryMaterial_name.value);\n    FD.append(\n      \"primaryMaterial_status\",\n      e.target.primaryMaterial_status.checked\n    );\n    FD.append(\"customizations\", e.target.customizations.checked);\n\n    // // //console.log(acceptedFiles[0].name, e.target.category_name.value)\n\n    // const res = addPrimaryMaterial(FD);\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          // form.setRow([\n          //   ...form.row,\n          //   {\n          //     id: form.row.length + 1,\n          //     primaryMaterial_name: data.data.response.primaryMaterial_name,\n          //     primaryMaterial_description:\n          //       data.data.response.primaryMaterial_description,\n          //     primaryMaterial_image: data.data.response.primaryMaterial_image,\n          //     primaryMaterial_status: data.data.response.primaryMaterial_status,\n          //     action: data.data.response,\n          //   },\n          // ]);\n          // form.setCheck((old) => [\n          //   ...old,\n          //   data.data.response.primaryMaterial_status,\n          // ]);\n          setImages([]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleUpdatePrimaryMaterial = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", form.payload.row.action);\n    FD.append(\"type\", \"Material\");\n    FD.append(\"operation\", \"updateMaterial\");\n\n    FD.append(\"_id\", form.payload.row.action);\n\n    Image.map((element) => {\n      return FD.append(\"primaryMaterial_image\", element);\n    });\n    FD.append(\n      \"primaryMaterial_description\",\n      e.target.primaryMaterial_description.value\n    );\n\n    e.target.primaryMaterial_name.value !== \"\" &&\n      FD.append(\"primaryMaterial_name\", e.target.primaryMaterial_name.value);\n\n    FD.append(\"customizations\", e.target.customizations.checked);\n\n    // const res = editPrimaryMaterial(FD);\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          // form.setRow(\n          //   form.row.map((set) => {\n          //     if (set.action === form.payload.row.action) {\n          //       set.primaryMaterial_description =\n          //         e.target.primaryMaterial_description.value;\n          //       set.primaryMaterial_name = e.target.primaryMaterial_name.value;\n          //       set.customizations = changeData.customizations;\n          //       set.primaryMaterial_image =\n          //         Image[0] !== undefined\n          //           ? `${imageLink}${Image[0].path}`\n          //           : changeData.primaryMaterial_image;\n          //     }\n          //     return set;\n          //   })\n          // );\n          setImages([]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleSupplier = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"supplier_name\", e.target.supplier_name.value);\n    FD.append(\"mobile\", e.target.mobile.value);\n    FD.append(\"gst_no\", e.target.gst_no.value);\n    FD.append(\"alt_mobile\", e.target.alt_mobile.value);\n    FD.append(\"specialization\", e.target.specialization.value);\n    FD.append(\"SID\", e.target.SID.value);\n    FD.append(\"address\", e.target.address.value);\n\n    const res = addSupplier(FD);\n\n    res\n      .then((data) => {\n        //console.log(data.status);\n\n        if (data.status === 200) {\n          form.setRow([\n            ...form.row,\n            {\n              id: form.row.length + 1,\n              supplier_name: data.data.response.supplier_name,\n              mobile: data.data.response.mobile,\n              gst_no: data.data.response.gst_no,\n              alt_mobile: data.data.response.alt_mobile,\n              specialization: data.data.response.specialization,\n              SID: data.data.response.SID,\n              address: data.data.response.address,\n              action: data.data.response._id,\n            },\n          ]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        //console.log(err);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleUpdateSupplier = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n    FD.append(\"_id\", form.payload.row.action);\n\n    FD.append(\"supplier_name\", e.target.supplier_name.value);\n    FD.append(\"mobile\", e.target.mobile.value);\n    FD.append(\"gst_no\", e.target.gst_no.value);\n    FD.append(\"alt_mobile\", e.target.alt_mobile.value);\n    FD.append(\"specialization\", e.target.specialization.value);\n    FD.append(\"SID\", e.target.SID.value);\n    FD.append(\"address\", e.target.address.value);\n\n    const res = editSupplier(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          form.setRow(\n            form.row.map((set) => {\n              if (set.action === form.payload.row.action) {\n                set.supplier_name = e.target.supplier_name.value;\n                set.mobile = e.target.mobile.value;\n                set.gst_no = e.target.gst_no.value;\n                set.alt_mobile = e.target.alt_mobile.value;\n                set.specialization = e.target.specialization.value;\n                set.SID = e.target.SID.value;\n                set.address = e.target.address.value;\n              }\n              return set;\n            })\n          );\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleApplyDiscount = async (e) => {\n    e.preventDefault();\n\n    try {\n      const FD = new FormData();\n\n      console.log(changeData.category_discount);\n      // merge the discount with category name\n\n      let discount_array = [];\n\n      if (changeData.category_discount.length > 0)\n        discount_array = changeData.category_discount.map((name) => ({\n          name: name,\n          discount: changeData[name] || 0,\n        }));\n\n      FD.append(\"discount_array\", JSON.stringify(discount_array));\n\n      const res = await applyDiscount(FD);\n\n      if (res.status === 203) {\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: res.data.message,\n          })\n        );\n      } else {\n        setProductSKU({\n          P_SKU: [],\n          H_SKU: [],\n          supplier: [],\n          category: [],\n        });\n\n        form.setRow(\n          form.row.map((set) => {\n            let response = changeData.category_discount.filter((name) => {\n              return name === set.category_name;\n            });\n            console.log(response);\n            if (response.length > 0)\n              set.discount_limit = changeData[set.category_name];\n            return set;\n          })\n        );\n        handleClose();\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"success\",\n            message: res.data.message,\n          })\n        );\n      }\n    } catch (err) {\n      console.log(err);\n      dispatch(\n        setAlert({\n          open: true,\n          variant: \"error\",\n          message: \"Something Went Wrong !!!\",\n        })\n      );\n    }\n  };\n  const handleInward = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    // merge the Quantities with product SKU number\n\n    let Product_SKU = [];\n    let Hardware_SKU = [];\n\n    if (changeData.product_articles.length > 0)\n      Product_SKU = changeData.product_articles.map((SKU) => ({\n        [SKU]: changeData[SKU] || 0,\n      }));\n\n    if (changeData.hardware_articles.length > 0)\n      Hardware_SKU = changeData.hardware_articles.map((SKU) => ({\n        [SKU]: changeData[SKU] || 0,\n      }));\n\n    FD.append(\"product_articles\", JSON.stringify(Product_SKU));\n    FD.append(\"hardware_articles\", JSON.stringify(Hardware_SKU));\n    FD.append(\"challan_no\", e.target.challan_no.value);\n    FD.append(\"warehouse\", changeData.warehouse);\n    FD.append(\"supplier\", changeData.supplier);\n    FD.append(\"vehicle_no\", e.target.vehicle_no.value.toUpperCase());\n    FD.append(\"driver_name\", e.target.driver_name.value);\n    FD.append(\"driver_no\", e.target.driver_no.value);\n    FD.append(\"purpose\", changeData.purpose);\n\n    const res = addInward(FD);\n\n    res\n      .then((data) => {\n        if (data.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          setProductSKU({\n            P_SKU: [],\n            H_SKU: [],\n            supplier: [],\n            category: [],\n          });\n          form.setRow([\n            ...form.row,\n            {\n              id: form.row.length + 1,\n              inward_id: data.data.response.inward_id,\n              order_no: data.data.response.order_no,\n              driver_name: data.data.response.driver_name,\n              driver_no: data.data.response.driver_no,\n              vehicle_no: data.data.response.vehicle_no,\n              supplier: data.data.response.supplier,\n              product_articles: data.data.response.product_articles,\n              hardware_articles: data.data.response.hardware_articles,\n              warehouse: data.data.response.warehouse,\n              date: data.data.response.date,\n            },\n          ]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n  const handleOutward = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    // merge the Quantities with product SKU number\n    console.log(changeData);\n\n    let Product_SKU = [];\n    let Hardware_SKU = [];\n\n    if (changeData.product_articles.length > 0)\n      Product_SKU = changeData.product_articles.map((SKU) => {\n        let cred = SKU.split(\"Stock :\");\n        return { [cred[0].trim()]: changeData[SKU] || parseInt(cred[1]) };\n      });\n\n    if (changeData.hardware_articles.length > 0)\n      Hardware_SKU = changeData.hardware_articles.map((SKU) => {\n        let cred = SKU.split(\"Stock :\");\n        return { [cred[0].trim()]: changeData[SKU] || parseInt(cred[1]) };\n      });\n\n    FD.append(\"product_articles\", JSON.stringify(Product_SKU));\n    FD.append(\"hardware_articles\", JSON.stringify(Hardware_SKU));\n    FD.append(\"warehouse\", changeData.warehouse);\n    FD.append(\"supplier\", changeData.supplier);\n    FD.append(\"purpose\", changeData.purpose);\n    FD.append(\"reason\", e.target.reason.value);\n    FD.append(\"challan_no\", e.target.challan_no.value);\n    FD.append(\"vehicle_no\", e.target.vehicle_no.value.toUpperCase());\n    FD.append(\"driver_name\", e.target.driver_name.value);\n    FD.append(\"driver_no\", e.target.driver_no.value);\n\n    const res = addOutward(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          setProductSKU({\n            P_SKU: [],\n            H_SKU: [],\n            supplier: [],\n          });\n          form.setRow([\n            ...form.row,\n            {\n              id: form.row.length + 1,\n              outward_id: data.data.response.outward_id,\n              order_no: data.data.response.order_no,\n              driver_name: data.data.response.driver_name,\n              driver_no: data.data.response.driver_no,\n              vehicle_no: data.data.response.vehicle_no,\n              supplier: data.data.response.supplier,\n              product_articles: data.data.response.product_articles,\n              hardware_articles: data.data.response.hardware_articles,\n              warehouse: data.data.response.warehouse,\n              purpose: data.data.response.purpose,\n              reason: data.data.response.reason,\n              date: data.data.response.date,\n            },\n          ]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n  const handleTransfer = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    // merge the Quantities with product SKU number\n\n    let Product_SKU = [];\n    let Hardware_SKU = [];\n\n    if (changeData.product_articles.length > 0)\n      Product_SKU = changeData.product_articles.map((SKU) => {\n        let cred = SKU.split(\"Stock :\");\n        return { [cred[0].trim()]: changeData[SKU] || parseInt(cred[1]) };\n      });\n    if (changeData.hardware_articles.length > 0)\n      Hardware_SKU = changeData.hardware_articles.map((SKU) => {\n        let cred = SKU.split(\"Stock :\");\n        return { [cred[0].trim()]: changeData[SKU] || parseInt(cred[1]) };\n      });\n\n    FD.append(\"product_articles\", JSON.stringify(Product_SKU));\n    FD.append(\"hardware_articles\", JSON.stringify(Hardware_SKU));\n    FD.append(\"purpose\", changeData.purpose);\n    FD.append(\"reason\", e.target.reason.value);\n    FD.append(\"warehouse\", changeData.warehouse);\n    FD.append(\"warehouse_to\", changeData.warehouse_to);\n\n    const res = addTransfer(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          setProductSKU({\n            P_SKU: [],\n            H_SKU: [],\n            supplier: [],\n          });\n          form.setRow([\n            ...form.row,\n            {\n              id: form.row.length + 1,\n              transfer_id: data.data.response.transfer_id,\n              order_no: data.data.response.order_no,\n              warehouse: data.data.response.warehouse,\n              product_articles: data.data.response.product_articles,\n              hardware_articles: data.data.response.hardware_articles,\n              quantity: data.data.response.quantity,\n              purpose: data.data.response.purpose,\n              reason: data.data.response.reason,\n              date: data.data.response.date,\n            },\n          ]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleSubCategories = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", changeData._id);\n    FD.append(\"type\", \"Sub Category\");\n    FD.append(\"operation\", \"insertSubCategory\");\n\n    category.map((item) => {\n      item._id === e.target.category_id.value &&\n        FD.append(\"category_name\", item.category_name);\n    });\n\n    FD.append(\"sub_category_image\", Image[0]);\n    FD.append(\"category_id\", e.target.category_id.value);\n    FD.append(\"sub_category_name\", e.target.sub_category_name.value);\n    FD.append(\"sub_category_status\", e.target.sub_category_status.checked);\n    FD.append(\"seo_title\", changeData.seo_title);\n    FD.append(\"seo_description\", changeData.seo_description);\n    FD.append(\"seo_keyword\", changeData.seo_keyword);\n    FD.append(\"product_description\", changeData.product_description);\n\n    // // //console.log(acceptedFiles[0].name, e.target.category_name.value)\n\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          // form.setRow([\n          //   ...form.row,\n          //   {\n          //     id: form.row.length + 1,\n          //     category_id: data.data.response.category_id,\n          //     category_name: data.data.response.category_name,\n          //     sub_category_image: data.data.response.sub_category_image,\n          //     sub_category_name: data.data.response.sub_category_name,\n          //     sub_category_status: data.data.response.sub_category_status,\n          //     seo_title: data.data.response.seo_title,\n          //     seo_description: data.data.response.seo_description,\n          //     seo_keyword: data.data.response.seo_keyword,\n          //     product_description: data.data.response.product_description,\n          //     action: data.data.response,\n          //   },\n          // ]);\n          // form.setCheck((old) => [\n          //   ...old,\n          //   data.data.response.sub_category_status,\n          // ]);\n          setImages([]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n  const handleUpdateSubCategories = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n    let catName = \"\";\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", changeData._id);\n    FD.append(\"type\", \"Sub Category\");\n    FD.append(\"operation\", \"updateSubCategory\");\n\n    // //console.log(form.payload);\n    Image[0] !== undefined && FD.append(\"sub_category_image\", Image[0]);\n\n    FD.append(\"_id\", changeData._id);\n\n    category.map((item) => {\n      if (item._id === e.target.category_id.value) catName = item.category_name;\n      return (\n        item._id === e.target.category_id.value &&\n        FD.append(\"category_name\", catName)\n      );\n    });\n\n    e.target.category_id.value !== \"\" &&\n      FD.append(\"category_id\", e.target.category_id.value);\n    e.target.sub_category_name.value !== \"\" &&\n      FD.append(\"sub_category_name\", e.target.sub_category_name.value);\n\n    FD.append(\"seo_title\", changeData.seo_title);\n    FD.append(\"seo_description\", changeData.seo_description);\n    FD.append(\"seo_keyword\", changeData.seo_keyword);\n    FD.append(\"product_description\", changeData.product_description);\n\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          // form.setRow(\n          //   form.row.map((set) => {\n          //     if (set.action === form.payload.row.action) {\n          //       set.sub_category_name = e.target.sub_category_name.value;\n          //       set.category_name = catName;\n          //       Image[0] !== undefined\n          //         ? (set.sub_category_image = `https://admin.woodshala.in/upload/${Image[0].path}`)\n          //         : console.log();\n          //       set.seo_title = changeData.seo_title;\n          //       set.seo_description = changeData.seo_description;\n          //       set.seo_keyword = changeData.seo_keyword;\n          //       set.product_description = changeData.product_description;\n          //     }\n          //     return set;\n          //   })\n          // );\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const [url, setUrl] = useState(\"\");\n\n  const handleUpload = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    Image.map((element) => {\n      return FD.append(\"banner_image\", element);\n    });\n\n    const res = uploadImage(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          setImages([]);\n          setUrl(data.data.url);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleAddBlog = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", \"Not Assigned \" + SKU);\n    FD.append(\"type\", \"Blog\");\n    FD.append(\"operation\", \"insertBlog\");\n\n    featured.map((element) => {\n      return FD.append(\"banner_image\", element);\n    });\n\n    FD.append(\"description\", editorRef.current.getContent());\n    FD.append(\"title\", e.target.title.value);\n    FD.append(\"card_description\", e.target.card_description.value);\n    FD.append(\"seo_title\", e.target.seo_title.value);\n    FD.append(\"seo_description\", e.target.seo_description.value);\n    // const res = createBlog(FD);\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          // form.setRow([\n          //   ...form.row,\n          //   {\n          //     id: form.row.length + 1,\n          //     uuid: data.data.response.uuid,\n          //     seo_title: data.data.response.seo_title,\n          //     seo_description: data.data.response.seo_description,\n          //     title: data.data.response.title,\n          //     card_image: data.data.response.card_image,\n          //     card_description: data.data.response.card_description,\n          //     description: data.data.response.description,\n          //     action: data.data.response,\n          //   },\n          // ]);\n          setImages([]);\n          setUrl(data.data.url);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleUpdateBlog = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", form.payload.value._id);\n    FD.append(\"type\", \"Blog\");\n    FD.append(\"operation\", \"updateBlog\");\n\n    featured.map((element) => {\n      return FD.append(\"banner_image\", element);\n    });\n\n    FD.append(\"_id\", form.payload.value._id);\n\n    FD.append(\"description\", editorRef.current.getContent());\n    FD.append(\"title\", e.target.title.value);\n    FD.append(\"seo_title\", e.target.seo_title.value);\n    FD.append(\"seo_description\", e.target.seo_description.value);\n    FD.append(\"card_description\", e.target.card_description.value);\n\n    // const res = updateBlog(FD);\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          // form.setRow(\n          //   form.row.map((set) => {\n          //     if (set.action === form.payload.row.action) {\n          //       set.seo_title = e.target.seo_title.value;\n          //       set.seo_description = e.target.seo_description.value;\n          //       set.title = e.target.title.value;\n          //       set.card_image =\n          //         featured[0] !== undefined\n          //           ? `${imageLink}${Image[0].path}`\n          //           : changeData.card_image;\n          //       set.card_description = e.target.card_description.value;\n          //       set.description =\n          //         editorRef.current.getContent() || set.description;\n          //     }\n          //     return set;\n          //   })\n          // );\n          setImages([]);\n          setUrl(data.data.url);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleOrder = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"products\", changeData.product_array);\n    FD.append(\"OID\", SKU);\n    FD.append(\"status\", \"processing\");\n\n    if (changeData.searchCustomer === \"\") {\n      FD.append(\"customer_name\", e.target.customer_name.value);\n      FD.append(\"customer_email\", e.target.customer_email.value);\n      FD.append(\"customer_mobile\", e.target.customer_mobile.value);\n      FD.append(\"shipping\", e.target.shipping.value);\n      FD.append(\"city\", e.target.city.value);\n      FD.append(\"state\", e.target.state.value);\n    } else FD.append(\"searchCustomer\", changeData.searchCustomer);\n\n    FD.append(\"paid_amount\", e.target.paid_amount.value);\n    FD.append(\"total_amount\", e.target.total_amount.value);\n\n    const res = addOrder(FD);\n\n    res\n      .then((data) => {\n        if (data.status !== 200) {\n          // setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message || \"Something Went Wrong !!!\",\n            })\n          );\n        } else {\n          // setImages([]);\n          // setUrl(data.data.url);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleAddress = (e) => {\n    e.preventDefault();\n    setAddress([\n      ...address,\n      {\n        name: e.target.customer_name.value,\n        mobile: e.target.mobile.value,\n        pincode: e.target.pincode.value,\n        city: e.target.city.value,\n        state: e.target.state.value,\n        shipping: e.target.address.value,\n        type: e.target.type.value,\n      },\n    ]);\n    console.log(address);\n  };\n\n  async function handleHardware(e) {\n    try {\n      e.preventDefault();\n\n      const FD = new FormData();\n\n      FD.append(\"DID\", SKU);\n      FD.append(\"AID\", \"Not Assigned \" + SKU);\n      FD.append(\"type\", \"Hardware\");\n      FD.append(\"operation\", \"insertHardware\");\n\n      files.map((element) => {\n        if (element.validate) return FD.append(\"hardware_image\", element);\n      });\n\n      FD.append(\"specification_image\", changeData.specification_image || \"\");\n      FD.append(\"featured_image\", changeData.featured_image || \"\");\n\n      FD.append(\"status\", changeData.status);\n      FD.append(\"online_store\", changeData.online_store);\n      FD.append(\"mobile_store\", changeData.mobile_store);\n\n      category.map((item) => {\n        return (\n          item._id === changeData.category_name &&\n          FD.append(\"category_name\", item.category_name)\n        );\n      });\n\n      subCategory.map((item) => {\n        return (\n          item._id === changeData.sub_category_name &&\n          FD.append(\"sub_category_name\", item.sub_category_name)\n        );\n      });\n\n      FD.append(\n        \"primary_material_name\",\n        JSON.stringify(changeData.primary_material)\n      );\n      FD.append(\"primary_material\", changeData.primary_material);\n      FD.append(\"discount_limit\", changeData.discount_limit || 0);\n      FD.append(\"tax_rate\", changeData.tax_rate);\n      FD.append(\"restocking_time\", changeData.restocking_time);\n      FD.append(\"selling_points\", JSON.stringify(changeData.selling_points));\n      FD.append(\"seo_title\", changeData.seo_title);\n      FD.append(\"seo_description\", changeData.seo_description);\n      FD.append(\"seo_keyword\", changeData.seo_keyword);\n      FD.append(\"hardware_polish\", changeData.hardware_polish);\n      FD.append(\"min_quantity\", changeData.min_quantity);\n      FD.append(\n        \"continue_selling\",\n        changeData.continue_selling ? changeData.continue_selling : true\n      );\n\n      FD.append(\n        \"returnDays\",\n        changeData.returnable ? changeData.returnDays : 0\n      );\n      FD.append(\"returnable\", changeData.returnable);\n      FD.append(\"COD\", changeData.COD);\n\n      FD.append(\"category_id\", changeData.category_name);\n      FD.append(\"sub_category_id\", changeData.sub_category_name);\n      FD.append(\"polish_time\", changeData.polish_time);\n      FD.append(\"manufacturing_time\", changeData.manufacturing_time);\n      FD.append(\"title\", changeData.title);\n\n      FD.append(\"SKU\", SKU);\n\n      FD.append(\n        \"showroom_price\",\n        changeData.showroom_price ? changeData.showroom_price : 0\n      );\n      FD.append(\"selling_price\", changeData.selling_price);\n      FD.append(\"warehouse\", changeData.warehouse);\n\n      FD.append(\"unit\", changeData.unit);\n      FD.append(\"quantity\", changeData.quantity);\n\n      FD.append(\"weight\", changeData.weight ? changeData.weight : 0);\n\n      FD.append(\n        \"package_weight\",\n        changeData.package_weight ? changeData.package_weight : 0\n      );\n      FD.append(\n        \"package_length\",\n        changeData.package_length ? changeData.package_length : 0\n      );\n      FD.append(\n        \"package_height\",\n        changeData.package_height ? changeData.package_height : 0\n      );\n      FD.append(\n        \"package_breadth\",\n        changeData.package_breadth ? changeData.package_breadth : 0\n      );\n\n      if (changeData.jodhpur_stock && changeData.jodhpur_stock > 0)\n        FD.append(\"jodhpur_stock\", changeData.jodhpur_stock);\n\n      if (changeData.bangalore_stock && changeData.bangalore_stock > 0)\n        FD.append(\"bangalore_stock\", changeData.bangalore_stock);\n\n      const res = await addDraft(FD);\n\n      if (res.status === 203) {\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: res.data.message,\n          })\n        );\n      } else {\n        // form.setRow([\n        //   ...form.row,\n        //   {\n        //     id: form.row.length + 1,\n        //     SKU: data.data.response.SKU,\n        //     title: data.data.response.title,\n        //     category_name: data.data.response.category_name,\n        //     category_id: data.data.response.category_id,\n        //     sub_category_name: data.data.response.sub_category_name,\n        //     sub_category_id: data.data.response.sub_category_id,\n        //     hardware_image: data.data.response.hardware_image,\n        //     warehouse: data.data.response.warehouse,\n        //     bangalore_stock: data.data.response.bangalore_stock,\n        //     jodhpur_stock: data.data.response.jodhpur_stock,\n        //     manufacturing_time: data.data.response.manufacturing_time,\n        //     status: data.data.response.status,\n        //     returnDays: data.data.response.returnDays,\n        //     COD: data.data.response.COD,\n        //     returnable: data.data.response.returnable,\n        //     quantity: data.data.response.quantity,\n        //     package_length: data.data.response.package_length,\n        //     package_height: data.data.response.package_height,\n        //     package_breadth: data.data.response.package_breadth,\n        //     unit: data.data.response.unit,\n        //     range: data.data.response.range,\n        //     action: data.data.response._id,\n        //   },\n        // ]);\n        handleClose();\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"success\",\n            message: res.data.message,\n          })\n        );\n      }\n    } catch (err) {\n      console.log(err);\n      dispatch(\n        setAlert({\n          open: true,\n          variant: \"error\",\n          message: \"Something Went Wrong !!!\",\n        })\n      );\n    }\n  }\n\n  async function handleUpdateHardware(e) {\n    try {\n      e.preventDefault();\n\n      const FD = new FormData();\n\n      FD.append(\"DID\", SKU);\n      FD.append(\"AID\", changeData.SKU);\n      FD.append(\"type\", \"Hardware\");\n      FD.append(\"operation\", \"updateHardware\");\n\n      // console.log(form.payload.row.action);\n\n      FD.append(\"_id\", form.payload.row.action);\n\n      files.map((element) => {\n        if (element.validate) return FD.append(\"hardware_image\", element);\n      });\n      FD.append(\"savedImages\", JSON.stringify(changeData.savedImages));\n\n      FD.append(\"specification_image\", changeData.specification_image);\n      FD.append(\"featured_image\", changeData.featured_image);\n\n      FD.append(\"status\", changeData.status);\n      FD.append(\"online_store\", changeData.online_store);\n      FD.append(\"mobile_store\", changeData.mobile_store);\n\n      FD.append(\n        \"primary_material_name\",\n        JSON.stringify(changeData.primary_material)\n      );\n      FD.append(\"primary_material\", changeData.primary_material);\n\n      let multiOBJ = {};\n\n      category.map((item) => {\n        if (item._id === changeData.category_name)\n          multiOBJ = { ...multiOBJ, category_name: item.category_name };\n\n        return (\n          item._id === changeData.category_name &&\n          FD.append(\"category_name\", item.category_name)\n        );\n      });\n\n      subCategory.map((item) => {\n        if (item._id === changeData.sub_category_name)\n          multiOBJ = { ...multiOBJ, sub_category_name: item.sub_category_name };\n\n        return (\n          item._id === changeData.sub_category_name &&\n          FD.append(\"sub_category_name\", item.sub_category_name)\n        );\n      });\n      FD.append(\"discount_limit\", changeData.discount_limit || 0);\n      FD.append(\"tax_rate\", changeData.tax_rate);\n      FD.append(\"restocking_time\", changeData.restocking_time || 0);\n      FD.append(\"selling_points\", JSON.stringify(changeData.selling_points));\n      FD.append(\"seo_title\", changeData.seo_title);\n      FD.append(\"seo_description\", changeData.seo_description);\n      FD.append(\"seo_keyword\", changeData.seo_keyword);\n      FD.append(\"hardware_polish\", changeData.hardware_polish);\n      FD.append(\"min_quantity\", changeData.min_quantity);\n      FD.append(\n        \"continue_selling\",\n        changeData.continue_selling ? changeData.continue_selling : true\n      );\n\n      FD.append(\n        \"returnDays\",\n        changeData.returnable ? changeData.returnDays : 0\n      );\n      FD.append(\"returnable\", changeData.returnable);\n      FD.append(\"COD\", changeData.COD);\n\n      FD.append(\"category_id\", changeData.category_name);\n      FD.append(\"sub_category_id\", changeData.sub_category_name);\n      FD.append(\"polish_time\", changeData.polish_time);\n      FD.append(\"manufacturing_time\", changeData.manufacturing_time);\n      FD.append(\"title\", changeData.title);\n\n      FD.append(\"SKU\", changeData.SKU);\n\n      FD.append(\n        \"showroom_price\",\n        changeData.showroom_price ? changeData.showroom_price : 0\n      );\n      FD.append(\"selling_price\", changeData.selling_price);\n      FD.append(\"warehouse\", changeData.warehouse);\n\n      FD.append(\"unit\", changeData.unit);\n      FD.append(\"quantity\", changeData.quantity);\n\n      FD.append(\"weight\", changeData.weight ? changeData.weight : 0);\n\n      FD.append(\n        \"package_weight\",\n        changeData.package_weight ? changeData.package_weight : 0\n      );\n      FD.append(\n        \"package_length\",\n        changeData.package_length ? changeData.package_length : 0\n      );\n      FD.append(\n        \"package_height\",\n        changeData.package_height ? changeData.package_height : 0\n      );\n      FD.append(\n        \"package_breadth\",\n        changeData.package_breadth ? changeData.package_breadth : 0\n      );\n\n      if (changeData.jodhpur_stock && changeData.jodhpur_stock > 0)\n        FD.append(\"jodhpur_stock\", changeData.jodhpur_stock);\n\n      if (changeData.bangalore_stock && changeData.bangalore_stock > 0)\n        FD.append(\"bangalore_stock\", changeData.bangalore_stock);\n\n      const res = await addDraft(FD);\n\n      if (res) {\n        if (res.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: res.data.message,\n            })\n          );\n        } else {\n          // form.setRow(\n          //   form.row.map((set) => {\n          //     if (set.action === form.payload.row.action) {\n          //       set.title = changeData.title;\n          //       set.category_name = multiOBJ.category_name;\n          //       set.category_id = changeData.category_id;\n          //       set.sub_category_name = multiOBJ.sub_category_name;\n          //       set.sub_category_id = changeData.sub_category_id;\n          //       set.hardware_image = changeData.hardware_image;\n          //       set.warehouse = changeData.warehouse.join(\",\");\n          //       set.bangalore_stock = changeData.bangalore_stock;\n          //       set.jodhpur_stock = changeData.jodhpur_stock;\n          //       set.manufacturing_time = changeData.manufacturing_time;\n          //       set.status = changeData.status;\n          //       set.returnDays = changeData.returnDays;\n          //       set.COD = changeData.COD;\n          //       set.returnable = changeData.returnable;\n          //       set.quantity = changeData.quantity;\n          //       set.package_length = changeData.package_length;\n          //       set.package_height = changeData.package_height;\n          //       set.package_breadth = changeData.package_breadth;\n          //       set.unit = changeData.unit;\n          //       set.range = changeData.range;\n          //     }\n          //     return set;\n          //   })\n          // );\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: res.data.message,\n            })\n          );\n        }\n      }\n    } catch (err) {\n      console.log(\"error>>\", err);\n      dispatch(\n        setAlert({\n          open: true,\n          variant: \"error\",\n          message: \"Something Went Wrong !!!\",\n        })\n      );\n    }\n  }\n\n  const handlePolish = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", \"Not Assigned \" + SKU);\n    FD.append(\"type\", \"Polish\");\n    FD.append(\"operation\", \"insertPolish\");\n\n    FD.append(\"polish_name\", e.target.polish_name.value);\n    FD.append(\"polish_type\", changeData.polish_type);\n    FD.append(\"polish_finish\", changeData.polish_finish);\n    FD.append(\"level\", changeData.level);\n    FD.append(\"lock\", e.target.lock.checked);\n    FD.append(\"price\", e.target.price.value);\n\n    files.map((element) => {\n      if (element.validate) return FD.append(\"outDoor_image\", element);\n    });\n    Indoor.map((element) => {\n      if (element.validate) return FD.append(\"inDoor_image\", element);\n    });\n\n    // const res = addPolish(FD);\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          // form.setRow([\n          //   ...form.row,\n          //   {\n          //     id: form.row.length + 1,\n          //     polish_name: data.data.response.polish_name,\n          //     polish_type: data.data.response.polish_type,\n          //     polish_finish: data.data.response.polish_finish,\n          //     outDoor_image: data.data.response.outDoor_image,\n          //     inDoor_image: data.data.response.inDoor_image,\n          //     lock: data.data.response.lock,\n          //     price: data.data.response.price,\n          //     action: data.data.response,\n          //   },\n          // ]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n  const handleUpdatePolish = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", changeData._id);\n    FD.append(\"type\", \"Polish\");\n    FD.append(\"operation\", \"updatePolish\");\n\n    FD.append(\"_id\", changeData._id);\n\n    FD.append(\"polish_type\", changeData.polish_type);\n    FD.append(\"polish_finish\", changeData.polish_finish);\n    FD.append(\"level\", changeData.level);\n    FD.append(\"polish_name\", changeData.polish_name);\n    FD.append(\"lock\", changeData.lock);\n    FD.append(\"price\", changeData.price);\n    FD.append(\"savedOutDoor\", JSON.stringify(changeData.savedImages));\n    FD.append(\"savedIndoor\", JSON.stringify(changeData.indoorSavedImage));\n\n    files.map((element) => {\n      if (element.validate) return FD.append(\"outDoor_image\", element);\n    });\n    Indoor.map((element) => {\n      if (element.validate) return FD.append(\"inDoor_image\", element);\n    });\n\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          // form.setRow(\n          //   form.row.map((set) => {\n          //     if (set.action === form.payload.row.action) {\n          //       set.polish_name = changeData.polish_name;\n          //       set.polish_type = changeData.polish_type;\n          //       set.polish_finish = changeData.polish_finish;\n          //       set.level = changeData.level;\n          //       set.outDoor_image = changeData.outDoor_image;\n          //       set.inDoor_image = changeData.inDoor_image;\n          //       set.lock = changeData.lock;\n          //       set.price = changeData.price;\n          //     }\n          //     return set;\n          //   })\n          // );\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        //console.log(err);\n        setImages([]);\n        setIndoor([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  async function handleReview(e) {\n    try {\n      e.preventDefault();\n\n      const FD = new FormData();\n\n      console.log(changeData);\n\n      FD.append(\"product_id\", changeData.product_id);\n      FD.append(\"rating\", changeData.rating);\n      FD.append(\"review\", changeData.review);\n      FD.append(\"review_title\", changeData.review_title);\n      FD.append(\"yourTube_url\", changeData.yourTube_url);\n      FD.append(\"reviewer_name\", changeData.reviewer_name);\n      FD.append(\"reviewer_email\", changeData.reviewer_email);\n      files.map((element) => {\n        if (element.validate) return FD.append(\"review_images\", element);\n      });\n      const res = await addReview(FD);\n      if (res) {\n        //console.log(data.status);\n\n        if (res.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: res.data.message,\n            })\n          );\n        } else {\n          form.setCheck((old) => [...old, true]);\n          form.setRow((old) => ({\n            ...old,\n            data: [\n              ...old.data,\n              {\n                id: old.data.length + 1,\n                CID: res.data.response.CID,\n                product_id: res.data.response.product_id,\n                rating: res.data.response.rating,\n                review: res.data.response.review,\n                admin_reply: res.data.response.admin_reply,\n                review_title: res.data.response.review_title,\n                review_images: res.data.response.review_images,\n                review_videos: res.data.response.review_videos,\n                yourTube_url: res.data.response.yourTube_url,\n                reviewer_name: res.data.response.reviewer_name,\n                reviewer_email: res.data.response.reviewer_email,\n                hide: res.data.response.hide,\n                date: res.data.response.date,\n                action: res.data.response,\n              },\n            ],\n          }));\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: res.data.message,\n            })\n          );\n        }\n      }\n    } catch (err) {\n      //console.log(err);\n      setImages([]);\n      setIndoor([]);\n      dispatch(\n        setAlert({\n          open: true,\n          variant: \"error\",\n          message: \"Something Went Wrong !!!\",\n        })\n      );\n    }\n  }\n  async function handleUpdateReview(e) {\n    try {\n      e.preventDefault();\n\n      const FD = new FormData();\n\n      console.log(changeData);\n\n      FD.append(\"_id\", changeData._id);\n      FD.append(\"rating\", changeData.rating);\n      FD.append(\"review\", changeData.review);\n      FD.append(\"review_title\", changeData.review_title);\n      FD.append(\"yourTube_url\", changeData.yourTube_url);\n      const res = await updateReview(FD);\n      if (res) {\n        //console.log(data.status);\n\n        if (res.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: res.data.message,\n            })\n          );\n        } else {\n          form.setRow((old) => ({\n            ...old,\n            data: old.data.map((row, index) => {\n              console.log(row);\n              if (row.action._id === changeData._id) {\n                row.rating = changeData.rating;\n                row.review = changeData.review;\n                row.review_title = changeData.review_title;\n                row.yourTube_url = changeData.yourTube_url;\n              }\n              return row;\n            }),\n          }));\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: res.data.message,\n            })\n          );\n        }\n      }\n    } catch (err) {\n      console.log(err);\n      setImages([]);\n      setIndoor([]);\n      dispatch(\n        setAlert({\n          open: true,\n          variant: \"error\",\n          message: \"Something Went Wrong !!!\",\n        })\n      );\n    }\n  }\n\n  // load new searchList\n  const handleSupplierList = async (e) => {\n    const delayDebounceFn = setTimeout(() => {\n      getSupplierDropdown(e.target.value)\n        .then((res) => {\n          setProductSKU((old) => ({\n            ...old,\n            supplier: res.data.Suppliers,\n          }));\n        })\n        .catch((err) => {\n          setProductSKU((old) => ({\n            ...old,\n            supplier: [],\n          }));\n        });\n    }, 1000);\n    return () => clearTimeout(delayDebounceFn);\n  };\n  async function handleSearchStockSKU(e) {\n    const delayDebounceFn = setTimeout(() => {\n      getStockSKU({ search: e.target.value, warehouse: changeData.warehouse })\n        .then((res) => {\n          setProductSKU((old) => ({\n            ...old,\n            P_SKU: res.data.P_SKU,\n            H_SKU: res.data.H_SKU,\n          }));\n        })\n        .catch((err) => {\n          setProductSKU((old) => ({\n            ...old,\n            P_SKU: [],\n            H_SKU: [],\n          }));\n        });\n    }, 1000);\n    return () => clearTimeout(delayDebounceFn);\n  }\n  async function handleSearch(e) {\n    const delayDebounceFn = setTimeout(() => {\n      getArticlesId(e.target.value)\n        .then((res) => {\n          setProductSKU((old) => ({\n            ...old,\n            P_SKU: res.data.P_SKU,\n            H_SKU: res.data.H_SKU,\n          }));\n        })\n        .catch((err) => {\n          setProductSKU((old) => ({\n            ...old,\n            P_SKU: [],\n            H_SKU: [],\n          }));\n        });\n    }, 1000);\n    return () => clearTimeout(delayDebounceFn);\n  }\n  async function handleSearchCategory(e) {\n    const delayDebounceFn = setTimeout(() => {\n      getCategoryList(e.target.value)\n        .then((res) => {\n          setProductSKU((old) => ({\n            ...old,\n            category: res.data,\n          }));\n        })\n        .catch((err) => {\n          setProductSKU((old) => ({\n            ...old,\n            category: [],\n          }));\n        });\n    }, 1000);\n    return () => clearTimeout(delayDebounceFn);\n  }\n\n  // function for handling banner\n  async function handleBanner(e) {\n    try {\n      e.preventDefault();\n\n      const FD = new FormData();\n\n      FD.append(\"DID\", SKU);\n      FD.append(\"AID\", \"Not Assigned \" + SKU);\n      FD.append(\"type\", \"Banner\");\n      FD.append(\"operation\", \"addBanner\");\n      FD.append(\"banner_title\", changeData.banner_title);\n      FD.append(\"web_banner\", webBanner[0]);\n      FD.append(\"mobile_banner\", mobileBanner[0]);\n      FD.append(\"mobile_url\", changeData.mobile_url);\n      FD.append(\"web_url\", changeData.web_url);\n      FD.append(\"web_banner_status\", changeData.web_banner_status);\n      FD.append(\"mobile_banner_status\", changeData.mobile_banner_status);\n      FD.append(\"sequence_no\", changeData.sequence_no);\n\n      // // //console.log(acceptedFiles[0].name, e.target.category_name.value)\n\n      const res = await addDraft(FD);\n\n      if (res.status === 203) {\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: res.data.message,\n          })\n        );\n      } else {\n        // form.setRow([\n        //   ...form.row,\n        //   {\n        //     id: form.row.length + 1,\n        //     user_name : res.data.response.user_name,\n        //     email : res.data.response.email,\n        //     mobile : res.data.response.mobile,\n        //     role : res.data.response.role,\n        //     access : res.data.response.access,\n        //     action: res.data.response,\n        //   },\n        // ]);\n        handleClose();\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"success\",\n            message: res.data.message,\n          })\n        );\n      }\n    } catch (err) {\n      console.log(err);\n      dispatch(\n        setAlert({\n          open: true,\n          variant: \"error\",\n          message: \"Something Went Wrong !!!\",\n        })\n      );\n    }\n  }\n  async function handleUpdateBanner(e) {\n    try {\n      e.preventDefault();\n\n      const FD = new FormData();\n\n      FD.append(\"DID\", SKU);\n      FD.append(\"AID\", changeData.uuid);\n      FD.append(\"type\", \"Banner\");\n      FD.append(\"operation\", \"updateBanner\");\n      FD.append(\"banner_title\", changeData.banner_title);\n      webBanner.length > 0 && FD.append(\"web_banner\", webBanner[0]);\n      mobileBanner.length > 0 && FD.append(\"mobile_banner\", mobileBanner[0]);\n      FD.append(\"mobile_url\", changeData.mobile_url);\n      FD.append(\"web_url\", changeData.web_url);\n      FD.append(\"web_banner_status\", changeData.web_banner_status);\n      FD.append(\"mobile_banner_status\", changeData.mobile_banner_status);\n      FD.append(\"sequence_no\", changeData.sequence_no);\n\n      // // //console.log(acceptedFiles[0].name, e.target.category_name.value)\n\n      const res = await addDraft(FD);\n\n      if (res.status === 203) {\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: res.data.message,\n          })\n        );\n      } else {\n        // form.setRow([\n        //   ...form.row,\n        //   {\n        //     id: form.row.length + 1,\n        //     category_name: data.data.response.category_name,\n        //     category_status: data.data.response.category_status,\n        //     category_image: data.data.response.category_image,\n        //     seo_title: data.data.response.seo_title,\n        //     seo_description: data.data.response.seo_description,\n        //     seo_keyword: data.data.response.seo_keyword,\n        //     product_description: data.data.response.product_description,\n        //     action: data.data.response,\n        //   },\n        // ]);\n        // form.setCheck((old) => [...old, data.data.response.category_status]);\n        handleClose();\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"success\",\n            message: res.data.message,\n          })\n        );\n      }\n    } catch (err) {\n      console.log(err);\n      dispatch(\n        setAlert({\n          open: true,\n          variant: \"error\",\n          message: \"Something Went Wrong !!!\",\n        })\n      );\n    }\n  }\n  async function handleUser(e) {\n    try {\n      e.preventDefault();\n\n      const FD = new FormData();\n\n      FD.append(\"user_name\", changeData.user_name);\n      FD.append(\"password\", changeData.password);\n      FD.append(\"email\", changeData.email);\n      FD.append(\"mobile\", changeData.mobile);\n      FD.append(\"role\", changeData.role);\n      FD.append(\"access\", changeData.access);\n\n      // // //console.log(acceptedFiles[0].name, e.target.category_name.value)\n\n      const res = await addUser(FD);\n\n      if (res.status === 203) {\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: res.data.message,\n          })\n        );\n      } else {\n        form.setRow([\n          ...form.row,\n          {\n            id: form.row.length + 1,\n            user_name: res.data.response.user_name,\n            email: res.data.response.email,\n            mobile: res.data.response.mobile,\n            role: res.data.response.role,\n            access: res.data.response.access,\n            action: res.data.response,\n          },\n        ]);\n        handleClose();\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"success\",\n            message: res.data.message,\n          })\n        );\n      }\n    } catch (err) {\n      console.log(err);\n      dispatch(\n        setAlert({\n          open: true,\n          variant: \"error\",\n          message: \"Something Went Wrong !!!\",\n        })\n      );\n    }\n  }\n  async function handleUpdateUser(e) {\n    try {\n      e.preventDefault();\n\n      const FD = new FormData();\n\n      FD.append(\"_id\", changeData._id);\n      FD.append(\"user_name\", changeData.user_name);\n      FD.append(\"email\", changeData.email);\n      FD.append(\"mobile\", changeData.mobile);\n      FD.append(\"role\", changeData.role);\n      FD.append(\"access\", changeData.access);\n\n      const res = await updateUser(FD);\n\n      if (res.status === 203) {\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: res.data.message,\n          })\n        );\n      } else {\n        console.log(changeData.access)\n        form.setRow(\n          form.row.map((set) => {\n            if (set.action === form.payload.row.action) {\n              set.user_name = changeData.user_name;\n              set.email = changeData.email;\n              set.mobile = changeData.mobile;\n              set.role = changeData.role;\n              set.access = changeData.access;\n              set.action = changeData.action;\n            }\n            return set;\n          })\n        );\n        handleClose();\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"success\",\n            message: res.data.message,\n          })\n        );\n      }\n    } catch (err) {\n      console.log(err);\n      dispatch(\n        setAlert({\n          open: true,\n          variant: \"error\",\n          message: \"Something Went Wrong !!!\",\n        })\n      );\n    }\n  }\n\n  return (\n    <>\n      <Slide direction=\"left\" in={form.state} mountOnEnter unmountOnExit>\n        <Backdrop\n          sx={{ zIndex: (theme) => theme.zIndex.drawer + 1 }}\n          open={form.state}\n        >\n          <Box\n            className={\n              mode.type === true ? \"mainDarkContainer\" : \"mainContainer\"\n            }\n            sx={\n              form.formType === \"product\" || form.formType === \"update_product\"\n                ? { width: \"100vw !important\", padding: \"0 5% !important\" }\n                : {}\n            }\n          >\n            <IconButton\n              onClick={handleClose}\n              color=\"primary\"\n              className=\"crossButton\"\n            >\n              <CancelIcon />\n            </IconButton>\n\n            {/* add Products */}\n\n            {form.formType === \"product\" && (\n              <Grid container p={5} className=\"productPadding\">\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Product\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add your product and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleProduct);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <Stepper\n                      className=\"stepper\"\n                      activeStep={activeStep}\n                      orientation=\"vertical\"\n                    >\n                      {/* // Specification */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(0)}\n                        >\n                          Specifications\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // // required\n                              label=\"SKU\"\n                              type=\"text\"\n                              value={SKU}\n                              disabled\n                              variant=\"outlined\"\n                              name=\"SKU\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              required\n                              id=\"outlined-select\"\n                              select\n                              name=\"category_name\"\n                              label=\"Category\"\n                              value={changeData.category_name || \"\"}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your category\"\n                            >\n                              {category.map(\n                                (option) =>\n                                  option.category_status && (\n                                    <MenuItem\n                                      key={option._id}\n                                      value={option._id}\n                                    >\n                                      {option.category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"sub_category_name\"\n                              label=\"Sub Category\"\n                              multiple\n                              value={changeData.sub_category_name || \"\"}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your sub category\"\n                            >\n                              {subCategory.map(\n                                (option) =>\n                                  changeData.category_name ===\n                                    option.category_id && (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option._id}\n                                    >\n                                      {option.sub_category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"product_title\"\n                              value={changeData.product_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Showroom Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"showroom_price\"\n                              value={changeData.showroom_price}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              onChange={(e) => {\n                                handleDiscount(e);\n                                handleProductFields(e);\n                              }}\n                              label=\"Discount Limit\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"discount_limit\"\n                              value={changeData.discount_limit}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // disabled\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Selling Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              value={\n                                // changeData.MRP > 0 &&\n                                //   changeData.discount_limit > 0\n                                //   ? (changeData.selling_price =\n                                //     changeData.MRP -\n                                //     (changeData.MRP / 100) *\n                                //     changeData.discount_limit)\n                                //   : 0\n                                changeData.selling_price\n                              }\n                              onChange={handleProductFields}\n                              variant=\"outlined\"\n                              name=\"selling_price\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Length\"\n                              type=\"number\"\n                              value={changeData.length_main}\n                              onChange={handleProductFields}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"length_main\"\n                              helperText=\"From left to right\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"breadth\"\n                              value={changeData.breadth}\n                              onChange={handleProductFields}\n                              helperText=\"From front to back\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"height\"\n                              value={changeData.height}\n                              onChange={handleProductFields}\n                              helperText=\"From bottom to top\"\n                            />\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Material\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.primary_material}\n                              name=\"primary_material\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                              // MenuProps={MenuProps}\n                            >\n                              {materialCatalog.map((option) => (\n                                <MenuItem\n                                  key={option._id}\n                                  value={option.primaryMaterial_name}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.primary_material.indexOf(\n                                        option.primaryMaterial_name\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText\n                                    primary={option.primaryMaterial_name}\n                                  />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            {/* <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"range\"\n                              label=\"Range\"\n                              multiple\n                              value={changeData.range || \"\"}\n                              onChange={handleProductFields}\n                              helperText=\"Please select the range.\"\n                            >\n                              {rangeCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField> */}\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Polish\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.polish}\n                              name=\"polish\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                              // MenuProps={MenuProps}\n                            >\n                              {catalog.polish.length > 0 &&\n                                catalog.polish.map((option, index) => (\n                                  <MenuItem\n                                    key={option.polish_name}\n                                    value={option.polish_name}\n                                  >\n                                    <Checkbox\n                                      checked={\n                                        changeData.polish.indexOf(\n                                          option.polish_name\n                                        ) > -1\n                                      }\n                                    />\n                                    <ListItemText\n                                      primary={option.polish_name}\n                                    />\n                                  </MenuItem>\n                                ))}\n                            </Select>\n                            {/* \n                            <TextField sx={{ mb : 1 }}\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"polish\"\n                              label=\"Polish\"\n                              value={changeData.polish || \"\"}\n                              onChange={handleProductFields}\n                              multiple\n                              helperText=\"Please select your Polish.\"\n                            >\n                              {polishCatalog.map(\n                                (option) =>\n                                  option.polish_status && (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option._id}\n                                    >\n                                      {option.polish_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField> */}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Assembly\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"assembly_required\"\n                                value={changeData.assembly_required || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"shipping\"\n                                  control={<Radio />}\n                                  label=\"Shipping In Part\"\n                                />\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.assembly_required === \"shipping\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"fullWidth\"\n                                  label=\"Assemble Part\"\n                                  type=\"number\"\n                                  InputProps={{\n                                    startAdornment: (\n                                      <InputAdornment position=\"start\">\n                                        No. of parts\n                                      </InputAdornment>\n                                    ),\n                                  }}\n                                  variant=\"outlined\"\n                                  name=\"assembly_part\"\n                                  value={\n                                    changeData.assembly_part > -1 &&\n                                    changeData.assembly_part < 3\n                                      ? changeData.assembly_part\n                                      : 0\n                                  }\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            {changeData.assembly_required === \"yes\" && (\n                              <>\n                                <TextField\n                                  sx={{ mt: 1, mb: 1 }}\n                                  size=\"small\"\n                                  fullWidth\n                                  // required\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"legs\"\n                                  label=\"Table Legs\"\n                                  value={changeData.legs || \"\"}\n                                  onChange={handleProductFields}\n                                  multiple\n                                  helperText=\"Please select your leg \"\n                                >\n                                  {legCatalog.map((option) => (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option.value}\n                                    >\n                                      {option.label}\n                                    </MenuItem>\n                                  ))}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // required\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"assembly_level\"\n                                  label=\"Assembly Level\"\n                                  value={changeData.assembly_level || \"\"}\n                                  onChange={handleProductFields}\n                                  multiple\n                                  helperText=\"Please select your assembly level \"\n                                >\n                                  {assemblyLevelCatalog.map((option) => (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option.value}\n                                    >\n                                      {option.label}\n                                    </MenuItem>\n                                  ))}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n                              </>\n                            )}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Availability\n                            </FormLabel>\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.mobile_store}\n                                  onChange={handleProductFields}\n                                  name=\"mobile_store\"\n                                  helperText=\"Check it if want it on mobile.\"\n                                />\n                              }\n                              label=\"Mobile Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.online_store}\n                                  onChange={handleProductFields}\n                                  name=\"online_store\"\n                                  helperText=\"Check it if want it on online store.\"\n                                />\n                              }\n                              label=\"Online Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.continue_selling}\n                                  onChange={handleProductFields}\n                                  name=\"continue_selling\"\n                                  helperText=\"Check it if want it to sell when out of Inventory.\"\n                                />\n                              }\n                              label=\"Continue Selling\"\n                            />\n                            {/*                            \n                             <TextField sx = {{mb : 2}}\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"MRP\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"MRP\"\n                              onChange={handleProductFields}\n                              value={changeData.MRP}\n                            /> */}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* // Specification Ends*/}\n\n                      {/* Images */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(1)}\n                        >\n                          Images\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            {/* <AcceptMaxFiles className=\"dorpContainer\"/> */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Images\n                            </FormLabel>\n                            <ProductsPreviews\n                              text={\n                                \"Make Sure the picture ratio should be in 1:1.\"\n                              }\n                            ></ProductsPreviews>\n                            {files.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                <Grid xs={12}>\n                                  <Typography variant=\"h6\">\n                                    Uploaded Images\n                                  </Typography>\n                                </Grid>\n                                {files.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = files;\n                                            console.log(\">>>>>>\", temp, files);\n                                            temp.splice(index, 1);\n                                            setFiles([...temp]);\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={URL.createObjectURL(img)}\n                                          alt={img.name}\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // image Squence  Images */}\n                            {files.length > 0 && (\n                              <ImageSquence\n                                text={\"New Images\"}\n                                image={files}\n                                setImage={setFiles}\n                                savedImage={false}\n                              />\n                            )}\n                            {/* // featured images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"featured_image\"\n                              label=\"Feature Image\"\n                              value={changeData.featured_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Featured Image\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // specification images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"specification_image\"\n                              label=\"Specification Image\"\n                              value={changeData.specification_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your specification image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // Mannequin images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"mannequin_image\"\n                              label=\"Mannequin Image\"\n                              value={changeData.mannequin_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Mannequin Image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Images End */}\n\n                      {/* Features */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(2)}\n                        >\n                          Features\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <FormGroup>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.rotating_seats}\n                                    onChange={handleProductFields}\n                                    name=\"rotating_seats\"\n                                  />\n                                }\n                                label=\"Rotating Seats\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.eatable_oil_polish}\n                                    onChange={handleProductFields}\n                                    name=\"eatable_oil_polish\"\n                                  />\n                                }\n                                label=\"Eatable Oil Polished\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.no_chemical}\n                                    onChange={handleProductFields}\n                                    name=\"no_chemical\"\n                                  />\n                                }\n                                label=\"No Chemical Used\"\n                              />\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.weaving}\n                                    onChange={handleProductFields}\n                                    name=\"weaving\"\n                                  />\n                                }\n                                label=\"Weaving\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={\n                                      changeData.not_suitable_for_Micro_Dish\n                                    }\n                                    onChange={handleProductFields}\n                                    name=\"not_suitable_for_Micro_Dish\"\n                                  />\n                                }\n                                label=\"Not Suitable For Microwave/Dishwasher\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.tilt_top}\n                                    onChange={handleProductFields}\n                                    name=\"tilt_top\"\n                                  />\n                                }\n                                label=\"Tilt Top\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.inside_compartments}\n                                    onChange={handleProductFields}\n                                    name=\"inside_compartments\"\n                                  />\n                                }\n                                label=\"Inside Compartments\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.stackable}\n                                    onChange={handleProductFields}\n                                    name=\"stackable\"\n                                  />\n                                }\n                                label=\"Stackable\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.knife}\n                                    onChange={handleProductFields}\n                                    name=\"knife\"\n                                  />\n                                }\n                                label=\"Knife Friendly Surface\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.wall_hanging}\n                                    onChange={handleProductFields}\n                                    name=\"wall_hanging\"\n                                  />\n                                }\n                                label=\"Wall Hanging\"\n                              />\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.ceramic_drawer_included}\n                                    onChange={handleProductFields}\n                                    name=\"ceramic_drawer_included\"\n                                  />\n                                }\n                                label=\"Ceramic Drawers\"\n                              />\n\n                              {changeData.ceramic_drawer_included && (\n                                <>\n                                  <TextField\n                                    sx={{ mt: 2, mb: 1 }}\n                                    size=\"small\"\n                                    fullWidth\n                                    id=\"outlined-select\"\n                                    select\n                                    name=\"ceramic_drawer\"\n                                    label=\"Ceramic Drawer\"\n                                    multiple\n                                    value={changeData.ceramic_drawer}\n                                    onChange={handleProductFields}\n                                    helperText=\"Please select your Ceramic Tiles.\"\n                                  >\n                                    {catalog.ceramic_drawer.map(\n                                      (option) =>\n                                        option.status && (\n                                          <MenuItem\n                                            key={option.SKU}\n                                            value={option.SKU}\n                                          >\n                                            {option.title}\n                                          </MenuItem>\n                                        )\n                                    )}\n                                    <MenuItem key={\"none\"} value=\"None\">\n                                      {\"None\"}\n                                    </MenuItem>\n                                  </TextField>\n                                  <TextField\n                                    value={changeData.ceramic_drawer_qty}\n                                    onChange={handleProductFields}\n                                    size={\"small\"}\n                                    fullWidth\n                                    label=\"Ceramic Drawer Quantity\"\n                                    type=\"number\"\n                                    helperText=\"Enter the number of ceramic drawer included.\"\n                                    name=\"ceramic_drawer_qty\"\n                                  />\n                                </>\n                              )}\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.ceramic_tiles_included}\n                                    onChange={handleProductFields}\n                                    name=\"ceramic_tiles_included\"\n                                  />\n                                }\n                                label=\"Ceramic Tiles\"\n                              />\n                            </FormGroup>\n                            {changeData.ceramic_tiles_included && (\n                              <>\n                                <TextField\n                                  sx={{ mt: 2, mb: 1 }}\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"ceramic_tiles\"\n                                  label=\"Ceramic Tiles\"\n                                  multiple\n                                  value={changeData.ceramic_tiles}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your Ceramic Tiles.\"\n                                >\n                                  {catalog.ceramic_tiles.map(\n                                    (option) =>\n                                      option.status && (\n                                        <MenuItem\n                                          key={option.SKU}\n                                          value={option.SKU}\n                                        >\n                                          {option.title}\n                                        </MenuItem>\n                                      )\n                                  )}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n                                <TextField\n                                  value={changeData.ceramic_tiles_qty}\n                                  onChange={handleProductFields}\n                                  size={\"small\"}\n                                  fullWidth\n                                  label=\"Ceramic Tiles Quantity\"\n                                  type=\"number\"\n                                  helperText=\"Enter the number of ceramic tiles included.\"\n                                  name=\"ceramic_tiles_qty\"\n                                />\n                              </>\n                            )}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Features ends */}\n\n                      {/* Miscellaneous */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(3)}\n                        >\n                          Miscellaneous\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"back_style\"\n                              label=\"Back Style\"\n                              multiple\n                              value={changeData.back_style || \"\"}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Back Style.\"\n                            >\n                              {backStyleCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"weight_capacity\"\n                              label=\"Weight Capacity\"\n                              multiple\n                              value={changeData.weight_capacity}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Weight Capacity.\"\n                            >\n                              {weightCapCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Drawer\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.drawer || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"drawer\"\n                              >\n                                <FormControlLabel\n                                  value=\"mechanical\"\n                                  control={<Radio />}\n                                  label=\"Mechanical\"\n                                />\n                                <FormControlLabel\n                                  value=\"wooden\"\n                                  control={<Radio />}\n                                  label=\"Wooden\"\n                                />\n                                <FormControlLabel\n                                  value=\"none\"\n                                  control={<Radio />}\n                                  label=\"None\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {(changeData.drawer === \"mechanical\" ||\n                              changeData.drawer === \"wooden\") && (\n                              <TextField\n                                size=\"small\"\n                                fullWidth\n                                type=\"number\"\n                                id=\"outlined-select\"\n                                name=\"drawer_count\"\n                                label=\"Drawer Count\"\n                                value={changeData.drawer_count}\n                                onChange={handleProductFields}\n                              />\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Joints ((Useful in products where info about\n                                joints are shown))\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"joints\"\n                                value={changeData.joints}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"single\"\n                                  control={<Radio />}\n                                  label=\"Single\"\n                                />\n                                <FormControlLabel\n                                  value=\"multi\"\n                                  control={<Radio />}\n                                  label=\"Multiple\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Miscellaneous ends */}\n\n                      {/* Inventory & Shipping */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(4)}\n                        >\n                          Inventory & Shipping\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <FormGroup>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Return & Payment Policy\n                              </FormLabel>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.COD}\n                                    onChange={handleProductFields}\n                                    name=\"COD\"\n                                  />\n                                }\n                                label=\"COD Available\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.returnable}\n                                    onChange={handleProductFields}\n                                    name=\"returnable\"\n                                  />\n                                }\n                                label=\"Return Item\"\n                              />\n                            </FormGroup>\n                            {changeData.returnable && (\n                              <>\n                                <Typography\n                                  component={\"span\"}\n                                  variant=\"Caption\"\n                                >\n                                  {\" \"}\n                                  Return in {changeData.returnDays} Days\n                                </Typography>\n                                <Slider\n                                  aria-label=\"Return Days\"\n                                  defaultValue={0}\n                                  size=\"small\"\n                                  name=\"returnDays\"\n                                  value={changeData.returnDays}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your return days\"\n                                  valueLabelDisplay=\"auto\"\n                                />\n                              </>\n                            )}\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Polish in {changeData.polish_time} Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"Construction Days\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"polish_time\"\n                              value={changeData.polish_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your polish time\"\n                            />\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Manufactured in {\n                                changeData.manufacturing_time\n                              }{\" \"}\n                              Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"Construction Days\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"manufacturing_time\"\n                              value={changeData.manufacturing_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your manufacturing time\"\n                            />\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Stock Warehouse\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.warehouse}\n                              name=\"warehouse\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                            >\n                              {warehouse.map((option) => (\n                                <MenuItem\n                                  key={option.label}\n                                  value={option.value}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.warehouse.indexOf(\n                                        option.value\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText primary={option.value} />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            {changeData.warehouse.map((row) => {\n                              let stock;\n                              row === \"Jodhpur (Rajasthan)\"\n                                ? (stock = \"jodhpur_stock\")\n                                : (stock = \"bangalore_stock\");\n                              return (\n                                <>\n                                  <TextField\n                                    size=\"small\"\n                                    fullWidth\n                                    name={stock}\n                                    label={row + \" Stock\"}\n                                    type=\"number\"\n                                    value={changeData[stock] || \"\"}\n                                    onChange={handleProductFields}\n                                  />\n                                </>\n                              );\n                            })}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Length\"\n                              type=\"number\"\n                              value={changeData.package_length}\n                              onChange={handleProductFields}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_length\"\n                              helperText=\"From left to right\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_breadth\"\n                              value={changeData.package_breadth}\n                              onChange={handleProductFields}\n                              helperText=\"From front to back\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_height\"\n                              value={changeData.package_height}\n                              onChange={handleProductFields}\n                              helperText=\"From bottom to top\"\n                            />\n                            <Box sx={{ display: \"flex\", mb: 1 }}>\n                              <TextField\n                                size=\"small\"\n                                sx={{ width: \"90%\" }}\n                                id=\"fullWidth\"\n                                label=\"Quantity\"\n                                type=\"Number\"\n                                variant=\"outlined\"\n                                name=\"quantity\"\n                                value={changeData.quantity}\n                                onChange={handleProductFields}\n                              />\n\n                              <TextField\n                                id=\"outlined-select-currency\"\n                                select\n                                sx={{ ml: 1, width: \"10%\" }}\n                                size=\"small\"\n                                label=\"Unit\"\n                                name=\"unit\"\n                                value={changeData.unit || \"\"}\n                                onChange={handleProductFields}\n                              >\n                                {unitCatalog.map((option) => (\n                                  <MenuItem\n                                    key={option.value}\n                                    value={option.value}\n                                  >\n                                    {option.label}\n                                  </MenuItem>\n                                ))}\n                              </TextField>\n                            </Box>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Inventory & Shipping End */}\n\n                      {/* SEO */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(5)}\n                        >\n                          SEO\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_title\"\n                              value={changeData.seo_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Description\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_description\"\n                              value={changeData.seo_description}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Keyword\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_keyword\"\n                              value={changeData.seo_keyword}\n                              onChange={handleProductFields}\n                            />\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n                            <Grid container sx={{ mt: 1 }}>\n                              <Grid item xs={12}>\n                                <Grid\n                                  container\n                                  sx={{\n                                    display: \"flex\",\n                                    alignItem: \"center\",\n                                    justifyContent: \"space-between\",\n                                  }}\n                                >\n                                  <Grid item xs={11}>\n                                    <TextField\n                                      fullWidth\n                                      value={changeData.item || \"\"}\n                                      size={\"small\"}\n                                      type=\"text\"\n                                      name=\"item\"\n                                      onChange={handleProductFields}\n                                      label=\"Write a point...\"\n                                    />\n                                  </Grid>\n                                  <Grid item xs={0.8}>\n                                    {changeData.select === undefined ? (\n                                      <Button\n                                        fullWidth\n                                        onClick={() => {\n                                          changeData.item !== \"\" &&\n                                            setData({\n                                              ...changeData,\n                                              selling_points: [\n                                                ...changeData.selling_points,\n                                                changeData.item,\n                                              ],\n                                              item: \"\",\n                                            });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Add\n                                      </Button>\n                                    ) : (\n                                      <Button\n                                        onClick={() => {\n                                          setData({\n                                            ...changeData,\n                                            selling_points:\n                                              changeData.selling_points.filter(\n                                                (row, i) => {\n                                                  return (\n                                                    i !== changeData.select\n                                                  );\n                                                }\n                                              ),\n                                            select: undefined,\n                                          });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Remove\n                                      </Button>\n                                    )}\n                                  </Grid>\n                                </Grid>\n                              </Grid>\n                              {changeData.selling_points.length > 0 && (\n                                <Grid\n                                  sx={{\n                                    maxHeight: \"100px\",\n                                    overflowY: \"scroll\",\n                                    mb: 1,\n                                    border: \"2px solid #91441f\",\n                                    padding: \"7px\",\n                                  }}\n                                  item\n                                  xs={12}\n                                >\n                                  <ul style={{ listStyleType: \"square\" }}>\n                                    {changeData.selling_points &&\n                                      changeData.selling_points.map(\n                                        (item, index) => {\n                                          return (\n                                            <li>\n                                              <Typography\n                                                sx={{ cursor: \"pointer\" }}\n                                                onClick={() => {\n                                                  setData({\n                                                    ...changeData,\n                                                    select: index,\n                                                    item: item,\n                                                  });\n                                                }}\n                                                variant=\"body\"\n                                              >\n                                                {index + 1 + \". \"}\n                                                {item}\n                                              </Typography>\n                                            </li>\n                                          );\n                                        }\n                                      )}\n                                  </ul>\n                                </Grid>\n                              )}\n                            </Grid>\n                            {/* product description  */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Description\n                            </FormLabel>\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"product_description\"\n                              onChange={handleProductFields}\n                              defaultValue={changeData.product_description}\n                              type=\"text\"\n                              helperText=\"Please enter your product description\"\n                            />\n                            {/* <Editor\n                              apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                              onInit={(event, editor) =>\n                                (editorRef.current = editor)\n                              }\n                              init={{\n                                height: 300,\n                                menubar: true,\n                              }}\n                            /> */}\n                            {/* selling points  */}\n                            {/* <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"selling_points\"\n                              defaultValue={\"Selling Points\" || changeData.selling_points}\n                              type=\"text\"\n                              helperText=\"Please enter your selling points.\"\n                            /> */}\n                            {/* <Editor\n                              apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                              onInit={(event, editor) =>\n                                (sellingRef.current = editor)\n                              }\n                              init={{\n                                height: 400,\n                                menubar: true,\n                              }}\n                            /> */}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* SEO End */}\n\n                      {/* Extra-details */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(6)}\n                        >\n                          Extra-Details\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              type=\"number\"\n                              name=\"CVW\"\n                              label=\"CVW Number\"\n                              value={changeData.CVW || \"\"}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Wood Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"wood_weight\"\n                              value={changeData.wood_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\" Metallic Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"metal_weight\"\n                              value={changeData.metal_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Packaging Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_weight\"\n                              value={changeData.package_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"tax_rate\"\n                              label=\"Tax Rate\"\n                              value={changeData.tax_rate}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your tax rate.\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                            >\n                              {taxRateCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Silver\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.silver || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"silver\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.silver === \"yes\" && (\n                              <TextField\n                                size=\"small\"\n                                fullWidth\n                                // autoComplete={false}\n                                id=\"fullWidth\"\n                                label=\"Sliver Weight\"\n                                type=\"text\"\n                                InputProps={{\n                                  startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                      Gram\n                                    </InputAdornment>\n                                  ),\n                                }}\n                                variant=\"outlined\"\n                                name=\"silver_weight\"\n                                value={changeData.silver_weight}\n                                onChange={handleProductFields}\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"hinge\"\n                              label=\"Hinge\"\n                              multiple\n                              value={changeData.hinge}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your hinge.\"\n                            >\n                              {catalog.hinge.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.hinge !== \"None\" && (\n                              <TextField\n                                value={changeData.hinge_qty}\n                                size={\"small\"}\n                                helperText=\"Enter the number of hinges pieces .\"\n                                fullWidth\n                                onChange={handleProductFields}\n                                label=\"Hinge Quantity\"\n                                type=\"number\"\n                                name=\"hinge_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"knob\"\n                              label=\"Knob\"\n                              multiple\n                              value={changeData.knob}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your knob.\"\n                            >\n                              {console.log(catalog)}\n                              {catalog.knob.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.knob !== \"None\" && (\n                              <TextField\n                                size={\"small\"}\n                                fullWidth\n                                helperText=\"Enter the number of knob pieces .\"\n                                value={changeData.knob_qty}\n                                onChange={handleProductFields}\n                                label=\"Knob Quantity\"\n                                type=\"number\"\n                                name=\"knob_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"door\"\n                              label=\"Door\"\n                              multiple\n                              value={changeData.door}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your door.\"\n                            >\n                              {catalog.door.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.door !== \"None\" && (\n                              <TextField\n                                value={changeData.door_qty}\n                                helperText=\"Enter the number of doors.\"\n                                size={\"small\"}\n                                fullWidth\n                                onChange={handleProductFields}\n                                label=\"Door Quantity\"\n                                type=\"number\"\n                                name=\"door_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"handle\"\n                              label=\"Handle\"\n                              multiple\n                              value={changeData.handle}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your handle.\"\n                            >\n                              {catalog.handle.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.handle !== \"None\" && (\n                              <TextField\n                                value={changeData.handle_qty}\n                                helperText=\"Enter the number of handles.\"\n                                onChange={handleProductFields}\n                                size={\"small\"}\n                                fullWidth\n                                label=\"Handle Quantity\"\n                                type=\"number\"\n                                name=\"handle_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              label=\"Fitting\"\n                              name=\"fitting\"\n                              multiple\n                              value={changeData.fitting}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your fitting.\"\n                            >\n                              {catalog.fitting.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Mirror\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"mirror\"\n                                value={changeData.mirror || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.mirror === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // autoComplete={false}\n                                  id=\"fullWidth\"\n                                  label=\"Mirror Length\"\n                                  type=\"text\"\n                                  InputProps={{\n                                    startAdornment: (\n                                      <InputAdornment position=\"start\">\n                                        Inch\n                                      </InputAdornment>\n                                    ),\n                                  }}\n                                  variant=\"outlined\"\n                                  value={changeData.mirror_length}\n                                  onChange={handleProductFields}\n                                  name=\"mirror_length\"\n                                />\n\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // autoComplete={false}\n                                  id=\"fullWidth\"\n                                  label=\"Mirror Width\"\n                                  type=\"text\"\n                                  InputProps={{\n                                    startAdornment: (\n                                      <InputAdornment position=\"start\">\n                                        Inch\n                                      </InputAdornment>\n                                    ),\n                                  }}\n                                  variant=\"outlined\"\n                                  name=\"mirror_width\"\n                                  value={changeData.mirror_width}\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Top Size Length\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"top_size_length\"\n                              value={changeData.top_size_length}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Top Size Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"top_size_breadth\"\n                              value={changeData.top_size_breadth}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Dial Size (Only Applicable on Clock And Clock Containing Items )\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              value={changeData.dial_size}\n                              onChange={handleProductFields}\n                              name=\"dial_size\"\n                            />\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Wheel Included\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"wheel_included\"\n                                value={changeData.wheel_included || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.wheel_included === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"wheel\"\n                                  label=\"Wheel\"\n                                  multiple\n                                  value={changeData.wheel}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your wheel.\"\n                                >\n                                  {catalog.wheel.map(\n                                    (option) =>\n                                      option.status && (\n                                        <MenuItem\n                                          key={option.SKU}\n                                          value={option.SKU}\n                                        >\n                                          {option.title}\n                                        </MenuItem>\n                                      )\n                                  )}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n                                <TextField\n                                  value={changeData.wheel_qty}\n                                  onChange={handleProductFields}\n                                  size={\"small\"}\n                                  fullWidth\n                                  label=\"Wheel Quantity\"\n                                  type=\"number\"\n                                  helperText=\"Enter the number of wheel included.\"\n                                  name=\"wheel_qty\"\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Trolley\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"trolley\"\n                                value={changeData.trolley || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.trolley === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"trolley_material\"\n                                  label=\"Trolly Material\"\n                                  multiple\n                                  value={changeData.trolley_material}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your Trolly Material \"\n                                >\n                                  {trollyMaterial.map((option) => (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option.value}\n                                    >\n                                      {option.label}\n                                    </MenuItem>\n                                  ))}\n                                </TextField>\n                              </>\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Seating Size Width\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"seating_size_width\"\n                              value={changeData.seating_size_width}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Seating Size Width Depth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"seating_size_depth\"\n                              value={changeData.seating_size_depth}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Seating Size Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"seating_size_height\"\n                              value={changeData.seating_size_height}\n                              onChange={handleProductFields}\n                            />\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Plywood Included\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.plywood || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"plywood\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Mattress\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.mattress || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"mattress\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.mattress === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  type=\"number\"\n                                  id=\"outlined-select\"\n                                  name=\"mattress_length\"\n                                  label=\"Mattress Length\"\n                                  value={changeData.mattress_length}\n                                  onChange={handleProductFields}\n                                />\n                                <TextField\n                                  size=\"small\"\n                                  type=\"number\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  name=\"mattress_breadth\"\n                                  label=\"Mattress Breadth\"\n                                  value={changeData.mattress_breadth}\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Cradle Bed\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.cradle_bed || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"cradle_bed\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.cradle_bed === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  type=\"number\"\n                                  id=\"outlined-select\"\n                                  name=\"cradle_bed_height\"\n                                  label=\"Cradle Bed Height\"\n                                  value={changeData.cradle_bed_height}\n                                  onChange={handleProductFields}\n                                />\n                                <TextField\n                                  size=\"small\"\n                                  type=\"number\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  name=\"cradle_bed_width\"\n                                  label=\"Cradle Bed Width\"\n                                  value={changeData.cradle_bed_width}\n                                  onChange={handleProductFields}\n                                />\n                                <TextField\n                                  size=\"small\"\n                                  type=\"number\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  name=\"cradle_bed_depth\"\n                                  label=\"Cradle Bed Depth\"\n                                  value={changeData.cradle_bed_depth}\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Upholstery\n                              </FormLabel>\n                              <RadioGroup\n                                defaultValue=\"no\"\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                // onChange={(e) => {\n                                //   setShowFabric(e.target.value);\n                                // }}\n\n                                value={changeData.upholstery || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"upholstery\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.upholstery === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"fabric\"\n                                  label=\"Fabric\"\n                                  multiple\n                                  value={changeData.fabric}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your fabric.\"\n                                >\n                                  {catalog.fabric.map(\n                                    (option) =>\n                                      option.status && (\n                                        <MenuItem\n                                          key={option.SKU}\n                                          value={option.SKU}\n                                        >\n                                          {option.title}\n                                        </MenuItem>\n                                      )\n                                  )}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n\n                                <TextField\n                                  value={changeData.fabric_qty}\n                                  onChange={handleProductFields}\n                                  size={\"small\"}\n                                  fullWidth\n                                  label=\"Fabric Quantity\"\n                                  type=\"number\"\n                                  helperText=\"Enter the fabric quantity in meter.\"\n                                  name=\"fabric_qty\"\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Vendor URLs\n                              </FormLabel>\n                            </FormControl>\n                            <TextField\n                              type=\"url\"\n                              fullWidth\n                              size=\"small\"\n                              name=\"amazon_url\"\n                              label=\"Amazon\"\n                              onChange={handleProductFields}\n                              value={changeData.amazon_url}\n                              placeholder=\"https://example.com\"\n                              pattern=\"https://.*\"\n                            />\n                            <TextField\n                              type=\"url\"\n                              size=\"small\"\n                              fullWidth\n                              placeholder=\"https://example.com\"\n                              pattern=\"https://.*\"\n                              name=\"flipkart_url\"\n                              label=\"Flipkart\"\n                              onChange={handleProductFields}\n                              value={changeData.flipkart_url}\n                            />\n                            <TextField\n                              type=\"url\"\n                              size=\"small\"\n                              fullWidth\n                              placeholder=\"https://example.com\"\n                              pattern=\"https://.*\"\n                              name=\"jiomart_url\"\n                              label=\"Jio Mart\"\n                              onChange={handleProductFields}\n                              value={changeData.jiomart_url}\n                            />\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Extra-details End */}\n                    </Stepper>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Product\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* add Products Ends */}\n            {/* Update Products */}\n\n            {form.formType === \"update_product\" && (\n              <Grid container p={5} className=\"productPadding\">\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Product\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update your product and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateProduct);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <Stepper\n                      className=\"stepper\"\n                      activeStep={activeStep}\n                      orientation=\"vertical\"\n                    >\n                      {/* // Specification */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(0)}\n                        >\n                          Specifications\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"SKU\"\n                              type=\"text\"\n                              value={changeData.SKU || \"\"}\n                              disabled\n                              variant=\"outlined\"\n                              name=\"SKU\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              required\n                              id=\"outlined-select\"\n                              select\n                              name=\"category_name\"\n                              label=\"Category\"\n                              value={changeData.category_name || \"\"}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your category\"\n                            >\n                              {category.map(\n                                (option) =>\n                                  option.category_status && (\n                                    <MenuItem\n                                      key={option._id}\n                                      value={option._id}\n                                    >\n                                      {option.category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"sub_category_name\"\n                              label=\"Sub Category\"\n                              multiple\n                              value={changeData.sub_category_name || \"\"}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your sub category\"\n                            >\n                              {subCategory.map(\n                                (option) =>\n                                  changeData.category_name ===\n                                    option.category_id && (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option._id}\n                                    >\n                                      {option.sub_category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"product_title\"\n                              value={changeData.product_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Showroom Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"showroom_price\"\n                              value={changeData.showroom_price}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              onChange={(e) => {\n                                handleDiscount(e);\n                                handleProductFields(e);\n                              }}\n                              label=\"Discount Limit\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"discount_limit\"\n                              value={changeData.discount_limit}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // disabled\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Selling Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              value={\n                                // changeData.MRP > 0 &&\n                                //   changeData.discount_limit > 0\n                                //   ? (changeData.selling_price =\n                                //     changeData.MRP -\n                                //     (changeData.MRP / 100) *\n                                //     changeData.discount_limit)\n                                //   : 0\n                                changeData.selling_price\n                              }\n                              onChange={handleProductFields}\n                              variant=\"outlined\"\n                              name=\"selling_price\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Length\"\n                              type=\"number\"\n                              value={changeData.length_main}\n                              onChange={handleProductFields}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"length_main\"\n                              helperText=\"From left to right\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"breadth\"\n                              value={changeData.breadth}\n                              onChange={handleProductFields}\n                              helperText=\"From front to back\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"height\"\n                              value={changeData.height}\n                              onChange={handleProductFields}\n                              helperText=\"From bottom to top\"\n                            />\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Material\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.primary_material || []}\n                              name=\"primary_material\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                              // MenuProps={MenuProps}\n                            >\n                              {materialCatalog.map((option) => (\n                                <MenuItem\n                                  key={option._id}\n                                  value={option.primaryMaterial_name}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.primary_material.indexOf(\n                                        option.primaryMaterial_name\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText\n                                    primary={option.primaryMaterial_name}\n                                  />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            {/* <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"range\"\n                              label=\"Range\"\n                              multiple\n                              value={changeData.range || \"\"}\n                              onChange={handleProductFields}\n                              helperText=\"Please select the range.\"\n                            >\n                              {rangeCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField> */}\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Polish\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.polish || []}\n                              name=\"polish\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                              // MenuProps={MenuProps}\n                            >\n                              {catalog.polish.length > 0 &&\n                                catalog.polish.map((option, index) => (\n                                  <MenuItem\n                                    key={option.polish_name}\n                                    value={option.polish_name}\n                                  >\n                                    <Checkbox\n                                      checked={\n                                        changeData.polish.indexOf(\n                                          option.polish_name\n                                        ) > -1\n                                      }\n                                    />\n                                    <ListItemText\n                                      primary={option.polish_name}\n                                    />\n                                  </MenuItem>\n                                ))}\n                            </Select>\n                            {/* <TextField sx={{ mb : 1 }}\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"polish\"\n                              label=\"Polish\"\n                              value={changeData.polish || \"\"}\n                              onChange={handleProductFields}\n                              multiple\n                              helperText=\"Please select your Polish.\"\n                            >\n                              {polishCatalog.map(\n                                (option) =>\n                                  option.polish_status && (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option._id}\n                                    >\n                                      {option.polish_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField> */}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Assembly\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"assembly_required\"\n                                value={changeData.assembly_required || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"shipping\"\n                                  control={<Radio />}\n                                  label=\"Shipping In Part\"\n                                />\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.assembly_required === \"shipping\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // required\n                                  // autoComplete={false}\n                                  id=\"fullWidth\"\n                                  label=\"Assemble Part\"\n                                  type=\"number\"\n                                  InputProps={{\n                                    startAdornment: (\n                                      <InputAdornment position=\"start\">\n                                        No. of parts\n                                      </InputAdornment>\n                                    ),\n                                  }}\n                                  variant=\"outlined\"\n                                  name=\"assembly_part\"\n                                  value={\n                                    changeData.assembly_part > -1 &&\n                                    changeData.assembly_part < 3\n                                      ? changeData.assembly_part\n                                      : 0\n                                  }\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            {changeData.assembly_required === \"yes\" && (\n                              <>\n                                <TextField\n                                  sx={{ mt: 1, mb: 1 }}\n                                  size=\"small\"\n                                  fullWidth\n                                  // required\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"legs\"\n                                  label=\"Table Legs\"\n                                  value={changeData.legs || \"\"}\n                                  onChange={handleProductFields}\n                                  multiple\n                                  helperText=\"Please select your leg \"\n                                >\n                                  {legCatalog.map((option) => (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option.value}\n                                    >\n                                      {option.label}\n                                    </MenuItem>\n                                  ))}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // required\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"assembly_level\"\n                                  label=\"Assembly Level\"\n                                  value={changeData.assembly_level || \"\"}\n                                  onChange={handleProductFields}\n                                  multiple\n                                  helperText=\"Please select your assembly level \"\n                                >\n                                  {assemblyLevelCatalog.map((option) => (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option.value}\n                                    >\n                                      {option.label}\n                                    </MenuItem>\n                                  ))}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n                              </>\n                            )}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Availability\n                            </FormLabel>\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.mobile_store}\n                                  onChange={handleProductFields}\n                                  name=\"mobile_store\"\n                                  helperText=\"Check it if want it on mobile.\"\n                                />\n                              }\n                              label=\"Mobile Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.online_store}\n                                  onChange={handleProductFields}\n                                  name=\"online_store\"\n                                  helperText=\"Check it if want it on online store.\"\n                                />\n                              }\n                              label=\"Online Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.continue_selling}\n                                  onChange={handleProductFields}\n                                  name=\"continue_selling\"\n                                  helperText=\"Check it if want it to sell when out of Inventory.\"\n                                />\n                              }\n                              label=\"Continue Selling\"\n                            />\n                            {/*                            \n                             <TextField sx = {{mb : 2}}\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"MRP\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"MRP\"\n                              onChange={handleProductFields}\n                              value={changeData.MRP}\n                            /> */}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* // Specification Ends*/}\n\n                      {/* Images */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(1)}\n                        >\n                          Images\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            {/* <AcceptMaxFiles className=\"dorpContainer\"/> */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Images\n                            </FormLabel>\n                            <ProductsPreviews\n                              text={\"Please Drag and Drop the product images\"}\n                            ></ProductsPreviews>\n                            {/* // image selection  */}\n                            {files.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                {files.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = files;\n                                            console.log(\">>>>>>\", temp, files);\n                                            temp.splice(index, 1);\n                                            setFiles([...temp]);\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={URL.createObjectURL(img)}\n                                          alt={img.name}\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // image Squence  Images */}\n                            {files.length > 0 && (\n                              <ImageSquence\n                                text={\"New Images\"}\n                                image={files}\n                                setImage={setFiles}\n                                savedImage={false}\n                              />\n                            )}\n                            {/* saved Image */}\n                            {changeData.savedImages.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                <FormLabel id=\"demo-radio-buttons-group-label\">\n                                  Saved Images\n                                </FormLabel>\n                                {changeData.savedImages.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = changeData.savedImages;\n                                            temp.splice(index, 1);\n                                            setData({\n                                              ...changeData,\n                                              savedImages: temp,\n                                            });\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={img}\n                                          alt=\"productImage\"\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // image Squence saved Images */}\n                            {changeData.savedImages.length > 0 && (\n                              <ImageSquence\n                                text={\"Saved Images\"}\n                                image={changeData.savedImages}\n                                setImage={setData}\n                                savedImage={true}\n                              />\n                            )}\n                            {/* // featured images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"featured_image\"\n                              label=\"Feature Image\"\n                              value={changeData.featured_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Featured Image\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              {/* {console.log(changeData.savedImages)} */}\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // specification images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"specification_image\"\n                              label=\"Specification Image\"\n                              value={changeData.specification_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your specification image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // Mannequin images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"mannequin_image\"\n                              label=\"Mannequin Image\"\n                              value={changeData.mannequin_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Mannequin Image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Images End */}\n\n                      {/* Features */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(2)}\n                        >\n                          Features\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <FormGroup>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.rotating_seats}\n                                    onChange={handleProductFields}\n                                    name=\"rotating_seats\"\n                                  />\n                                }\n                                label=\"Rotating Seats\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.eatable_oil_polish}\n                                    onChange={handleProductFields}\n                                    name=\"eatable_oil_polish\"\n                                  />\n                                }\n                                label=\"Eatable Oil Polished\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.no_chemical}\n                                    onChange={handleProductFields}\n                                    name=\"no_chemical\"\n                                  />\n                                }\n                                label=\"No Chemical Used\"\n                              />\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.weaving}\n                                    onChange={handleProductFields}\n                                    name=\"weaving\"\n                                  />\n                                }\n                                label=\"Weaving\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={\n                                      changeData.not_suitable_for_Micro_Dish\n                                    }\n                                    onChange={handleProductFields}\n                                    name=\"not_suitable_for_Micro_Dish\"\n                                  />\n                                }\n                                label=\"Not Suitable For Microwave/Dishwasher\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.tilt_top}\n                                    onChange={handleProductFields}\n                                    name=\"tilt_top\"\n                                  />\n                                }\n                                label=\"Tilt Top\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.inside_compartments}\n                                    onChange={handleProductFields}\n                                    name=\"inside_compartments\"\n                                  />\n                                }\n                                label=\"Inside Compartments\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.stackable}\n                                    onChange={handleProductFields}\n                                    name=\"stackable\"\n                                  />\n                                }\n                                label=\"Stackable\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.knife}\n                                    onChange={handleProductFields}\n                                    name=\"knife\"\n                                  />\n                                }\n                                label=\"Knife Friendly Surface\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.wall_hanging}\n                                    onChange={handleProductFields}\n                                    name=\"wall_hanging\"\n                                  />\n                                }\n                                label=\"Wall Hanging\"\n                              />\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.ceramic_drawer_included}\n                                    onChange={handleProductFields}\n                                    name=\"ceramic_drawer_included\"\n                                  />\n                                }\n                                label=\"Ceramic Drawers\"\n                              />\n\n                              {changeData.ceramic_drawer_included && (\n                                <>\n                                  <TextField\n                                    sx={{ mt: 2, mb: 1 }}\n                                    size=\"small\"\n                                    fullWidth\n                                    id=\"outlined-select\"\n                                    select\n                                    name=\"ceramic_drawer\"\n                                    label=\"Ceramic Drawer\"\n                                    multiple\n                                    value={changeData.ceramic_drawer}\n                                    onChange={handleProductFields}\n                                    helperText=\"Please select your Ceramic Tiles.\"\n                                  >\n                                    {catalog.ceramic_drawer.map(\n                                      (option) =>\n                                        option.status && (\n                                          <MenuItem\n                                            key={option.SKU}\n                                            value={option.SKU}\n                                          >\n                                            {option.title}\n                                          </MenuItem>\n                                        )\n                                    )}\n                                    <MenuItem key={\"none\"} value=\"None\">\n                                      {\"None\"}\n                                    </MenuItem>\n                                  </TextField>\n                                  <TextField\n                                    value={changeData.ceramic_drawer_qty}\n                                    onChange={handleProductFields}\n                                    size={\"small\"}\n                                    fullWidth\n                                    label=\"Ceramic Drawer Quantity\"\n                                    type=\"number\"\n                                    helperText=\"Enter the number of ceramic drawer included.\"\n                                    name=\"ceramic_drawer_qty\"\n                                  />\n                                </>\n                              )}\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.ceramic_tiles_included}\n                                    onChange={handleProductFields}\n                                    name=\"ceramic_tiles_included\"\n                                  />\n                                }\n                                label=\"Ceramic Tiles\"\n                              />\n                            </FormGroup>\n                            {changeData.ceramic_tiles_included && (\n                              <>\n                                <TextField\n                                  sx={{ mt: 2, mb: 1 }}\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"ceramic_tiles\"\n                                  label=\"Ceramic Tiles\"\n                                  multiple\n                                  value={changeData.ceramic_tiles}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your Ceramic Tiles.\"\n                                >\n                                  {catalog.ceramic_tiles.map(\n                                    (option) =>\n                                      option.status && (\n                                        <MenuItem\n                                          key={option.SKU}\n                                          value={option.SKU}\n                                        >\n                                          {option.title}\n                                        </MenuItem>\n                                      )\n                                  )}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n                                <TextField\n                                  value={changeData.ceramic_tiles_qty}\n                                  onChange={handleProductFields}\n                                  size={\"small\"}\n                                  fullWidth\n                                  label=\"Ceramic Tiles Quantity\"\n                                  type=\"number\"\n                                  helperText=\"Enter the number of ceramic tiles included.\"\n                                  name=\"ceramic_tiles_qty\"\n                                />\n                              </>\n                            )}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Features ends */}\n\n                      {/* Miscellaneous */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(3)}\n                        >\n                          Miscellaneous\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"back_style\"\n                              label=\"Back Style\"\n                              multiple\n                              value={changeData.back_style || \"\"}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Back Style.\"\n                            >\n                              {backStyleCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"weight_capacity\"\n                              label=\"Weight Capacity\"\n                              multiple\n                              value={changeData.weight_capacity}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Weight Capacity.\"\n                            >\n                              {weightCapCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Drawer\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.drawer || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"drawer\"\n                              >\n                                <FormControlLabel\n                                  value=\"mechanical\"\n                                  control={<Radio />}\n                                  label=\"Mechanical\"\n                                />\n                                <FormControlLabel\n                                  value=\"wooden\"\n                                  control={<Radio />}\n                                  label=\"Wooden\"\n                                />\n                                <FormControlLabel\n                                  value=\"none\"\n                                  control={<Radio />}\n                                  label=\"None\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {(changeData.drawer === \"mechanical\" ||\n                              changeData.drawer === \"wooden\") && (\n                              <TextField\n                                size=\"small\"\n                                fullWidth\n                                type=\"number\"\n                                id=\"outlined-select\"\n                                name=\"drawer_count\"\n                                label=\"Drawer Count\"\n                                value={changeData.drawer_count}\n                                onChange={handleProductFields}\n                              />\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Joints ((Useful in products where info about\n                                joints are shown))\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"joints\"\n                                value={changeData.joints}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"single\"\n                                  control={<Radio />}\n                                  label=\"Single\"\n                                />\n                                <FormControlLabel\n                                  value=\"multi\"\n                                  control={<Radio />}\n                                  label=\"Multiple\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Miscellaneous ends */}\n\n                      {/* Inventory & Shipping */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(4)}\n                        >\n                          Inventory & Shipping\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <FormGroup>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Return & Payment Policy\n                              </FormLabel>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.COD}\n                                    onChange={handleProductFields}\n                                    name=\"COD\"\n                                  />\n                                }\n                                label=\"COD Available\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.returnable}\n                                    onChange={handleProductFields}\n                                    name=\"returnable\"\n                                  />\n                                }\n                                label=\"Return Item\"\n                              />\n                            </FormGroup>\n                            {changeData.returnable && (\n                              <>\n                                <Typography\n                                  component={\"span\"}\n                                  variant=\"Caption\"\n                                >\n                                  {\" \"}\n                                  Return in {changeData.returnDays} Days\n                                </Typography>\n                                <Slider\n                                  aria-label=\"Return Days\"\n                                  defaultValue={0}\n                                  size=\"small\"\n                                  name=\"returnDays\"\n                                  value={changeData.returnDays}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your return days\"\n                                  valueLabelDisplay=\"auto\"\n                                />\n                              </>\n                            )}\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Polish in {changeData.polish_time} Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"Construction Days\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"polish_time\"\n                              value={changeData.polish_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your polish time\"\n                            />\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Manufactured in {\n                                changeData.manufacturing_time\n                              }{\" \"}\n                              Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"Construction Days\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"manufacturing_time\"\n                              value={changeData.manufacturing_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your manufacturing time\"\n                            />\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Stock Warehouse\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.warehouse}\n                              name=\"warehouse\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                            >\n                              {warehouse.map((option) => (\n                                <MenuItem\n                                  key={option.label}\n                                  value={option.value}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.warehouse.indexOf(\n                                        option.value\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText primary={option.value} />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            {changeData.warehouse.map((row) => {\n                              let stock;\n                              row === \"Jodhpur (Rajasthan)\"\n                                ? (stock = \"jodhpur_stock\")\n                                : (stock = \"bangalore_stock\");\n                              return (\n                                <>\n                                  <TextField\n                                    size=\"small\"\n                                    fullWidth\n                                    name={stock}\n                                    label={row + \" Stock\"}\n                                    type=\"number\"\n                                    value={changeData[stock] || \"\"}\n                                    onChange={handleProductFields}\n                                  />\n                                </>\n                              );\n                            })}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Length\"\n                              type=\"number\"\n                              value={changeData.package_length}\n                              onChange={handleProductFields}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_length\"\n                              helperText=\"From left to right\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_breadth\"\n                              value={changeData.package_breadth}\n                              onChange={handleProductFields}\n                              helperText=\"From front to back\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_height\"\n                              value={changeData.package_height}\n                              onChange={handleProductFields}\n                              helperText=\"From bottom to top\"\n                            />\n                            <Box sx={{ display: \"flex\", mb: 1 }}>\n                              <TextField\n                                size=\"small\"\n                                sx={{ width: \"90%\" }}\n                                id=\"fullWidth\"\n                                label=\"Quantity\"\n                                type=\"Number\"\n                                variant=\"outlined\"\n                                name=\"quantity\"\n                                value={changeData.quantity}\n                                onChange={handleProductFields}\n                              />\n\n                              <TextField\n                                id=\"outlined-select-currency\"\n                                select\n                                sx={{ ml: 1, width: \"10%\" }}\n                                size=\"small\"\n                                label=\"Unit\"\n                                name=\"unit\"\n                                value={changeData.unit || \"\"}\n                                onChange={handleProductFields}\n                              >\n                                {unitCatalog.map((option) => (\n                                  <MenuItem\n                                    key={option.value}\n                                    value={option.value}\n                                  >\n                                    {option.label}\n                                  </MenuItem>\n                                ))}\n                              </TextField>\n                            </Box>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Inventory & Shipping End */}\n\n                      {/* SEO */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(5)}\n                        >\n                          SEO\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_title\"\n                              value={changeData.seo_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Description\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_description\"\n                              value={changeData.seo_description}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Keyword\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_keyword\"\n                              value={changeData.seo_keyword}\n                              onChange={handleProductFields}\n                            />\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n                            <Grid container sx={{ mt: 1 }}>\n                              <Grid item xs={12}>\n                                <Grid\n                                  container\n                                  sx={{\n                                    display: \"flex\",\n                                    alignItem: \"center\",\n                                    justifyContent: \"space-between\",\n                                  }}\n                                >\n                                  <Grid item xs={11}>\n                                    <TextField\n                                      fullWidth\n                                      value={changeData.item || \"\"}\n                                      size={\"small\"}\n                                      type=\"text\"\n                                      name=\"item\"\n                                      onChange={handleProductFields}\n                                      label=\"Write a point...\"\n                                    />\n                                  </Grid>\n                                  <Grid item xs={0.8}>\n                                    {changeData.select === undefined ? (\n                                      <Button\n                                        fullWidth\n                                        onClick={() => {\n                                          changeData.item !== \"\" &&\n                                            setData({\n                                              ...changeData,\n                                              selling_points: [\n                                                ...changeData.selling_points,\n                                                changeData.item,\n                                              ],\n                                              item: \"\",\n                                            });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Add\n                                      </Button>\n                                    ) : (\n                                      <Button\n                                        onClick={() => {\n                                          setData({\n                                            ...changeData,\n                                            selling_points:\n                                              changeData.selling_points.filter(\n                                                (row, i) => {\n                                                  return (\n                                                    i !== changeData.select\n                                                  );\n                                                }\n                                              ),\n                                            select: undefined,\n                                          });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Remove\n                                      </Button>\n                                    )}\n                                  </Grid>\n                                </Grid>\n                              </Grid>\n                              {changeData.selling_points.length > 0 && (\n                                <Grid\n                                  sx={{\n                                    maxHeight: \"100px\",\n                                    overflowY: \"scroll\",\n                                    mb: 1,\n                                    border: \"2px solid #91441f\",\n                                    padding: \"7px\",\n                                  }}\n                                  item\n                                  xs={12}\n                                >\n                                  <ul style={{ listStyleType: \"square\" }}>\n                                    {changeData.selling_points &&\n                                      changeData.selling_points.map(\n                                        (item, index) => {\n                                          return (\n                                            <li>\n                                              <Typography\n                                                sx={{ cursor: \"pointer\" }}\n                                                onClick={() => {\n                                                  setData({\n                                                    ...changeData,\n                                                    select: index,\n                                                    item: item,\n                                                  });\n                                                }}\n                                                variant=\"body\"\n                                              >\n                                                {index + 1 + \". \"}\n                                                {item}\n                                              </Typography>\n                                            </li>\n                                          );\n                                        }\n                                      )}\n                                  </ul>\n                                </Grid>\n                              )}\n                            </Grid>\n                            {/* product description  */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Description\n                            </FormLabel>\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"product_description\"\n                              onChange={handleProductFields}\n                              defaultValue={changeData.product_description}\n                              type=\"text\"\n                              helperText=\"Please enter your product description\"\n                            />\n                            {/* <Editor\n                              apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                              onInit={(event, editor) =>\n                                (editorRef.current = editor)\n                              }\n                              init={{\n                                height: 300,\n                                menubar: true,\n                              }}\n                            /> */}\n                            {/* selling points  */}\n                            {/* <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"selling_points\"\n                              defaultValue={\"Selling Points\" || changeData.selling_points}\n                              type=\"text\"\n                              helperText=\"Please enter your selling points.\"\n                            /> */}\n                            {/* <Editor\n                              apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                              onInit={(event, editor) =>\n                                (sellingRef.current = editor)\n                              }\n                              init={{\n                                height: 400,\n                                menubar: true,\n                              }}\n                            /> */}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* SEO End */}\n\n                      {/* Extra-details */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(6)}\n                        >\n                          Extra-Details\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              type=\"number\"\n                              name=\"CVW\"\n                              label=\"CVW Number\"\n                              value={changeData.CVW || \"\"}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Wood Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"wood_weight\"\n                              value={changeData.wood_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\" Metallic Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"metal_weight\"\n                              value={changeData.metal_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Packaging Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_weight\"\n                              value={changeData.package_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"tax_rate\"\n                              label=\"Tax Rate\"\n                              value={changeData.tax_rate}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your tax rate.\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                            >\n                              {taxRateCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Silver\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.silver || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"silver\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.silver === \"yes\" && (\n                              <TextField\n                                size=\"small\"\n                                fullWidth\n                                // autoComplete={false}\n                                id=\"fullWidth\"\n                                label=\"Sliver Weight\"\n                                type=\"text\"\n                                InputProps={{\n                                  startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                      Gram\n                                    </InputAdornment>\n                                  ),\n                                }}\n                                variant=\"outlined\"\n                                name=\"silver_weight\"\n                                value={changeData.silver_weight}\n                                onChange={handleProductFields}\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"hinge\"\n                              label=\"Hinge\"\n                              multiple\n                              value={changeData.hinge}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your hinge.\"\n                            >\n                              {catalog.hinge.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.hinge !== \"None\" && (\n                              <TextField\n                                value={changeData.hinge_qty}\n                                size={\"small\"}\n                                helperText=\"Enter the number of hinges pieces .\"\n                                fullWidth\n                                onChange={handleProductFields}\n                                label=\"Hinge Quantity\"\n                                type=\"number\"\n                                name=\"hinge_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"knob\"\n                              label=\"Knob\"\n                              multiple\n                              value={changeData.knob}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your knob.\"\n                            >\n                              {console.log(catalog)}\n                              {catalog.knob.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.knob !== \"None\" && (\n                              <TextField\n                                size={\"small\"}\n                                fullWidth\n                                helperText=\"Enter the number of knob pieces .\"\n                                value={changeData.knob_qty}\n                                onChange={handleProductFields}\n                                label=\"Knob Quantity\"\n                                type=\"number\"\n                                name=\"knob_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"door\"\n                              label=\"Door\"\n                              multiple\n                              value={changeData.door}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your door.\"\n                            >\n                              {catalog.door.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.door !== \"None\" && (\n                              <TextField\n                                value={changeData.door_qty}\n                                helperText=\"Enter the number of doors.\"\n                                size={\"small\"}\n                                fullWidth\n                                onChange={handleProductFields}\n                                label=\"Door Quantity\"\n                                type=\"number\"\n                                name=\"door_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"handle\"\n                              label=\"Handle\"\n                              multiple\n                              value={changeData.handle}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your handle.\"\n                            >\n                              {catalog.handle.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.handle !== \"None\" && (\n                              <TextField\n                                value={changeData.handle_qty}\n                                helperText=\"Enter the number of handles.\"\n                                onChange={handleProductFields}\n                                size={\"small\"}\n                                fullWidth\n                                label=\"Handle Quantity\"\n                                type=\"number\"\n                                name=\"handle_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              label=\"Fitting\"\n                              name=\"fitting\"\n                              multiple\n                              value={changeData.fitting}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your fitting.\"\n                            >\n                              {catalog.fitting.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Mirror\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"mirror\"\n                                value={changeData.mirror || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.mirror === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // autoComplete={false}\n                                  id=\"fullWidth\"\n                                  label=\"Mirror Length\"\n                                  type=\"text\"\n                                  InputProps={{\n                                    startAdornment: (\n                                      <InputAdornment position=\"start\">\n                                        Inch\n                                      </InputAdornment>\n                                    ),\n                                  }}\n                                  variant=\"outlined\"\n                                  value={changeData.mirror_length}\n                                  onChange={handleProductFields}\n                                  name=\"mirror_length\"\n                                />\n\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // autoComplete={false}\n                                  id=\"fullWidth\"\n                                  label=\"Mirror Width\"\n                                  type=\"text\"\n                                  InputProps={{\n                                    startAdornment: (\n                                      <InputAdornment position=\"start\">\n                                        Inch\n                                      </InputAdornment>\n                                    ),\n                                  }}\n                                  variant=\"outlined\"\n                                  name=\"mirror_width\"\n                                  value={changeData.mirror_width}\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Top Size Length\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"top_size_length\"\n                              value={changeData.top_size_length}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Top Size Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"top_size_breadth\"\n                              value={changeData.top_size_breadth}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Dial Size (Only Applicable on Clock And Clock Containing Items )\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              value={changeData.dial_size}\n                              onChange={handleProductFields}\n                              name=\"dial_size\"\n                            />\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Wheel Included\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"wheel_included\"\n                                value={changeData.wheel_included || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.wheel_included === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"wheel\"\n                                  label=\"Wheel\"\n                                  multiple\n                                  value={changeData.wheel}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your wheel.\"\n                                >\n                                  {catalog.wheel.map(\n                                    (option) =>\n                                      option.status && (\n                                        <MenuItem\n                                          key={option.SKU}\n                                          value={option.SKU}\n                                        >\n                                          {option.title}\n                                        </MenuItem>\n                                      )\n                                  )}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n                                <TextField\n                                  value={changeData.wheel_qty}\n                                  onChange={handleProductFields}\n                                  size={\"small\"}\n                                  fullWidth\n                                  label=\"Wheel Quantity\"\n                                  type=\"number\"\n                                  helperText=\"Enter the number of wheel included.\"\n                                  name=\"wheel_qty\"\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Trolley\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"trolley\"\n                                value={changeData.trolley || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.trolley === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"trolley_material\"\n                                  label=\"Trolly Material\"\n                                  multiple\n                                  value={changeData.trolley_material}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your Trolly Material \"\n                                >\n                                  {trollyMaterial.map((option) => (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option.value}\n                                    >\n                                      {option.label}\n                                    </MenuItem>\n                                  ))}\n                                </TextField>\n                              </>\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Seating Size Width\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"seating_size_width\"\n                              value={changeData.seating_size_width}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Seating Size Width Depth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"seating_size_depth\"\n                              value={changeData.seating_size_depth}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Seating Size Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"seating_size_height\"\n                              value={changeData.seating_size_height}\n                              onChange={handleProductFields}\n                            />\n                            {/* \n                          <FormControl>\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Textile\n                            </FormLabel>\n                            <RadioGroup\n                              sx={{ mb : 1 }}\n\n                              aria-labelledby=\"demo-radio-buttons-group-label\"\n                              value={changeData.textile || \"no\"}\n                              onChange={handleProductFields}\n                              name=\"textile\"\n                            >\n                              <FormControlLabel\n                                value=\"yes\"\n                                control={<Radio />}\n                                label=\"Yes\"\n                              />\n                              <FormControlLabel\n                                value=\"no\"\n                                control={<Radio />}\n                                label=\"No\"\n                              />\n                            </RadioGroup>\n                          </FormControl>\n\n\n                          {changeData.textile === \"yes\" && (\n                            <TextField sx={{ mb : 1 }}\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"textile_type\"\n                              label=\"Textile\"\n                              value={changeData.textile_type}\n                              onChange={handleProductFields}\n                              multiple\n                              helperText=\"Please select your textile.\"\n                            >\n                              {catalog.textile.map(\n                                (option) => option.status && <MenuItem\n                                  key={option.SKU}\n                                  value={option.SKU}\n                                >\n                                  {option.title}\n                                </MenuItem>\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          )}\n\n                            */}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Plywood Included\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.plywood || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"plywood\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Mattress\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.mattress || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"mattress\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.mattress === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  type=\"number\"\n                                  id=\"outlined-select\"\n                                  name=\"mattress_length\"\n                                  label=\"Mattress Length\"\n                                  value={changeData.mattress_length}\n                                  onChange={handleProductFields}\n                                />\n                                <TextField\n                                  size=\"small\"\n                                  type=\"number\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  name=\"mattress_breadth\"\n                                  label=\"Mattress Breadth\"\n                                  value={changeData.mattress_breadth}\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Cradle Bed\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.cradle_bed || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"cradle_bed\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.cradle_bed === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  type=\"number\"\n                                  id=\"outlined-select\"\n                                  name=\"cradle_bed_height\"\n                                  label=\"Cradle Bed Height\"\n                                  value={changeData.cradle_bed_height}\n                                  onChange={handleProductFields}\n                                />\n                                <TextField\n                                  size=\"small\"\n                                  type=\"number\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  name=\"cradle_bed_width\"\n                                  label=\"Cradle Bed Width\"\n                                  value={changeData.cradle_bed_width}\n                                  onChange={handleProductFields}\n                                />\n                                <TextField\n                                  size=\"small\"\n                                  type=\"number\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  name=\"cradle_bed_depth\"\n                                  label=\"Cradle Bed Depth\"\n                                  value={changeData.cradle_bed_depth}\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Upholstery\n                              </FormLabel>\n                              <RadioGroup\n                                defaultValue=\"no\"\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                // onChange={(e) => {\n                                //   setShowFabric(e.target.value);\n                                // }}\n\n                                value={changeData.upholstery || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"upholstery\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.upholstery === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"fabric\"\n                                  label=\"Fabric\"\n                                  multiple\n                                  value={changeData.fabric}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your fabric.\"\n                                >\n                                  {catalog.fabric.map(\n                                    (option) =>\n                                      option.status && (\n                                        <MenuItem\n                                          key={option.SKU}\n                                          value={option.SKU}\n                                        >\n                                          {option.title}\n                                        </MenuItem>\n                                      )\n                                  )}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n\n                                <TextField\n                                  value={changeData.fabric_qty}\n                                  onChange={handleProductFields}\n                                  size={\"small\"}\n                                  fullWidth\n                                  label=\"Fabric Quantity\"\n                                  type=\"number\"\n                                  helperText=\"Enter the fabric quantity in meter.\"\n                                  name=\"fabric_qty\"\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Vendor URLs\n                              </FormLabel>\n                            </FormControl>\n                            <TextField\n                              type=\"url\"\n                              fullWidth\n                              size=\"small\"\n                              name=\"amazon_url\"\n                              label=\"Amazon\"\n                              onChange={handleProductFields}\n                              value={changeData.amazon_url || \"\"}\n                              placeholder=\"https://example.com\"\n                              pattern=\"https://.*\"\n                            />\n                            <TextField\n                              type=\"url\"\n                              size=\"small\"\n                              fullWidth\n                              placeholder=\"https://example.com\"\n                              pattern=\"https://.*\"\n                              name=\"flipkart_url\"\n                              label=\"Flipkart\"\n                              onChange={handleProductFields}\n                              value={changeData.flipkart_url || \"\"}\n                            />\n                            <TextField\n                              type=\"url\"\n                              size=\"small\"\n                              fullWidth\n                              placeholder=\"https://example.com\"\n                              pattern=\"https://.*\"\n                              name=\"jiomart_url\"\n                              label=\"Jio Mart\"\n                              onChange={handleProductFields}\n                              value={changeData.jiomart_url || \"\"}\n                            />\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Extra-details End */}\n                    </Stepper>\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Product\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* update Products Ends */}\n            {/* Variation Products */}\n\n            {form.formType === \"variation\" && (\n              <Grid container p={5} className=\"productPadding\">\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Create Variation\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add variation of product and necessary information from\n                      here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleVariation);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <Stepper\n                      className=\"stepper\"\n                      activeStep={activeStep}\n                      orientation=\"vertical\"\n                    >\n                      {/* // Specification */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(0)}\n                        >\n                          Specifications\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              disabled\n                              id=\"fullWidth\"\n                              required\n                              label=\"ACIN Number\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"ACIN\"\n                              value={changeData.ACIN}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // // required\n                              label=\"SKU\"\n                              type=\"text\"\n                              value={SKU}\n                              disabled\n                              variant=\"outlined\"\n                              name=\"SKU\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              required\n                              id=\"outlined-select\"\n                              select\n                              name=\"category_name\"\n                              label=\"Category\"\n                              value={changeData.category_name || \"\"}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your category\"\n                            >\n                              {category.map(\n                                (option) =>\n                                  option.category_status && (\n                                    <MenuItem\n                                      key={option._id}\n                                      value={option._id}\n                                    >\n                                      {option.category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"sub_category_name\"\n                              label=\"Sub Category\"\n                              multiple\n                              value={changeData.sub_category_name || \"\"}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your sub category\"\n                            >\n                              {subCategory.map(\n                                (option) =>\n                                  changeData.category_name ===\n                                    option.category_id && (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option._id}\n                                    >\n                                      {option.sub_category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"product_title\"\n                              value={changeData.product_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Showroom Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"showroom_price\"\n                              value={changeData.showroom_price}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              onChange={(e) => {\n                                handleDiscount(e);\n                                handleProductFields(e);\n                              }}\n                              label=\"Discount Limit\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"discount_limit\"\n                              value={changeData.discount_limit}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // disabled\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Selling Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              value={\n                                // changeData.MRP > 0 &&\n                                //   changeData.discount_limit > 0\n                                //   ? (changeData.selling_price =\n                                //     changeData.MRP -\n                                //     (changeData.MRP / 100) *\n                                //     changeData.discount_limit)\n                                //   : 0\n                                changeData.selling_price\n                              }\n                              onChange={handleProductFields}\n                              variant=\"outlined\"\n                              name=\"selling_price\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Length\"\n                              type=\"number\"\n                              value={changeData.length_main}\n                              onChange={handleProductFields}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"length_main\"\n                              helperText=\"From left to right\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"breadth\"\n                              value={changeData.breadth}\n                              onChange={handleProductFields}\n                              helperText=\"From front to back\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"height\"\n                              value={changeData.height}\n                              onChange={handleProductFields}\n                              helperText=\"From bottom to top\"\n                            />\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Material\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.primary_material || []}\n                              name=\"primary_material\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                              // MenuProps={MenuProps}\n                            >\n                              {materialCatalog.map((option) => (\n                                <MenuItem\n                                  key={option._id}\n                                  value={option.primaryMaterial_name}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.primary_material.indexOf(\n                                        option.primaryMaterial_name\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText\n                                    primary={option.primaryMaterial_name}\n                                  />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            {/* <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"range\"\n                              label=\"Range\"\n                              multiple\n                              value={changeData.range || \"\"}\n                              onChange={handleProductFields}\n                              helperText=\"Please select the range.\"\n                            >\n                              {rangeCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField> */}\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Polish\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.polish || []}\n                              name=\"polish\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                              // MenuProps={MenuProps}\n                            >\n                              {catalog.polish.length > 0 &&\n                                catalog.polish.map((option, index) => (\n                                  <MenuItem\n                                    key={option.polish_name}\n                                    value={option.polish_name}\n                                  >\n                                    <Checkbox\n                                      checked={\n                                        changeData.polish.indexOf(\n                                          option.polish_name\n                                        ) > -1\n                                      }\n                                    />\n                                    <ListItemText\n                                      primary={option.polish_name}\n                                    />\n                                  </MenuItem>\n                                ))}\n                            </Select>\n                            {/* <TextField sx={{ mb : 1 }}\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"polish\"\n                              label=\"Polish\"\n                              value={changeData.polish || \"\"}\n                              onChange={handleProductFields}\n                              multiple\n                              helperText=\"Please select your Polish.\"\n                            >\n                              {polishCatalog.map(\n                                (option) =>\n                                  option.polish_status && (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option._id}\n                                    >\n                                      {option.polish_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField> */}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Assembly\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"assembly_required\"\n                                value={changeData.assembly_required || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"shipping\"\n                                  control={<Radio />}\n                                  label=\"Shipping In Part\"\n                                />\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.assembly_required === \"shipping\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // required\n                                  // autoComplete={false}\n                                  id=\"fullWidth\"\n                                  label=\"Assemble Part\"\n                                  type=\"number\"\n                                  InputProps={{\n                                    startAdornment: (\n                                      <InputAdornment position=\"start\">\n                                        No. of parts\n                                      </InputAdornment>\n                                    ),\n                                  }}\n                                  variant=\"outlined\"\n                                  name=\"assembly_part\"\n                                  value={\n                                    changeData.assembly_part > -1 &&\n                                    changeData.assembly_part < 3\n                                      ? changeData.assembly_part\n                                      : 0\n                                  }\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            {changeData.assembly_required === \"yes\" && (\n                              <>\n                                <TextField\n                                  sx={{ mt: 1, mb: 1 }}\n                                  size=\"small\"\n                                  fullWidth\n                                  // required\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"legs\"\n                                  label=\"Table Legs\"\n                                  value={changeData.legs || \"\"}\n                                  onChange={handleProductFields}\n                                  multiple\n                                  helperText=\"Please select your leg \"\n                                >\n                                  {legCatalog.map((option) => (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option.value}\n                                    >\n                                      {option.label}\n                                    </MenuItem>\n                                  ))}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // required\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"assembly_level\"\n                                  label=\"Assembly Level\"\n                                  value={changeData.assembly_level || \"\"}\n                                  onChange={handleProductFields}\n                                  multiple\n                                  helperText=\"Please select your assembly level \"\n                                >\n                                  {assemblyLevelCatalog.map((option) => (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option.value}\n                                    >\n                                      {option.label}\n                                    </MenuItem>\n                                  ))}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n                              </>\n                            )}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Availability\n                            </FormLabel>\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.mobile_store}\n                                  onChange={handleProductFields}\n                                  name=\"mobile_store\"\n                                  helperText=\"Check it if want it on mobile.\"\n                                />\n                              }\n                              label=\"Mobile Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.online_store}\n                                  onChange={handleProductFields}\n                                  name=\"online_store\"\n                                  helperText=\"Check it if want it on online store.\"\n                                />\n                              }\n                              label=\"Online Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.continue_selling}\n                                  onChange={handleProductFields}\n                                  name=\"continue_selling\"\n                                  helperText=\"Check it if want it to sell when out of Inventory.\"\n                                />\n                              }\n                              label=\"Continue Selling\"\n                            />\n                            {/*                            \n                             <TextField sx = {{mb : 2}}\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"MRP\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"MRP\"\n                              onChange={handleProductFields}\n                              value={changeData.MRP}\n                            /> */}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* // Specification Ends*/}\n\n                      {/* Images */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(1)}\n                        >\n                          Images\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            {/* <AcceptMaxFiles className=\"dorpContainer\"/> */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Images\n                            </FormLabel>\n                            <ProductsPreviews\n                              text={\"Please Drag and Drop the product images\"}\n                            ></ProductsPreviews>\n                            {/* // image selection  */}\n                            {files.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                {files.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = files;\n                                            console.log(\">>>>>>\", temp, files);\n                                            temp.splice(index, 1);\n                                            setFiles([...temp]);\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={URL.createObjectURL(img)}\n                                          alt={img.name}\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // image Squence  Images */}\n                            {files.length > 0 && (\n                              <ImageSquence\n                                text={\"New Images\"}\n                                image={files}\n                                setImage={setFiles}\n                                savedImage={false}\n                              />\n                            )}\n                            {/* saved Image */}\n                            {changeData.savedImages.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                <FormLabel id=\"demo-radio-buttons-group-label\">\n                                  Saved Images\n                                </FormLabel>\n                                {changeData.savedImages.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = changeData.savedImages;\n                                            temp.splice(index, 1);\n                                            setData({\n                                              ...changeData,\n                                              savedImages: temp,\n                                            });\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={img}\n                                          alt=\"productImage\"\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // image Squence saved Images */}\n                            {changeData.savedImages.length > 0 && (\n                              <ImageSquence\n                                text={\"Saved Images\"}\n                                image={changeData.savedImages}\n                                setImage={setData}\n                                savedImage={true}\n                              />\n                            )}\n                            {/* // featured images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"featured_image\"\n                              label=\"Feature Image\"\n                              value={changeData.featured_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Featured Image\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              {/* {console.log(changeData.savedImages)} */}\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // specification images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"specification_image\"\n                              label=\"Specification Image\"\n                              value={changeData.specification_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your specification image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // Mannequin images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"mannequin_image\"\n                              label=\"Mannequin Image\"\n                              value={changeData.mannequin_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Mannequin Image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Images End */}\n\n                      {/* Features */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(2)}\n                        >\n                          Features\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <FormGroup>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.rotating_seats}\n                                    onChange={handleProductFields}\n                                    name=\"rotating_seats\"\n                                  />\n                                }\n                                label=\"Rotating Seats\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.eatable_oil_polish}\n                                    onChange={handleProductFields}\n                                    name=\"eatable_oil_polish\"\n                                  />\n                                }\n                                label=\"Eatable Oil Polished\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.no_chemical}\n                                    onChange={handleProductFields}\n                                    name=\"no_chemical\"\n                                  />\n                                }\n                                label=\"No Chemical Used\"\n                              />\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.weaving}\n                                    onChange={handleProductFields}\n                                    name=\"weaving\"\n                                  />\n                                }\n                                label=\"Weaving\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={\n                                      changeData.not_suitable_for_Micro_Dish\n                                    }\n                                    onChange={handleProductFields}\n                                    name=\"not_suitable_for_Micro_Dish\"\n                                  />\n                                }\n                                label=\"Not Suitable For Microwave/Dishwasher\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.tilt_top}\n                                    onChange={handleProductFields}\n                                    name=\"tilt_top\"\n                                  />\n                                }\n                                label=\"Tilt Top\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.inside_compartments}\n                                    onChange={handleProductFields}\n                                    name=\"inside_compartments\"\n                                  />\n                                }\n                                label=\"Inside Compartments\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.stackable}\n                                    onChange={handleProductFields}\n                                    name=\"stackable\"\n                                  />\n                                }\n                                label=\"Stackable\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.knife}\n                                    onChange={handleProductFields}\n                                    name=\"knife\"\n                                  />\n                                }\n                                label=\"Knife Friendly Surface\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.wall_hanging}\n                                    onChange={handleProductFields}\n                                    name=\"wall_hanging\"\n                                  />\n                                }\n                                label=\"Wall Hanging\"\n                              />\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.ceramic_drawer_included}\n                                    onChange={handleProductFields}\n                                    name=\"ceramic_drawer_included\"\n                                  />\n                                }\n                                label=\"Ceramic Drawers\"\n                              />\n\n                              {changeData.ceramic_drawer_included && (\n                                <>\n                                  <TextField\n                                    sx={{ mt: 2, mb: 1 }}\n                                    size=\"small\"\n                                    fullWidth\n                                    id=\"outlined-select\"\n                                    select\n                                    name=\"ceramic_drawer\"\n                                    label=\"Ceramic Drawer\"\n                                    multiple\n                                    value={changeData.ceramic_drawer}\n                                    onChange={handleProductFields}\n                                    helperText=\"Please select your Ceramic Tiles.\"\n                                  >\n                                    {catalog.ceramic_drawer.map(\n                                      (option) =>\n                                        option.status && (\n                                          <MenuItem\n                                            key={option.SKU}\n                                            value={option.SKU}\n                                          >\n                                            {option.title}\n                                          </MenuItem>\n                                        )\n                                    )}\n                                    <MenuItem key={\"none\"} value=\"None\">\n                                      {\"None\"}\n                                    </MenuItem>\n                                  </TextField>\n                                  <TextField\n                                    value={changeData.ceramic_drawer_qty}\n                                    onChange={handleProductFields}\n                                    size={\"small\"}\n                                    fullWidth\n                                    label=\"Ceramic Drawer Quantity\"\n                                    type=\"number\"\n                                    helperText=\"Enter the number of ceramic drawer included.\"\n                                    name=\"ceramic_drawer_qty\"\n                                  />\n                                </>\n                              )}\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.ceramic_tiles_included}\n                                    onChange={handleProductFields}\n                                    name=\"ceramic_tiles_included\"\n                                  />\n                                }\n                                label=\"Ceramic Tiles\"\n                              />\n                            </FormGroup>\n                            {changeData.ceramic_tiles_included && (\n                              <>\n                                <TextField\n                                  sx={{ mt: 2, mb: 1 }}\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"ceramic_tiles\"\n                                  label=\"Ceramic Tiles\"\n                                  multiple\n                                  value={changeData.ceramic_tiles}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your Ceramic Tiles.\"\n                                >\n                                  {catalog.ceramic_tiles.map(\n                                    (option) =>\n                                      option.status && (\n                                        <MenuItem\n                                          key={option.SKU}\n                                          value={option.SKU}\n                                        >\n                                          {option.title}\n                                        </MenuItem>\n                                      )\n                                  )}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n                                <TextField\n                                  value={changeData.ceramic_tiles_qty}\n                                  onChange={handleProductFields}\n                                  size={\"small\"}\n                                  fullWidth\n                                  label=\"Ceramic Tiles Quantity\"\n                                  type=\"number\"\n                                  helperText=\"Enter the number of ceramic tiles included.\"\n                                  name=\"ceramic_tiles_qty\"\n                                />\n                              </>\n                            )}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Features ends */}\n\n                      {/* Miscellaneous */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(3)}\n                        >\n                          Miscellaneous\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"back_style\"\n                              label=\"Back Style\"\n                              multiple\n                              value={changeData.back_style || \"\"}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Back Style.\"\n                            >\n                              {backStyleCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"weight_capacity\"\n                              label=\"Weight Capacity\"\n                              multiple\n                              value={changeData.weight_capacity}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Weight Capacity.\"\n                            >\n                              {weightCapCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Drawer\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.drawer || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"drawer\"\n                              >\n                                <FormControlLabel\n                                  value=\"mechanical\"\n                                  control={<Radio />}\n                                  label=\"Mechanical\"\n                                />\n                                <FormControlLabel\n                                  value=\"wooden\"\n                                  control={<Radio />}\n                                  label=\"Wooden\"\n                                />\n                                <FormControlLabel\n                                  value=\"none\"\n                                  control={<Radio />}\n                                  label=\"None\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {(changeData.drawer === \"mechanical\" ||\n                              changeData.drawer === \"wooden\") && (\n                              <TextField\n                                size=\"small\"\n                                fullWidth\n                                type=\"number\"\n                                id=\"outlined-select\"\n                                name=\"drawer_count\"\n                                label=\"Drawer Count\"\n                                value={changeData.drawer_count}\n                                onChange={handleProductFields}\n                              />\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Joints ((Useful in products where info about\n                                joints are shown))\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"joints\"\n                                value={changeData.joints}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"single\"\n                                  control={<Radio />}\n                                  label=\"Single\"\n                                />\n                                <FormControlLabel\n                                  value=\"multi\"\n                                  control={<Radio />}\n                                  label=\"Multiple\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Miscellaneous ends */}\n\n                      {/* Inventory & Shipping */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(4)}\n                        >\n                          Inventory & Shipping\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <FormGroup>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Return & Payment Policy\n                              </FormLabel>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.COD}\n                                    onChange={handleProductFields}\n                                    name=\"COD\"\n                                  />\n                                }\n                                label=\"COD Available\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.returnable}\n                                    onChange={handleProductFields}\n                                    name=\"returnable\"\n                                  />\n                                }\n                                label=\"Return Item\"\n                              />\n                            </FormGroup>\n                            {changeData.returnable && (\n                              <>\n                                <Typography\n                                  component={\"span\"}\n                                  variant=\"Caption\"\n                                >\n                                  {\" \"}\n                                  Return in {changeData.returnDays} Days\n                                </Typography>\n                                <Slider\n                                  aria-label=\"Return Days\"\n                                  defaultValue={0}\n                                  size=\"small\"\n                                  name=\"returnDays\"\n                                  value={changeData.returnDays}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your return days\"\n                                  valueLabelDisplay=\"auto\"\n                                />\n                              </>\n                            )}\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Polish in {changeData.polish_time} Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"Construction Days\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"polish_time\"\n                              value={changeData.polish_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your polish time\"\n                            />\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Manufactured in {\n                                changeData.manufacturing_time\n                              }{\" \"}\n                              Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"Construction Days\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"manufacturing_time\"\n                              value={changeData.manufacturing_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your manufacturing time\"\n                            />\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Stock Warehouse\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.warehouse}\n                              name=\"warehouse\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                            >\n                              {warehouse.map((option) => (\n                                <MenuItem\n                                  key={option.label}\n                                  value={option.value}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.warehouse.indexOf(\n                                        option.value\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText primary={option.value} />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            {changeData.warehouse.map((row) => {\n                              let stock;\n                              row === \"Jodhpur (Rajasthan)\"\n                                ? (stock = \"jodhpur_stock\")\n                                : (stock = \"bangalore_stock\");\n                              return (\n                                <>\n                                  <TextField\n                                    size=\"small\"\n                                    fullWidth\n                                    name={stock}\n                                    label={row + \" Stock\"}\n                                    type=\"number\"\n                                    value={changeData[stock] || \"\"}\n                                    onChange={handleProductFields}\n                                  />\n                                </>\n                              );\n                            })}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Length\"\n                              type=\"number\"\n                              value={changeData.package_length}\n                              onChange={handleProductFields}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_length\"\n                              helperText=\"From left to right\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_breadth\"\n                              value={changeData.package_breadth}\n                              onChange={handleProductFields}\n                              helperText=\"From front to back\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_height\"\n                              value={changeData.package_height}\n                              onChange={handleProductFields}\n                              helperText=\"From bottom to top\"\n                            />\n                            <Box sx={{ display: \"flex\", mb: 1 }}>\n                              <TextField\n                                size=\"small\"\n                                sx={{ width: \"90%\" }}\n                                id=\"fullWidth\"\n                                label=\"Quantity\"\n                                type=\"Number\"\n                                variant=\"outlined\"\n                                name=\"quantity\"\n                                value={changeData.quantity}\n                                onChange={handleProductFields}\n                              />\n\n                              <TextField\n                                id=\"outlined-select-currency\"\n                                select\n                                sx={{ ml: 1, width: \"10%\" }}\n                                size=\"small\"\n                                label=\"Unit\"\n                                name=\"unit\"\n                                value={changeData.unit || \"\"}\n                                onChange={handleProductFields}\n                              >\n                                {unitCatalog.map((option) => (\n                                  <MenuItem\n                                    key={option.value}\n                                    value={option.value}\n                                  >\n                                    {option.label}\n                                  </MenuItem>\n                                ))}\n                              </TextField>\n                            </Box>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Inventory & Shipping End */}\n\n                      {/* SEO */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(5)}\n                        >\n                          SEO\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_title\"\n                              value={changeData.seo_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Description\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_description\"\n                              value={changeData.seo_description}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Keyword\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_keyword\"\n                              value={changeData.seo_keyword}\n                              onChange={handleProductFields}\n                            />\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n                            <Grid container sx={{ mt: 1 }}>\n                              <Grid item xs={12}>\n                                <Grid\n                                  container\n                                  sx={{\n                                    display: \"flex\",\n                                    alignItem: \"center\",\n                                    justifyContent: \"space-between\",\n                                  }}\n                                >\n                                  <Grid item xs={11}>\n                                    <TextField\n                                      fullWidth\n                                      value={changeData.item || \"\"}\n                                      size={\"small\"}\n                                      type=\"text\"\n                                      name=\"item\"\n                                      onChange={handleProductFields}\n                                      label=\"Write a point...\"\n                                    />\n                                  </Grid>\n                                  <Grid item xs={0.8}>\n                                    {changeData.select === undefined ? (\n                                      <Button\n                                        fullWidth\n                                        onClick={() => {\n                                          changeData.item !== \"\" &&\n                                            setData({\n                                              ...changeData,\n                                              selling_points: [\n                                                ...changeData.selling_points,\n                                                changeData.item,\n                                              ],\n                                              item: \"\",\n                                            });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Add\n                                      </Button>\n                                    ) : (\n                                      <Button\n                                        onClick={() => {\n                                          setData({\n                                            ...changeData,\n                                            selling_points:\n                                              changeData.selling_points.filter(\n                                                (row, i) => {\n                                                  return (\n                                                    i !== changeData.select\n                                                  );\n                                                }\n                                              ),\n                                            select: undefined,\n                                          });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Remove\n                                      </Button>\n                                    )}\n                                  </Grid>\n                                </Grid>\n                              </Grid>\n                              {changeData.selling_points.length > 0 && (\n                                <Grid\n                                  sx={{\n                                    maxHeight: \"100px\",\n                                    overflowY: \"scroll\",\n                                    mb: 1,\n                                    border: \"2px solid #91441f\",\n                                    padding: \"7px\",\n                                  }}\n                                  item\n                                  xs={12}\n                                >\n                                  <ul style={{ listStyleType: \"square\" }}>\n                                    {changeData.selling_points &&\n                                      changeData.selling_points.map(\n                                        (item, index) => {\n                                          return (\n                                            <li>\n                                              <Typography\n                                                sx={{ cursor: \"pointer\" }}\n                                                onClick={() => {\n                                                  setData({\n                                                    ...changeData,\n                                                    select: index,\n                                                    item: item,\n                                                  });\n                                                }}\n                                                variant=\"body\"\n                                              >\n                                                {index + 1 + \". \"}\n                                                {item}\n                                              </Typography>\n                                            </li>\n                                          );\n                                        }\n                                      )}\n                                  </ul>\n                                </Grid>\n                              )}\n                            </Grid>\n                            {/* product description  */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Description\n                            </FormLabel>\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"product_description\"\n                              onChange={handleProductFields}\n                              defaultValue={changeData.product_description}\n                              type=\"text\"\n                              helperText=\"Please enter your product description\"\n                            />\n                            {/* <Editor\n                              apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                              onInit={(event, editor) =>\n                                (editorRef.current = editor)\n                              }\n                              init={{\n                                height: 300,\n                                menubar: true,\n                              }}\n                            /> */}\n                            {/* selling points  */}\n                            {/* <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"selling_points\"\n                              defaultValue={\"Selling Points\" || changeData.selling_points}\n                              type=\"text\"\n                              helperText=\"Please enter your selling points.\"\n                            /> */}\n                            {/* <Editor\n                              apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                              onInit={(event, editor) =>\n                                (sellingRef.current = editor)\n                              }\n                              init={{\n                                height: 400,\n                                menubar: true,\n                              }}\n                            /> */}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* SEO End */}\n\n                      {/* Extra-details */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(6)}\n                        >\n                          Extra-Details\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              type=\"number\"\n                              name=\"CVW\"\n                              label=\"CVW Number\"\n                              value={changeData.CVW || \"\"}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Wood Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"wood_weight\"\n                              value={changeData.wood_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\" Metallic Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"metal_weight\"\n                              value={changeData.metal_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Packaging Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_weight\"\n                              value={changeData.package_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"tax_rate\"\n                              label=\"Tax Rate\"\n                              value={changeData.tax_rate}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your tax rate.\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                            >\n                              {taxRateCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Silver\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.silver || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"silver\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.silver === \"yes\" && (\n                              <TextField\n                                size=\"small\"\n                                fullWidth\n                                // autoComplete={false}\n                                id=\"fullWidth\"\n                                label=\"Sliver Weight\"\n                                type=\"text\"\n                                InputProps={{\n                                  startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                      Gram\n                                    </InputAdornment>\n                                  ),\n                                }}\n                                variant=\"outlined\"\n                                name=\"silver_weight\"\n                                value={changeData.silver_weight}\n                                onChange={handleProductFields}\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"hinge\"\n                              label=\"Hinge\"\n                              multiple\n                              value={changeData.hinge}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your hinge.\"\n                            >\n                              {catalog.hinge.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.hinge !== \"None\" && (\n                              <TextField\n                                value={changeData.hinge_qty}\n                                size={\"small\"}\n                                helperText=\"Enter the number of hinges pieces .\"\n                                fullWidth\n                                onChange={handleProductFields}\n                                label=\"Hinge Quantity\"\n                                type=\"number\"\n                                name=\"hinge_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"knob\"\n                              label=\"Knob\"\n                              multiple\n                              value={changeData.knob}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your knob.\"\n                            >\n                              {console.log(catalog)}\n                              {catalog.knob.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.knob !== \"None\" && (\n                              <TextField\n                                size={\"small\"}\n                                fullWidth\n                                helperText=\"Enter the number of knob pieces .\"\n                                value={changeData.knob_qty}\n                                onChange={handleProductFields}\n                                label=\"Knob Quantity\"\n                                type=\"number\"\n                                name=\"knob_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"door\"\n                              label=\"Door\"\n                              multiple\n                              value={changeData.door}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your door.\"\n                            >\n                              {catalog.door.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.door !== \"None\" && (\n                              <TextField\n                                value={changeData.door_qty}\n                                helperText=\"Enter the number of doors.\"\n                                size={\"small\"}\n                                fullWidth\n                                onChange={handleProductFields}\n                                label=\"Door Quantity\"\n                                type=\"number\"\n                                name=\"door_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"handle\"\n                              label=\"Handle\"\n                              multiple\n                              value={changeData.handle}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your handle.\"\n                            >\n                              {catalog.handle.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.handle !== \"None\" && (\n                              <TextField\n                                value={changeData.handle_qty}\n                                helperText=\"Enter the number of handles.\"\n                                onChange={handleProductFields}\n                                size={\"small\"}\n                                fullWidth\n                                label=\"Handle Quantity\"\n                                type=\"number\"\n                                name=\"handle_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              label=\"Fitting\"\n                              name=\"fitting\"\n                              multiple\n                              value={changeData.fitting}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your fitting.\"\n                            >\n                              {catalog.fitting.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Mirror\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"mirror\"\n                                value={changeData.mirror || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.mirror === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // autoComplete={false}\n                                  id=\"fullWidth\"\n                                  label=\"Mirror Length\"\n                                  type=\"text\"\n                                  InputProps={{\n                                    startAdornment: (\n                                      <InputAdornment position=\"start\">\n                                        Inch\n                                      </InputAdornment>\n                                    ),\n                                  }}\n                                  variant=\"outlined\"\n                                  value={changeData.mirror_length}\n                                  onChange={handleProductFields}\n                                  name=\"mirror_length\"\n                                />\n\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // autoComplete={false}\n                                  id=\"fullWidth\"\n                                  label=\"Mirror Width\"\n                                  type=\"text\"\n                                  InputProps={{\n                                    startAdornment: (\n                                      <InputAdornment position=\"start\">\n                                        Inch\n                                      </InputAdornment>\n                                    ),\n                                  }}\n                                  variant=\"outlined\"\n                                  name=\"mirror_width\"\n                                  value={changeData.mirror_width}\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Top Size Length\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"top_size_length\"\n                              value={changeData.top_size_length}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Top Size Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"top_size_breadth\"\n                              value={changeData.top_size_breadth}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Dial Size (Only Applicable on Clock And Clock Containing Items )\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              value={changeData.dial_size}\n                              onChange={handleProductFields}\n                              name=\"dial_size\"\n                            />\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Wheel Included\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"wheel_included\"\n                                value={changeData.wheel_included || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.wheel_included === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"wheel\"\n                                  label=\"Wheel\"\n                                  multiple\n                                  value={changeData.wheel}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your wheel.\"\n                                >\n                                  {catalog.wheel.map(\n                                    (option) =>\n                                      option.status && (\n                                        <MenuItem\n                                          key={option.SKU}\n                                          value={option.SKU}\n                                        >\n                                          {option.title}\n                                        </MenuItem>\n                                      )\n                                  )}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n                                <TextField\n                                  value={changeData.wheel_qty}\n                                  onChange={handleProductFields}\n                                  size={\"small\"}\n                                  fullWidth\n                                  label=\"Wheel Quantity\"\n                                  type=\"number\"\n                                  helperText=\"Enter the number of wheel included.\"\n                                  name=\"wheel_qty\"\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Trolley\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"trolley\"\n                                value={changeData.trolley || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.trolley === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"trolley_material\"\n                                  label=\"Trolly Material\"\n                                  multiple\n                                  value={changeData.trolley_material}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your Trolly Material \"\n                                >\n                                  {trollyMaterial.map((option) => (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option.value}\n                                    >\n                                      {option.label}\n                                    </MenuItem>\n                                  ))}\n                                </TextField>\n                              </>\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Seating Size Width\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"seating_size_width\"\n                              value={changeData.seating_size_width}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Seating Size Width Depth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"seating_size_depth\"\n                              value={changeData.seating_size_depth}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Seating Size Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"seating_size_height\"\n                              value={changeData.seating_size_height}\n                              onChange={handleProductFields}\n                            />\n                            {/* \n                          <FormControl>\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Textile\n                            </FormLabel>\n                            <RadioGroup\n                              sx={{ mb : 1 }}\n\n                              aria-labelledby=\"demo-radio-buttons-group-label\"\n                              value={changeData.textile || \"no\"}\n                              onChange={handleProductFields}\n                              name=\"textile\"\n                            >\n                              <FormControlLabel\n                                value=\"yes\"\n                                control={<Radio />}\n                                label=\"Yes\"\n                              />\n                              <FormControlLabel\n                                value=\"no\"\n                                control={<Radio />}\n                                label=\"No\"\n                              />\n                            </RadioGroup>\n                          </FormControl>\n\n\n                          {changeData.textile === \"yes\" && (\n                            <TextField sx={{ mb : 1 }}\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"textile_type\"\n                              label=\"Textile\"\n                              value={changeData.textile_type}\n                              onChange={handleProductFields}\n                              multiple\n                              helperText=\"Please select your textile.\"\n                            >\n                              {catalog.textile.map(\n                                (option) => option.status && <MenuItem\n                                  key={option.SKU}\n                                  value={option.SKU}\n                                >\n                                  {option.title}\n                                </MenuItem>\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          )}\n\n                            */}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Plywood Included\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.plywood || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"plywood\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Mattress\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.mattress || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"mattress\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.mattress === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  type=\"number\"\n                                  id=\"outlined-select\"\n                                  name=\"mattress_length\"\n                                  label=\"Mattress Length\"\n                                  value={changeData.mattress_length}\n                                  onChange={handleProductFields}\n                                />\n                                <TextField\n                                  size=\"small\"\n                                  type=\"number\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  name=\"mattress_breadth\"\n                                  label=\"Mattress Breadth\"\n                                  value={changeData.mattress_breadth}\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Cradle Bed\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.cradle_bed || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"cradle_bed\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.cradle_bed === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  type=\"number\"\n                                  id=\"outlined-select\"\n                                  name=\"cradle_bed_height\"\n                                  label=\"Cradle Bed Height\"\n                                  value={changeData.cradle_bed_height}\n                                  onChange={handleProductFields}\n                                />\n                                <TextField\n                                  size=\"small\"\n                                  type=\"number\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  name=\"cradle_bed_width\"\n                                  label=\"Cradle Bed Width\"\n                                  value={changeData.cradle_bed_width}\n                                  onChange={handleProductFields}\n                                />\n                                <TextField\n                                  size=\"small\"\n                                  type=\"number\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  name=\"cradle_bed_depth\"\n                                  label=\"Cradle Bed Depth\"\n                                  value={changeData.cradle_bed_depth}\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Upholstery\n                              </FormLabel>\n                              <RadioGroup\n                                defaultValue=\"no\"\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                // onChange={(e) => {\n                                //   setShowFabric(e.target.value);\n                                // }}\n\n                                value={changeData.upholstery || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"upholstery\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.upholstery === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"fabric\"\n                                  label=\"Fabric\"\n                                  multiple\n                                  value={changeData.fabric}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your fabric.\"\n                                >\n                                  {catalog.fabric.map(\n                                    (option) =>\n                                      option.status && (\n                                        <MenuItem\n                                          key={option.SKU}\n                                          value={option.SKU}\n                                        >\n                                          {option.title}\n                                        </MenuItem>\n                                      )\n                                  )}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n\n                                <TextField\n                                  value={changeData.fabric_qty}\n                                  onChange={handleProductFields}\n                                  size={\"small\"}\n                                  fullWidth\n                                  label=\"Fabric Quantity\"\n                                  type=\"number\"\n                                  helperText=\"Enter the fabric quantity in meter.\"\n                                  name=\"fabric_qty\"\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Vendor URLs\n                              </FormLabel>\n                            </FormControl>\n                            <TextField\n                              type=\"url\"\n                              fullWidth\n                              size=\"small\"\n                              name=\"amazon_url\"\n                              label=\"Amazon\"\n                              onChange={handleProductFields}\n                              value={changeData.amazon_url}\n                              placeholder=\"https://example.com\"\n                              pattern=\"https://.*\"\n                            />\n                            <TextField\n                              type=\"url\"\n                              size=\"small\"\n                              fullWidth\n                              placeholder=\"https://example.com\"\n                              pattern=\"https://.*\"\n                              name=\"flipkart_url\"\n                              label=\"Flipkart\"\n                              onChange={handleProductFields}\n                              value={changeData.flipkart_url}\n                            />\n                            <TextField\n                              type=\"url\"\n                              size=\"small\"\n                              fullWidth\n                              placeholder=\"https://example.com\"\n                              pattern=\"https://.*\"\n                              name=\"jiomart_url\"\n                              label=\"Jio Mart\"\n                              onChange={handleProductFields}\n                              value={changeData.jiomart_url}\n                            />\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Extra-details End */}\n                    </Stepper>\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Create Variation\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* Variation Products Ends */}\n\n            {/* merge Products */}\n\n            {form.formType === \"merge_product\" && (\n              <Grid container p={5} className=\"productPadding\">\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Merge Product\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Merge your products and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleMergeProduct);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <Stepper\n                      className=\"stepper\"\n                      activeStep={activeStep}\n                      orientation=\"vertical\"\n                    >\n                      {/* // Specification */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(0)}\n                        >\n                          Specifications\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 4}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // // required\n                              label=\"SKU\"\n                              type=\"text\"\n                              value={SKU}\n                              disabled\n                              variant=\"outlined\"\n                              name=\"SKU\"\n                            />\n                            <Autocomplete\n                              size=\"small\"\n                              fullWidth\n                              multiple\n                              autoHighlight\n                              noOptionsText={\"ex : P-01001\"}\n                              id=\"combo-box-demo\"\n                              options={productSKU.P_SKU.map((row) => {\n                                return row.SKU;\n                              })}\n                              value={changeData.product_articles}\n                              renderInput={(params) => (\n                                <TextField\n                                  onKeyUpCapture={handleSearch}\n                                  value={changeData.product_articles || \"\"}\n                                  {...params}\n                                  label=\"Product SKU\"\n                                />\n                              )}\n                              onChange={(e, newMember) =>\n                                setData((old) => ({\n                                  ...old,\n                                  product_articles: newMember,\n                                }))\n                              }\n                            />\n                            {changeData.product_articles.length > 0 && (\n                              <Box mt={1}>\n                                <Typography component={\"span\"} variant=\"body1\">\n                                  Product Quantities\n                                </Typography>\n                                <Box\n                                  p={1}\n                                  sx={{\n                                    display: \"flex\",\n                                    gap: \"5px\",\n                                    flexDirection: \"column\",\n                                    maxHeight: 150,\n                                    overflow: \"scroll\",\n                                  }}\n                                >\n                                  {changeData.product_articles.map((item) => (\n                                    <TextField\n                                      name={item}\n                                      fullWidth\n                                      size=\"small\"\n                                      type=\"number\"\n                                      InputProps={{\n                                        startAdornment: (\n                                          <InputAdornment position=\"start\">\n                                            {item}\n                                          </InputAdornment>\n                                        ),\n                                      }}\n                                      placeholder={item}\n                                      onChange={handleProductFields}\n                                      value={changeData[item] || 1}\n                                    />\n                                  ))}\n                                </Box>\n                              </Box>\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              required\n                              id=\"outlined-select\"\n                              select\n                              name=\"category_name\"\n                              label=\"Category\"\n                              value={changeData.category_name}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your category\"\n                            >\n                              {category.map(\n                                (option) =>\n                                  option.category_status && (\n                                    <MenuItem\n                                      key={option._id}\n                                      value={option._id}\n                                    >\n                                      {option.category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"sub_category_name\"\n                              label=\"Sub Category\"\n                              multiple\n                              value={changeData.sub_category_name}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your sub category\"\n                            >\n                              {subCategory.map(\n                                (option) =>\n                                  changeData.category_name ===\n                                    option.category_id && (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option._id}\n                                    >\n                                      {option.sub_category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"product_title\"\n                              value={changeData.product_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Showroom Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"showroom_price\"\n                              value={changeData.showroom_price}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              onChange={(e) => {\n                                handleDiscount(e);\n                                handleProductFields(e);\n                              }}\n                              label=\"Discount Limit\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"discount_limit\"\n                              value={changeData.discount_limit}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // disabled\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Selling Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              value={\n                                // changeData.MRP > 0 &&\n                                //   changeData.discount_limit > 0\n                                //   ? (changeData.selling_price =\n                                //     changeData.MRP -\n                                //     (changeData.MRP / 100) *\n                                //     changeData.discount_limit)\n                                //   : 0\n                                changeData.selling_price\n                              }\n                              onChange={handleProductFields}\n                              variant=\"outlined\"\n                              name=\"selling_price\"\n                            />\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Availability\n                            </FormLabel>\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.mobile_store}\n                                  onChange={handleProductFields}\n                                  name=\"mobile_store\"\n                                  helperText=\"Check it if want it on mobile.\"\n                                />\n                              }\n                              label=\"Mobile Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.online_store}\n                                  onChange={handleProductFields}\n                                  name=\"online_store\"\n                                  helperText=\"Check it if want it on online store.\"\n                                />\n                              }\n                              label=\"Online Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.continue_selling}\n                                  onChange={handleProductFields}\n                                  name=\"continue_selling\"\n                                  helperText=\"Check it if want it to sell when out of Inventory.\"\n                                />\n                              }\n                              label=\"Continue Selling\"\n                            />\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 4}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* // Specification Ends*/}\n\n                      {/* Images */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(1)}\n                        >\n                          Images\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            {/* <AcceptMaxFiles className=\"dorpContainer\"/> */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Images\n                            </FormLabel>\n                            <ProductsPreviews\n                              text={\n                                \"Make Sure the picture ratio should be in 1:1.\"\n                              }\n                            ></ProductsPreviews>\n                            {files.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                {files.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = files;\n                                            console.log(\">>>>>>\", temp, files);\n                                            temp.splice(index, 1);\n                                            setFiles([...temp]);\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={URL.createObjectURL(img)}\n                                          alt={img.name}\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // featured images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"featured_image\"\n                              label=\"Feature Image\"\n                              value={changeData.featured_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Featured Image\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // specification images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"specification_image\"\n                              label=\"Specification Image\"\n                              value={changeData.specification_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your specification image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // Mannequin images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"mannequin_image\"\n                              label=\"Mannequin Image\"\n                              value={changeData.mannequin_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Mannequin Image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Images End */}\n\n                      {/* Inventory & Shipping */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(2)}\n                        >\n                          Inventory & Shipping\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 4}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <FormGroup>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Return & Payment Policy\n                              </FormLabel>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.COD}\n                                    onChange={handleProductFields}\n                                    name=\"COD\"\n                                  />\n                                }\n                                label=\"COD Available\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.returnable}\n                                    onChange={handleProductFields}\n                                    name=\"returnable\"\n                                  />\n                                }\n                                label=\"Return Item\"\n                              />\n                            </FormGroup>\n                            {changeData.returnable && (\n                              <>\n                                <Typography\n                                  component={\"span\"}\n                                  variant=\"Caption\"\n                                >\n                                  {\" \"}\n                                  Return in {changeData.returnDays} Days\n                                </Typography>\n                                <Slider\n                                  aria-label=\"Return Days\"\n                                  defaultValue={0}\n                                  size=\"small\"\n                                  name=\"returnDays\"\n                                  value={changeData.returnDays}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your return days\"\n                                  valueLabelDisplay=\"auto\"\n                                />\n                              </>\n                            )}\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Polish in {changeData.polish_time} Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"Construction Days\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"polish_time\"\n                              value={changeData.polish_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your polish time\"\n                            />\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Manufactured in {\n                                changeData.manufacturing_time\n                              }{\" \"}\n                              Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"Construction Days\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"manufacturing_time\"\n                              value={changeData.manufacturing_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your manufacturing time\"\n                            />\n                            {/* <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Stock Warehouse\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.warehouse}\n                              name=\"warehouse\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                            >\n                              {warehouse.map((option) => (\n                                <MenuItem\n                                  key={option.label}\n                                  value={option.value}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.warehouse.indexOf(\n                                        option.value\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText primary={option.value} />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            {changeData.warehouse.map((row) => {\n                              let stock;\n                              row === \"Jodhpur (Rajasthan)\"\n                                ? (stock = \"jodhpur_stock\")\n                                : (stock = \"bangalore_stock\");\n                              return (\n                                <>\n                                  <TextField\n                                    size=\"small\"\n                                    fullWidth\n                                    name={stock}\n                                    label={row + \" Stock\"}\n                                    type=\"number\"\n                                    value={changeData[stock] || \"\"}\n                                    onChange={handleProductFields}\n                                  />\n                                </>\n                              );\n                            })} */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Length\"\n                              type=\"number\"\n                              value={changeData.package_length}\n                              onChange={handleProductFields}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_length\"\n                              helperText=\"From left to right\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_breadth\"\n                              value={changeData.package_breadth}\n                              onChange={handleProductFields}\n                              helperText=\"From front to back\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_height\"\n                              value={changeData.package_height}\n                              onChange={handleProductFields}\n                              helperText=\"From bottom to top\"\n                            />\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 4}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Inventory & Shipping End */}\n\n                      {/* SEO */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(3)}\n                        >\n                          SEO\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 3}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_title\"\n                              value={changeData.seo_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Description\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_description\"\n                              value={changeData.seo_description}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Keyword\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_keyword\"\n                              value={changeData.seo_keyword}\n                              onChange={handleProductFields}\n                            />\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n                            <Grid container sx={{ mt: 1 }}>\n                              <Grid item xs={12}>\n                                <Grid\n                                  container\n                                  sx={{\n                                    display: \"flex\",\n                                    alignItem: \"center\",\n                                    justifyContent: \"space-between\",\n                                  }}\n                                >\n                                  <Grid item xs={11}>\n                                    <TextField\n                                      fullWidth\n                                      value={changeData.item || \"\"}\n                                      size={\"small\"}\n                                      type=\"text\"\n                                      name=\"item\"\n                                      onChange={handleProductFields}\n                                      label=\"Write a point...\"\n                                    />\n                                  </Grid>\n                                  <Grid item xs={0.8}>\n                                    {changeData.select === undefined ? (\n                                      <Button\n                                        fullWidth\n                                        onClick={() => {\n                                          changeData.item !== \"\" &&\n                                            setData({\n                                              ...changeData,\n                                              selling_points: [\n                                                ...changeData.selling_points,\n                                                changeData.item,\n                                              ],\n                                              item: \"\",\n                                            });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Add\n                                      </Button>\n                                    ) : (\n                                      <Button\n                                        onClick={() => {\n                                          setData({\n                                            ...changeData,\n                                            selling_points:\n                                              changeData.selling_points.filter(\n                                                (row, i) => {\n                                                  return (\n                                                    i !== changeData.select\n                                                  );\n                                                }\n                                              ),\n                                            select: undefined,\n                                          });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Remove\n                                      </Button>\n                                    )}\n                                  </Grid>\n                                </Grid>\n                              </Grid>\n                              {changeData.selling_points.length > 0 && (\n                                <Grid\n                                  sx={{\n                                    maxHeight: \"100px\",\n                                    overflowY: \"scroll\",\n                                    mb: 1,\n                                    border: \"2px solid #91441f\",\n                                    padding: \"7px\",\n                                  }}\n                                  item\n                                  xs={12}\n                                >\n                                  <ul style={{ listStyleType: \"square\" }}>\n                                    {changeData.selling_points &&\n                                      changeData.selling_points.map(\n                                        (item, index) => {\n                                          return (\n                                            <li>\n                                              <Typography\n                                                sx={{ cursor: \"pointer\" }}\n                                                onClick={() => {\n                                                  setData({\n                                                    ...changeData,\n                                                    select: index,\n                                                    item: item,\n                                                  });\n                                                }}\n                                                variant=\"body\"\n                                              >\n                                                {index + 1 + \". \"}\n                                                {item}\n                                              </Typography>\n                                            </li>\n                                          );\n                                        }\n                                      )}\n                                  </ul>\n                                </Grid>\n                              )}\n                            </Grid>\n                            {/* product description  */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Description\n                            </FormLabel>\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"product_description\"\n                              onChange={handleProductFields}\n                              defaultValue={changeData.product_description}\n                              type=\"text\"\n                              helperText=\"Please enter your product description\"\n                            />\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 3}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* SEO End */}\n                    </Stepper>\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Merge Product\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* merge Products Ends */}\n\n            {/* update merge Products */}\n\n            {form.formType === \"update_merge\" && (\n              <Grid container p={5} className=\"productPadding\">\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Merge Product\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update Merge your products and necessary information from\n                      here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateMergeProduct);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <Stepper\n                      className=\"stepper\"\n                      activeStep={activeStep}\n                      orientation=\"vertical\"\n                    >\n                      {/* // Specification */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(0)}\n                        >\n                          Specifications\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 4}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // // required\n                              disabled\n                              label=\"SKU\"\n                              type=\"text\"\n                              value={changeData.M}\n                              variant=\"outlined\"\n                              name=\"SKU\"\n                            />\n                            <Autocomplete\n                              disablePortal\n                              size=\"small\"\n                              fullWidth\n                              multiple\n                              noOptionsText={\"ex : P-01001\"}\n                              autoHighlight\n                              id=\"combo-box-demo\"\n                              options={productSKU.P_SKU.map((row) => {\n                                return row.SKU;\n                              })}\n                              isOptionEqualToValue={(option, value) => {\n                                console.log(value);\n                                return typeof value === \"Array\"\n                                  ? value.isInclude(option)\n                                  : value === option;\n                              }}\n                              value={changeData.product_articles}\n                              renderInput={(params) => (\n                                <TextField\n                                  onKeyUpCapture={handleSearch}\n                                  value={changeData.product_articles}\n                                  {...params}\n                                  label=\"Product SKU\"\n                                />\n                              )}\n                              onChange={(e, newMember) =>\n                                setData((old) => ({\n                                  ...old,\n                                  product_articles: newMember,\n                                }))\n                              }\n                            />\n                            {changeData.product_articles.length > 0 && (\n                              <Box mt={1}>\n                                <Typography component={\"span\"} variant=\"body1\">\n                                  Product Quantities\n                                </Typography>\n                                <Box\n                                  p={1}\n                                  sx={{\n                                    display: \"flex\",\n                                    gap: \"5px\",\n                                    flexDirection: \"column\",\n                                    maxHeight: 150,\n                                    overflow: \"scroll\",\n                                  }}\n                                >\n                                  {changeData.product_articles.map((item) => (\n                                    <TextField\n                                      name={item}\n                                      fullWidth\n                                      size=\"small\"\n                                      type=\"number\"\n                                      InputProps={{\n                                        startAdornment: (\n                                          <InputAdornment position=\"start\">\n                                            {item}\n                                          </InputAdornment>\n                                        ),\n                                      }}\n                                      placeholder={item}\n                                      onChange={handleProductFields}\n                                      value={changeData[item] || 1}\n                                    />\n                                  ))}\n                                </Box>\n                              </Box>\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              required\n                              id=\"outlined-select\"\n                              select\n                              name=\"category_name\"\n                              label=\"Category\"\n                              value={changeData.category_name}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your category\"\n                            >\n                              {category.map(\n                                (option) =>\n                                  option.category_status && (\n                                    <MenuItem\n                                      key={option._id}\n                                      value={option._id}\n                                    >\n                                      {option.category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"sub_category_name\"\n                              label=\"Sub Category\"\n                              multiple\n                              value={changeData.sub_category_name}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your sub category\"\n                            >\n                              {subCategory.map(\n                                (option) =>\n                                  changeData.category_name ===\n                                    option.category_id && (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option._id}\n                                    >\n                                      {option.sub_category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"product_title\"\n                              value={changeData.product_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Showroom Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"showroom_price\"\n                              value={changeData.showroom_price}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              onChange={(e) => {\n                                handleDiscount(e);\n                                handleProductFields(e);\n                              }}\n                              label=\"Discount Limit\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"discount_limit\"\n                              value={changeData.discount_limit}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // disabled\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Selling Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              value={\n                                // changeData.MRP > 0 &&\n                                //   changeData.discount_limit > 0\n                                //   ? (changeData.selling_price =\n                                //     changeData.MRP -\n                                //     (changeData.MRP / 100) *\n                                //     changeData.discount_limit)\n                                //   : 0\n                                changeData.selling_price\n                              }\n                              onChange={handleProductFields}\n                              variant=\"outlined\"\n                              name=\"selling_price\"\n                            />\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Availability\n                            </FormLabel>\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.mobile_store}\n                                  onChange={handleProductFields}\n                                  name=\"mobile_store\"\n                                  helperText=\"Check it if want it on mobile.\"\n                                />\n                              }\n                              label=\"Mobile Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.online_store}\n                                  onChange={handleProductFields}\n                                  name=\"online_store\"\n                                  helperText=\"Check it if want it on online store.\"\n                                />\n                              }\n                              label=\"Online Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.continue_selling}\n                                  onChange={handleProductFields}\n                                  name=\"continue_selling\"\n                                  helperText=\"Check it if want it to sell when out of Inventory.\"\n                                />\n                              }\n                              label=\"Continue Selling\"\n                            />\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 4}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* // Specification Ends*/}\n\n                      {/* Images */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(1)}\n                        >\n                          Images\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            {/* <AcceptMaxFiles className=\"dorpContainer\"/> */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Images\n                            </FormLabel>\n                            <ProductsPreviews\n                              text={\"Please Drag and Drop the product images\"}\n                            ></ProductsPreviews>\n                            {files.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                {files.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = files;\n                                            console.log(\">>>>>>\", temp, files);\n                                            temp.splice(index, 1);\n                                            setFiles([...temp]);\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={URL.createObjectURL(img)}\n                                          alt={img.name}\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {changeData.savedImages.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                <FormLabel id=\"demo-radio-buttons-group-label\">\n                                  Saved Images\n                                </FormLabel>\n                                {changeData.savedImages.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = changeData.savedImages;\n                                            temp.splice(index, 1);\n                                            setData({\n                                              ...changeData,\n                                              savedImages: temp,\n                                            });\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={img}\n                                          alt=\"productImage\"\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // featured images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"featured_image\"\n                              label=\"Feature Image\"\n                              value={changeData.featured_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Featured Image\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              {/* {console.log(changeData.savedImages)} */}\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // specification images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"specification_image\"\n                              label=\"Specification Image\"\n                              value={changeData.specification_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your specification image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // Mannequin images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"mannequin_image\"\n                              label=\"Mannequin Image\"\n                              value={changeData.mannequin_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Mannequin Image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Images End */}\n\n                      {/* Inventory & Shipping */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(2)}\n                        >\n                          Inventory & Shipping\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 4}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <FormGroup>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Return & Payment Policy\n                              </FormLabel>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.COD}\n                                    onChange={handleProductFields}\n                                    name=\"COD\"\n                                  />\n                                }\n                                label=\"COD Available\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.returnable}\n                                    onChange={handleProductFields}\n                                    name=\"returnable\"\n                                  />\n                                }\n                                label=\"Return Item\"\n                              />\n                            </FormGroup>\n                            {changeData.returnable && (\n                              <>\n                                <Typography\n                                  component={\"span\"}\n                                  variant=\"Caption\"\n                                >\n                                  {\" \"}\n                                  Return in {changeData.returnDays} Days\n                                </Typography>\n                                <Slider\n                                  aria-label=\"Return Days\"\n                                  defaultValue={0}\n                                  size=\"small\"\n                                  name=\"returnDays\"\n                                  value={changeData.returnDays}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your return days\"\n                                  valueLabelDisplay=\"auto\"\n                                />\n                              </>\n                            )}\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Polish in {changeData.polish_time} Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"Construction Days\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"polish_time\"\n                              value={changeData.polish_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your polish time\"\n                            />\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Manufactured in {\n                                changeData.manufacturing_time\n                              }{\" \"}\n                              Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"Construction Days\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"manufacturing_time\"\n                              value={changeData.manufacturing_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your manufacturing time\"\n                            />\n                            {/* <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Stock Warehouse\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.warehouse}\n                              name=\"warehouse\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                            >\n                              {warehouse.map((option) => (\n                                <MenuItem\n                                  key={option.label}\n                                  value={option.value}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.warehouse.indexOf(\n                                        option.value\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText primary={option.value} />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            {changeData.warehouse.map((row) => {\n                              let stock;\n                              row === \"Jodhpur (Rajasthan)\"\n                                ? (stock = \"jodhpur_stock\")\n                                : (stock = \"bangalore_stock\");\n                              return (\n                                <>\n                                  <TextField\n                                    size=\"small\"\n                                    fullWidth\n                                    name={stock}\n                                    label={row + \" Stock\"}\n                                    type=\"number\"\n                                    value={changeData[stock] || \"\"}\n                                    onChange={handleProductFields}\n                                  />\n                                </>\n                              );\n                            })} */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Length\"\n                              type=\"number\"\n                              value={changeData.package_length}\n                              onChange={handleProductFields}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_length\"\n                              helperText=\"From left to right\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_breadth\"\n                              value={changeData.package_breadth}\n                              onChange={handleProductFields}\n                              helperText=\"From front to back\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_height\"\n                              value={changeData.package_height}\n                              onChange={handleProductFields}\n                              helperText=\"From bottom to top\"\n                            />\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 4}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Inventory & Shipping End */}\n\n                      {/* SEO */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(3)}\n                        >\n                          SEO\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 3}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_title\"\n                              value={changeData.seo_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Description\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_description\"\n                              value={changeData.seo_description}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Keyword\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_keyword\"\n                              value={changeData.seo_keyword}\n                              onChange={handleProductFields}\n                            />\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n                            <Grid container sx={{ mt: 1 }}>\n                              <Grid item xs={12}>\n                                <Grid\n                                  container\n                                  sx={{\n                                    display: \"flex\",\n                                    alignItem: \"center\",\n                                    justifyContent: \"space-between\",\n                                  }}\n                                >\n                                  <Grid item xs={11}>\n                                    <TextField\n                                      fullWidth\n                                      value={changeData.item || \"\"}\n                                      size={\"small\"}\n                                      type=\"text\"\n                                      name=\"item\"\n                                      onChange={handleProductFields}\n                                      label=\"Write a point...\"\n                                    />\n                                  </Grid>\n                                  <Grid item xs={0.8}>\n                                    {changeData.select === undefined ? (\n                                      <Button\n                                        fullWidth\n                                        onClick={() => {\n                                          changeData.item !== \"\" &&\n                                            setData({\n                                              ...changeData,\n                                              selling_points: [\n                                                ...changeData.selling_points,\n                                                changeData.item,\n                                              ],\n                                              item: \"\",\n                                            });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Add\n                                      </Button>\n                                    ) : (\n                                      <Button\n                                        onClick={() => {\n                                          setData({\n                                            ...changeData,\n                                            selling_points:\n                                              changeData.selling_points.filter(\n                                                (row, i) => {\n                                                  return (\n                                                    i !== changeData.select\n                                                  );\n                                                }\n                                              ),\n                                            select: undefined,\n                                          });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Remove\n                                      </Button>\n                                    )}\n                                  </Grid>\n                                </Grid>\n                              </Grid>\n                              {changeData.selling_points.length > 0 && (\n                                <Grid\n                                  sx={{\n                                    maxHeight: \"100px\",\n                                    overflowY: \"scroll\",\n                                    mb: 1,\n                                    border: \"2px solid #91441f\",\n                                    padding: \"7px\",\n                                  }}\n                                  item\n                                  xs={12}\n                                >\n                                  <ul style={{ listStyleType: \"square\" }}>\n                                    {changeData.selling_points &&\n                                      changeData.selling_points.map(\n                                        (item, index) => {\n                                          return (\n                                            <li>\n                                              <Typography\n                                                sx={{ cursor: \"pointer\" }}\n                                                onClick={() => {\n                                                  setData({\n                                                    ...changeData,\n                                                    select: index,\n                                                    item: item,\n                                                  });\n                                                }}\n                                                variant=\"body\"\n                                              >\n                                                {index + 1 + \". \"}\n                                                {item}\n                                              </Typography>\n                                            </li>\n                                          );\n                                        }\n                                      )}\n                                  </ul>\n                                </Grid>\n                              )}\n                            </Grid>\n                            {/* product description  */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Description\n                            </FormLabel>\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"product_description\"\n                              onChange={handleProductFields}\n                              defaultValue={changeData.product_description}\n                              type=\"text\"\n                              helperText=\"Please enter your product description\"\n                            />\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 3}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* SEO End */}\n                    </Stepper>\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Merge Product\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* update merge Products Ends */}\n\n            {/*  add Category */}\n\n            {form.formType === \"category\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Category\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add your product category and necessary information from\n                      here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleCategory);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <ImagePreviews\n                      text={\"Please Drag and Drop the Category image\"}\n                    >\n                      {\" \"}\n                    </ImagePreviews>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"category_name\"\n                      label=\"Category\"\n                      type=\"text\"\n                      helperText=\"Please enter your category\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Title\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_title\"\n                      value={changeData.seo_title}\n                      onChange={handleProductFields}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Description\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_description\"\n                      value={changeData.seo_description}\n                      onChange={handleProductFields}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Keyword\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_keyword\"\n                      value={changeData.seo_keyword}\n                      onChange={handleProductFields}\n                    />\n\n                    {/* product description  */}\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Product Description\n                    </FormLabel>\n\n                    <TextareaAutosize\n                      fullWidth\n                      minRows={5}\n                      id=\"outlined-select\"\n                      name=\"product_description\"\n                      onChange={handleProductFields}\n                      defaultValue={changeData.product_description}\n                      type=\"text\"\n                      helperText=\"Please enter your product description\"\n                    />\n\n                    <FormGroup>\n                      <FormControlLabel\n                        control={<Checkbox name=\"category_status\" />}\n                        label=\"Status (On/Off)\"\n                      />\n                    </FormGroup>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Category\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* add Category Ends */}\n\n            {/*  update Category */}\n\n            {form.formType === \"update_category\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Category\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update your product category and necessary information\n                      from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateCategory);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <ImagePreviews\n                      text={\"Please Drag and Drop the Category image\"}\n                    >\n                      {\" \"}\n                    </ImagePreviews>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"outlined-select\"\n                      onChange={handleChangeData}\n                      value={changeData.category}\n                      name=\"category_name\"\n                      label=\"Category\"\n                      helperText=\"Please enter the update\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Title\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_title\"\n                      value={changeData.seo_title}\n                      onChange={handleProductFields}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Description\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_description\"\n                      value={changeData.seo_description}\n                      onChange={handleProductFields}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Keyword\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_keyword\"\n                      value={changeData.seo_keyword}\n                      onChange={handleProductFields}\n                    />\n\n                    {/* product description  */}\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Product Description\n                    </FormLabel>\n\n                    <TextareaAutosize\n                      fullWidth\n                      minRows={5}\n                      id=\"outlined-select\"\n                      name=\"product_description\"\n                      onChange={handleProductFields}\n                      defaultValue={changeData.product_description}\n                      type=\"text\"\n                      helperText=\"Please enter your product description\"\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Category\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* update Category Ends */}\n\n            {/*  discount Category */}\n\n            {form.formType === \"discount_category\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Discount\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add discount on product category from here.\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleApplyDiscount);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <Autocomplete\n                      disablePortal\n                      size=\"small\"\n                      fullWidth\n                      noOptionsText={\"ex : Chair\"}\n                      multiple\n                      autoHighlight\n                      id=\"combo-box-demo\"\n                      options={productSKU.category.map((row) => {\n                        return row.category_name;\n                      })}\n                      renderInput={(params) => (\n                        <TextField\n                          onKeyUpCapture={handleSearchCategory}\n                          value={changeData.category_discount || \"\"}\n                          {...params}\n                          label=\"Select Category\"\n                        />\n                      )}\n                      onChange={(e, newMember) =>\n                        setData((old) => ({\n                          ...old,\n                          category_discount: newMember,\n                        }))\n                      }\n                    />\n\n                    {changeData.category_discount.length > 0 && (\n                      <Box mt={1}>\n                        <Typography component={\"span\"} variant=\"body1\">\n                          Discount Limit\n                        </Typography>\n                        <Box\n                          p={1}\n                          sx={{\n                            display: \"flex\",\n                            gap: \"5px\",\n                            flexDirection: \"column\",\n                            maxHeight: 150,\n                            overflow: \"scroll\",\n                          }}\n                        >\n                          {changeData.category_discount.map((item) => (\n                            <TextField\n                              name={item}\n                              fullWidth\n                              size=\"small\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    {item}\n                                  </InputAdornment>\n                                ),\n                              }}\n                              placeholder={item}\n                              onChange={handleProductFields}\n                              value={\n                                changeData[item] < 100 && changeData[item]\n                                  ? changeData[item]\n                                  : 0\n                              }\n                            />\n                          ))}\n                        </Box>\n                      </Box>\n                    )}\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Apply Discount\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* discount Category Ends */}\n\n            {/*  add primaryMateriel */}\n\n            {form.formType === \"primaryMaterial\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Material\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add your Material and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handlePrimaryMaterial);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <ImagePreviews\n                      text={\"Please Drag and Drop the Material image\"}\n                    >\n                      {\" \"}\n                    </ImagePreviews>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"primaryMaterial_name\"\n                      label=\"Material\"\n                      type=\"text\"\n                      helperText=\"Please enter your primary material\"\n                    />\n\n                    <TextareaAutosize\n                      fullWidth\n                      minRows={5}\n                      id=\"outlined-select\"\n                      name=\"primaryMaterial_description\"\n                      defaultValue={\"Material Description\"}\n                      type=\"text\"\n                      helperText=\"Please enter your primary material description\"\n                    />\n\n                    <FormGroup>\n                      <FormControlLabel\n                        control={<Checkbox name=\"customizations\" />}\n                        label=\"Can Be Customised\"\n                      />\n                    </FormGroup>\n\n                    <FormGroup>\n                      <FormControlLabel\n                        control={<Checkbox name=\"primaryMaterial_status\" />}\n                        label=\"Status (On/Off)\"\n                      />\n                    </FormGroup>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Material\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* add primaryMaterial Ends */}\n\n            {/*  update primaryMaterial */}\n\n            {form.formType === \"update_PrimaryMaterial\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Material\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update your Material and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdatePrimaryMaterial);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <ImagePreviews\n                      text={\"Please Drag and Drop the Material image\"}\n                    >\n                      {\" \"}\n                    </ImagePreviews>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"primaryMaterial_name\"\n                      label=\"Material\"\n                      value={changeData.primaryMaterial_name}\n                      helperText=\"Please enter the update\"\n                    />\n\n                    <TextareaAutosize\n                      fullWidth\n                      minRows={5}\n                      id=\"outlined-select\"\n                      name=\"primaryMaterial_description\"\n                      onChange={handleChangeData}\n                      defaultValue={changeData.primaryMaterial_description}\n                      type=\"text\"\n                      helperText=\"Please enter your primary material description\"\n                    />\n\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox\n                            checked={changeData.customizations}\n                            name=\"customizations\"\n                            onChange={handleProductFields}\n                          />\n                        }\n                        label=\"Can Be Customised\"\n                      />\n                    </FormGroup>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Material\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* update primaryMaterial Ends */}\n\n            {/*  add Supplier */}\n\n            {form.formType === \"add_supplier\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Supplier\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add Supplier and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleSupplier);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"outlined-select\"\n                      name=\"SID\"\n                      disabled\n                      value={SKU || \"\"}\n                      onChange={handleChangeData}\n                      label=\"Supplier ID\"\n                      type=\"text\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      value={changeData.supplier_name}\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"supplier_name\"\n                      label=\"Supplier Name\"\n                      type=\"text\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      value={changeData.mobile}\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"mobile\"\n                      label=\"Mobile\"\n                      type=\"number\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      value={changeData.alt_mobile}\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"alt_mobile\"\n                      label=\"Alternate Number\"\n                      type=\"number\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      value={changeData.specialization}\n                      onChange={handleChangeData}\n                      name=\"specialization\"\n                      label=\"Specialization\"\n                      type=\"text\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      value={changeData.gst_no}\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"gst_no\"\n                      label=\"GST Number\"\n                      type=\"text\"\n                    />\n\n                    <TextareaAutosize\n                      size=\"small\"\n                      fullWidth\n                      placeholder=\"Address\"\n                      minRows={5}\n                      maxRows={5}\n                      value={changeData.address}\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"address\"\n                      label=\"Address\"\n                      type=\"text\"\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Supplier\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* add Suppliers  Ends */}\n\n            {/*  update Suppliers  */}\n\n            {form.formType === \"update_supplier\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Supplier\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update supplier and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateSupplier);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      disabled\n                      id=\"outlined-select\"\n                      name=\"SID\"\n                      value={changeData.SID || \"\"}\n                      onChange={handleChangeData}\n                      label=\"Supplier ID\"\n                      type=\"text\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      value={changeData.supplier_name || \"\"}\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"supplier_name\"\n                      label=\"Supplier Name\"\n                      type=\"text\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      value={changeData.mobile || \"\"}\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"mobile\"\n                      label=\"Mobile\"\n                      type=\"number\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      value={changeData.alt_mobile || \"\"}\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"alt_mobile\"\n                      label=\"Alternate Number\"\n                      type=\"number\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      value={changeData.specialization || \"\"}\n                      onChange={handleChangeData}\n                      name=\"specialization\"\n                      label=\"Specialization\"\n                      type=\"text\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      value={changeData.gst_no || \"\"}\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"gst_no\"\n                      label=\"GST Number\"\n                      type=\"text\"\n                    />\n\n                    <TextareaAutosize\n                      size=\"small\"\n                      fullWidth\n                      placeholder=\"Address\"\n                      minRows={5}\n                      maxRows={5}\n                      value={changeData.address || \"\"}\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"address\"\n                      label=\"Address\"\n                      type=\"text\"\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Supplier\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* update suppliers Ends */}\n\n            {/*  update blog  */}\n\n            {form.formType === \"update_blog\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Blog\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update your blog and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <Modal\n                    aria-labelledby=\"transition-modal-title\"\n                    aria-describedby=\"transition-modal-description\"\n                    open={open}\n                    onClose={() => {\n                      setOpen(false);\n                    }}\n                    closeAfterTransition\n                    BackdropComponent={Backdrop}\n                    BackdropProps={{\n                      timeout: 500,\n                    }}\n                  >\n                    <Fade in={open}>\n                      <Box sx={style}>\n                        <form\n                          className=\"form\"\n                          id=\"myForm\"\n                          onSubmit={(e) => {\n                            confirmBox(e, handleUpload);\n                          }}\n                          encType=\"multipart/form-data\"\n                          method=\"post\"\n                        >\n                          <FormLabel id=\"demo-radio-buttons-group-label\">\n                            Get Image Url\n                          </FormLabel>\n\n                          <ImagePreviews\n                            text={\"Please Drag and Drop the Image \"}\n                          >\n                            {\" \"}\n                          </ImagePreviews>\n\n                          <TextField\n                            size=\"small\"\n                            fullWidth\n                            disabled\n                            id=\"outlined-select\"\n                            label=\"Image URL\"\n                            value={url || \"\"}\n                          />\n\n                          <Button\n                            color=\"primary\"\n                            type=\"submit\"\n                            variant=\"contained\"\n                          >\n                            Get Url\n                          </Button>\n                        </form>\n                      </Box>\n                    </Fade>\n                  </Modal>\n\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateBlog);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <FeaturesPreviews\n                      text={\"Please Drag and Drop the Card Image \"}\n                    >\n                      {\" \"}\n                    </FeaturesPreviews>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"seo_title\"\n                      label=\"SEO Title\"\n                      value={changeData.seo_title}\n                      onChange={handleChangeData}\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"seo_description\"\n                      label=\"SEO Description\"\n                      value={changeData.seo_description}\n                      onChange={handleChangeData}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      value={changeData.card_description}\n                      onChange={handleChangeData}\n                      name=\"card_description\"\n                      label=\"Card Description\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      value={changeData.title}\n                      onChange={handleChangeData}\n                      name=\"title\"\n                      label=\"Blog Title\"\n                    />\n                    {/* product description  */}\n\n                    <Editor\n                      apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                      initialValue={`${changeData.description}`}\n                      onInit={(event, editor) => (editorRef.current = editor)}\n                      init={{\n                        height: 400,\n                        menubar: true,\n                        plugins: \"image code\",\n                      }}\n                    />\n\n                    <div className=\"getLinkButton\">\n                      <TextField\n                        size=\"small\"\n                        disabled\n                        fullWidth\n                        id=\"outlined-select\"\n                        label=\"Image URL\"\n                        value={url}\n                      />\n                      <Button\n                        color=\"primary\"\n                        onClick={() => {\n                          setOpen(true);\n                        }}\n                        variant=\"contained\"\n                      >\n                        Upload\n                      </Button>\n                    </div>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Blog\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* add update blog  Ends */}\n\n            {/*   Add BLog */}\n\n            {form.formType === \"addBlog\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Blog\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add your blog and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <Modal\n                    aria-labelledby=\"transition-modal-title\"\n                    aria-describedby=\"transition-modal-description\"\n                    open={open}\n                    onClose={() => {\n                      setOpen(false);\n                    }}\n                    closeAfterTransition\n                    BackdropComponent={Backdrop}\n                    BackdropProps={{\n                      timeout: 500,\n                    }}\n                  >\n                    <Fade in={open}>\n                      <Box sx={style}>\n                        <form\n                          className=\"form\"\n                          id=\"myForm\"\n                          onSubmit={(e) => {\n                            confirmBox(e, handleUpload);\n                          }}\n                          encType=\"multipart/form-data\"\n                          method=\"post\"\n                        >\n                          <FormLabel id=\"demo-radio-buttons-group-label\">\n                            Get Image Url\n                          </FormLabel>\n\n                          <ImagePreviews\n                            text={\"Please Drag and Drop the Image \"}\n                          >\n                            {\" \"}\n                          </ImagePreviews>\n\n                          <TextField\n                            size=\"small\"\n                            fullWidth\n                            disabled\n                            id=\"outlined-select\"\n                            label=\"Image URL\"\n                            value={url || \"\"}\n                          />\n\n                          <Button\n                            color=\"primary\"\n                            type=\"submit\"\n                            variant=\"contained\"\n                          >\n                            Get Url\n                          </Button>\n                        </form>\n                      </Box>\n                    </Fade>\n                  </Modal>\n\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleAddBlog);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Add Blog Description\n                    </FormLabel>\n\n                    <FeaturesPreviews\n                      text={\"Please Drag and Drop the Card Image \"}\n                    >\n                      {\" \"}\n                    </FeaturesPreviews>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"seo_title\"\n                      label=\"SEO Title\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"seo_description\"\n                      label=\"SEO Description\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"card_description\"\n                      label=\"Card Description\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"title\"\n                      label=\"Blog Title\"\n                    />\n                    {/* product description  */}\n                    <Editor\n                      apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                      initialValue=\"<p>Write Blog Here!!!</p>\"\n                      onInit={(event, editor) => (editorRef.current = editor)}\n                      init={{\n                        height: 400,\n                        menubar: true,\n                        plugins: \"image code\",\n                      }}\n                    />\n\n                    <div className=\"getLinkButton\">\n                      <TextField\n                        size=\"small\"\n                        disabled\n                        fullWidth\n                        id=\"outlined-select\"\n                        label=\"Image URL\"\n                        value={url}\n                      />\n                      <Button\n                        color=\"primary\"\n                        onClick={() => {\n                          setOpen(true);\n                        }}\n                        variant=\"contained\"\n                      >\n                        Upload\n                      </Button>\n                    </div>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Blog\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* Add Blog Ends */}\n\n            {/*  add subCategory */}\n\n            {form.formType === \"subcategory\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Sub Category\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add your sub category and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleSubCategories);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <ImagePreviews\n                      text={\n                        \"Please Drag and Drop a image for sub Category image\"\n                      }\n                    >\n                      {\" \"}\n                    </ImagePreviews>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      select\n                      name=\"category_id\"\n                      label=\"Category\"\n                      value={cat}\n                      multiple\n                      onChange={handleChange}\n                      helperText=\"Please select your category\"\n                    >\n                      {category.map(\n                        (option) =>\n                          option.category_status && (\n                            <MenuItem key={option._id} value={option._id}>\n                              {option.category_name}\n                            </MenuItem>\n                          )\n                      )}\n                    </TextField>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"sub_category_name\"\n                      label=\"Sub Category\"\n                      type=\"text\"\n                      helperText=\"Please enter your sub category\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Title\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_title\"\n                      value={changeData.seo_title}\n                      onChange={handleProductFields}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Description\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_description\"\n                      value={changeData.seo_description}\n                      onChange={handleProductFields}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Keyword\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_keyword\"\n                      value={changeData.seo_keyword}\n                      onChange={handleProductFields}\n                    />\n\n                    {/* product description  */}\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Product Description\n                    </FormLabel>\n\n                    <TextareaAutosize\n                      fullWidth\n                      minRows={5}\n                      id=\"outlined-select\"\n                      name=\"product_description\"\n                      onChange={handleProductFields}\n                      defaultValue={changeData.product_description}\n                      type=\"text\"\n                      helperText=\"Please enter your product description\"\n                    />\n\n                    <FormGroup>\n                      <FormControlLabel\n                        control={<Checkbox name=\"sub_category_status\" />}\n                        label=\"Status (On/Off)\"\n                      />\n                    </FormGroup>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Sub Category\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* add sebCategory Ends */}\n\n            {/*update subCategory */}\n\n            {form.formType === \"update_Subcategory\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Sub Category\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add your update sub category and necessary information\n                      from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateSubCategories);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <ImagePreviews\n                      text={\"Please Drag and Drop a image for Sub Category.\"}\n                    >\n                      {\" \"}\n                    </ImagePreviews>\n\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Category\n                    </FormLabel>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"outlined-select\"\n                      select\n                      name=\"category_id\"\n                      displayEmpty\n                      value={cat}\n                      multiple\n                      onChange={handleChange}\n                      helperText=\"Please select your category\"\n                    >\n                      {category.map(\n                        (option) =>\n                          option.category_status && (\n                            <MenuItem key={option._id} value={option._id}>\n                              {option.category_name}\n                            </MenuItem>\n                          )\n                      )}\n                    </TextField>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"outlined-select\"\n                      name=\"sub_category_name\"\n                      label=\"Sub Category\"\n                      value={changeData.sub_category_name || \"\"}\n                      onChange={handleProductFields}\n                      type=\"text\"\n                      helperText=\"Please enter your sub category\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Title\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_title\"\n                      value={changeData.seo_title}\n                      onChange={handleProductFields}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Description\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_description\"\n                      value={changeData.seo_description}\n                      onChange={handleProductFields}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Keyword\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_keyword\"\n                      value={changeData.seo_keyword}\n                      onChange={handleProductFields}\n                    />\n\n                    {/* product description  */}\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Product Description\n                    </FormLabel>\n\n                    <TextareaAutosize\n                      fullWidth\n                      minRows={5}\n                      id=\"outlined-select\"\n                      name=\"product_description\"\n                      onChange={handleProductFields}\n                      defaultValue={changeData.product_description}\n                      type=\"text\"\n                      helperText=\"Please enter your product description\"\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Sub Category\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* update sebCategory Ends */}\n\n            {/*  add Customer */}\n\n            {form.formType === \"add_customer\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Customer\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add customer details and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n                {/* addres form */}\n                <AddressForm\n                  setOpen={setOpen}\n                  open={open}\n                  confirmBox={confirmBox}\n                  handleAddress={handleAddress}\n                />\n                {/* addres form */}\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleCustomer);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <ImagePreviews\n                      text={\"Please Drag and Drop the Profile Picture\"}\n                    >\n                      {\" \"}\n                    </ImagePreviews>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"username\"\n                      label=\"Customer Name\"\n                      type=\"text\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"email\"\n                      label=\"Customer Email\"\n                      type=\"text\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"mobile\"\n                      label=\"Contact Number\"\n                      type=\"number\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"password\"\n                      label=\"Password\"\n                      type=\"password\"\n                    />\n\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Shipping Address\n                    </FormLabel>\n                    <Grid container>\n                      {address &&\n                        address.map((item) => {\n                          return (\n                            <Grid item xs={3}>\n                              <Box\n                                sx={{\n                                  overflowWrap: \"break-word\",\n                                  border: \"2px solid #a52a2a80\",\n                                  borderStyle: \"dashed\",\n                                  p: 1,\n                                  ml: 1,\n                                  mr: 1,\n                                  width: \"130px\",\n                                  height: \"150px\",\n                                  overflow: \"hidden\",\n                                }}\n                              >\n                                <Typography variant=\"caption\">\n                                  {item.shipping}\n                                </Typography>\n                              </Box>\n                            </Grid>\n                          );\n                        })}\n                      <Grid item xs={3}>\n                        <Button\n                          variant=\"outlined\"\n                          sx={{ width: \"20%\" }}\n                          onClick={() => {\n                            setOpen(true);\n                          }}\n                        >\n                          <AddIcon />\n                        </Button>\n                      </Grid>\n                    </Grid>\n\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox\n                            checked={changeData.marketing}\n                            onChange={handleProductFields}\n                            name=\"marketing\"\n                          />\n                        }\n                        label=\"Marketing\"\n                      />\n                    </FormGroup>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Customer\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* add Customer Ends */}\n            {/*  update Customer */}\n\n            {form.formType === \"update_customer\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Customer\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update customer details and necessary information from\n                      here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateCustomer);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <ImagePreviews\n                      text={\"Please Drag and Drop the Profile Picture\"}\n                    >\n                      {\" \"}\n                    </ImagePreviews>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      value={changeData.username}\n                      onChange={handleProductFields}\n                      id=\"outlined-select\"\n                      name=\"username\"\n                      label=\"Customer Name\"\n                      type=\"text\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      value={changeData.email}\n                      onChange={handleProductFields}\n                      id=\"outlined-select\"\n                      name=\"email\"\n                      label=\"Customer Email\"\n                      type=\"text\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      value={changeData.mobile}\n                      onChange={handleProductFields}\n                      id=\"outlined-select\"\n                      name=\"mobile\"\n                      label=\"Contact Number\"\n                      type=\"number\"\n                    />\n                    {/*  <TextField sx = {{mb : 2}} size=\"small\"\n                      fullWidth\n                      value={changeData.pincode}\n                      onChange={handleProductFields}\n                      id=\"outlined-select\"\n                      name=\"pincode\"\n                      label=\"Pin-Code\"\n                      type=\"number\"\n                    /> */}\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      value={changeData.city}\n                      onChange={handleProductFields}\n                      id=\"outlined-select\"\n                      name=\"city\"\n                      label=\"City\"\n                      type=\"text\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      value={changeData.state}\n                      onChange={handleProductFields}\n                      id=\"outlined-select\"\n                      name=\"state\"\n                      label=\"state\"\n                      type=\"text\"\n                    />\n                    {/*  <TextField sx = {{mb : 2}} size=\"small\"\n                      fullWidth\n                      value={changeData.landmark}\n                      onChange={handleProductFields}\n                      id=\"outlined-select\"\n                      name=\"landmark\"\n                      label=\"Landmark\"\n                      type=\"text\"\n                      helperText = 'Place nearby the main building.'\n                    /> */}\n\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Shipping Address\n                    </FormLabel>\n\n                    <TextareaAutosize\n                      fullWidth\n                      minRows={5}\n                      value={changeData.shipping || \"\"}\n                      onChange={handleProductFields}\n                      id=\"outlined-select\"\n                      name=\"shipping\"\n                      type=\"text\"\n                      helperText=\"Please enter your primary material description\"\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Customer\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* update Customer Ends */}\n\n            {/* add order */}\n\n            {form.formType === \"add_order\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Order\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add order details and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleOrder);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      disabled\n                      id=\"outlined-select\"\n                      value={SKU || \"\"}\n                      name=\"OID\"\n                      label=\"Order ID\"\n                      type=\"text\"\n                      helperText=\"Search the customer for details\"\n                    />\n\n                    <InputLabel id=\"demo-multiple-checkbox-label\">\n                      Product\n                    </InputLabel>\n                    <Select\n                      multiple\n                      fullWidth\n                      value={changeData.product_array}\n                      name=\"product_array\"\n                      onChange={handleProductFields}\n                      renderValue={(selected) => selected.join(\", \")}\n                    >\n                      {SKUCatalog.map((option) => (\n                        <MenuItem key={option._id} value={option.SKU}>\n                          <Checkbox\n                            checked={\n                              changeData.product_array.indexOf(option.SKU) > -1\n                            }\n                          />\n                          <ListItemText primary={option.SKU} />\n                        </MenuItem>\n                      ))}\n                    </Select>\n\n                    <Box>\n                      <TextField\n                        size=\"small\"\n                        fullWidth\n                        // required\n                        id=\"outlined-select\"\n                        onChange={handleProductFields}\n                        value={changeData.searchCustomer || \"\"}\n                        name=\"searchCustomer\"\n                        // onChange = {loadList}\n                        label=\"Customer mobile number...\"\n                        type=\"text\"\n                        helperText=\"Search the customer for details\"\n                      />\n\n                      <Box\n                        sx={{\n                          boxShadow: 2,\n                          position: \"fixed\",\n                          bgcolor: \"white\",\n                          zIndex: 2,\n                          width: \"88%\",\n                          display:\n                            changeData.searchCustomer !== \"\" &&\n                            changeData.searchCustomer !== changeData.display\n                              ? \"block\"\n                              : \"none\",\n                        }}\n                      >\n                        {changeData.searchCustomer !== \"\" &&\n                          changeData.searchCustomer !== changeData.display &&\n                          customer.map((row) => {\n                            return row.mobile\n                              .toString()\n                              .includes(changeData.searchCustomer) ||\n                              row.username\n                                .toLowerCase()\n                                .includes(\n                                  changeData.searchCustomer.toLowerCase()\n                                ) ? (\n                              <MenuItem\n                                onClick={() => {\n                                  setData({\n                                    ...changeData,\n                                    searchCustomer: row.mobile,\n                                    display: row.mobile,\n                                  });\n                                }}\n                                key={row.mobile}\n                              >\n                                {row.username} ({row.mobile})\n                              </MenuItem>\n                            ) : (\n                              console.log()\n                            );\n                          })}\n                      </Box>\n                    </Box>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"paid_amount\"\n                      label=\"Paid Amount\"\n                      type=\"number\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"total_amount\"\n                      label=\"Total Amount\"\n                      type=\"number\"\n                    />\n\n                    {changeData.searchCustomer === \"\" && (\n                      <>\n                        {\" \"}\n                        <TextField\n                          size=\"small\"\n                          fullWidth\n                          required\n                          id=\"outlined-select\"\n                          name=\"customer_name\"\n                          label=\"Customer Name\"\n                          type=\"text\"\n                        />\n                        <TextField\n                          size=\"small\"\n                          fullWidth\n                          required\n                          id=\"outlined-select\"\n                          name=\"customer_email\"\n                          label=\"Customer Email\"\n                          type=\"text\"\n                        />\n                        <TextField\n                          size=\"small\"\n                          fullWidth\n                          required\n                          id=\"outlined-select\"\n                          name=\"customer_mobile\"\n                          label=\"Contact Number\"\n                          type=\"number\"\n                        />\n                        <TextField\n                          size=\"small\"\n                          fullWidth\n                          required\n                          id=\"outlined-select\"\n                          name=\"city\"\n                          label=\"City\"\n                          type=\"text\"\n                        />\n                        <TextField\n                          size=\"small\"\n                          fullWidth\n                          required\n                          id=\"outlined-select\"\n                          name=\"state\"\n                          label=\"state\"\n                          type=\"text\"\n                        />\n                        <FormLabel id=\"demo-radio-buttons-group-label\">\n                          Shipping Address\n                        </FormLabel>\n                        <TextareaAutosize\n                          fullWidth\n                          minRows={5}\n                          id=\"outlined-select\"\n                          name=\"shipping\"\n                          type=\"text\"\n                          helperText=\"Please enter your primary material description\"\n                        />\n                      </>\n                    )}\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Order\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* add Hardware */}\n\n            {form.formType === \"hardware\" && (\n              <Grid container p={5} className=\"productPadding\">\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Hardware\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add your hardware and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleHardware);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <Stepper\n                      className=\"stepper\"\n                      activeStep={activeStep}\n                      orientation=\"vertical\"\n                    >\n                      {/* // Specification */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(0)}\n                        >\n                          Specifications\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              disabled\n                              id=\"fullWidth\"\n                              label=\"SKU\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"SKU\"\n                              value={SKU || \"\"}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"title\"\n                              value={changeData.title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              required\n                              id=\"outlined-select\"\n                              select\n                              disabled\n                              name=\"category_name\"\n                              label=\"Category\"\n                              value={changeData.category_name || \"\"}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your category\"\n                            >\n                              {category.map(\n                                (option) =>\n                                  option.category_status && (\n                                    <MenuItem\n                                      key={option._id}\n                                      value={option._id}\n                                    >\n                                      {option.category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              // fullWidth\n                              required\n                              id=\"outlined-select\"\n                              select\n                              name=\"sub_category_name\"\n                              label=\"Sub Category\"\n                              multiple\n                              value={changeData.sub_category_name}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your sub category\"\n                            >\n                              {subCategory.map(\n                                (option) =>\n                                  changeData.category_name ===\n                                    option.category_id && (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option._id}\n                                    >\n                                      {option.sub_category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              {/* <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem> */}\n                            </TextField>\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Material\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.primary_material}\n                              name=\"primary_material\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                              // MenuProps={MenuProps}\n                            >\n                              {materialCatalog.map((option) => (\n                                <MenuItem\n                                  key={option._id}\n                                  value={option.primaryMaterial_name}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.primary_material.indexOf(\n                                        option.primaryMaterial_name\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText\n                                    primary={option.primaryMaterial_name}\n                                  />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Showroom Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"showroom_price\"\n                              value={changeData.showroom_price}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // disabled\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Selling Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              value={\n                                // changeData.MRP > 0 &&\n                                //   changeData.discount_limit > 0\n                                //   ? (changeData.selling_price =\n                                //     changeData.MRP -\n                                //     (changeData.MRP / 100) *\n                                //     changeData.discount_limit)\n                                //   : 0\n                                changeData.selling_price\n                              }\n                              onChange={handleProductFields}\n                              variant=\"outlined\"\n                              name=\"selling_price\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              onChange={(e) => {\n                                handleDiscount(e);\n                                handleProductFields(e);\n                              }}\n                              label=\"Discount Limit\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"discount_limit\"\n                              value={changeData.discount_limit}\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.online_store}\n                                  onChange={handleProductFields}\n                                  name=\"online_store\"\n                                />\n                              }\n                              label=\"Online Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.mobile_store}\n                                  onChange={handleProductFields}\n                                  name=\"mobile_store\"\n                                />\n                              }\n                              label=\"Mobile Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.status}\n                                  onChange={handleProductFields}\n                                  name=\"status\"\n                                />\n                              }\n                              label=\"Status\"\n                            />\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* // Specification Ends*/}\n\n                      {/* Images */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(1)}\n                        >\n                          Images\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 4}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            {/* <AcceptMaxFiles className=\"dorpContainer\"/> */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Images\n                            </FormLabel>\n                            <ProductsPreviews\n                              text={\n                                \"Make Sure the picture ratio should be in 1:1.\"\n                              }\n                            ></ProductsPreviews>\n                            {/* // image selection  */}\n                            {files.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                {files.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = files;\n                                            console.log(\">>>>>>\", temp, files);\n                                            temp.splice(index, 1);\n                                            setFiles([...temp]);\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={URL.createObjectURL(img)}\n                                          alt={img.name}\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // image Squence  Images */}\n                            {files.length > 0 && (\n                              <ImageSquence\n                                text={\"New Images\"}\n                                image={files}\n                                setImage={setFiles}\n                                savedImage={false}\n                              />\n                            )}\n                            {files.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                {files.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = files;\n                                            console.log(\">>>>>>\", temp, files);\n                                            temp.splice(index, 1);\n                                            setFiles([...temp]);\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={URL.createObjectURL(img)}\n                                          alt={img.name}\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // featured images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"featured_image\"\n                              label=\"Feature Image\"\n                              value={changeData.featured_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Featured Image\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // specification images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"specification_image\"\n                              label=\"Specification Image\"\n                              value={changeData.specification_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your specification image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 4}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Images End */}\n\n                      {/* Inventory & Shipping */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(2)}\n                        >\n                          Inventory & Shipping\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 3}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <FormGroup>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Return & Payment Policy\n                              </FormLabel>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.COD}\n                                    onChange={handleProductFields}\n                                    name=\"COD\"\n                                  />\n                                }\n                                label=\"COD Available\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.returnable}\n                                    onChange={handleProductFields}\n                                    name=\"returnable\"\n                                  />\n                                }\n                                label=\"Return Item\"\n                              />\n                            </FormGroup>\n                            {changeData.returnable && (\n                              <>\n                                <Typography\n                                  component={\"span\"}\n                                  variant=\"Caption\"\n                                >\n                                  {\" \"}\n                                  Return in {changeData.returnDays} Days\n                                </Typography>\n                                <Slider\n                                  aria-label=\"Return Days\"\n                                  defaultValue={0}\n                                  size=\"small\"\n                                  name=\"returnDays\"\n                                  value={changeData.returnDays}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your return days\"\n                                  valueLabelDisplay=\"auto\"\n                                />\n                              </>\n                            )}\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Restocking in {changeData.restocking_time} Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"restocking time\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"restocking_time\"\n                              value={changeData.restocking_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your restocking time.\"\n                            />\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Stock Warehouse\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.warehouse}\n                              name=\"warehouse\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                            >\n                              {warehouse.map((option) => (\n                                <MenuItem\n                                  key={option.label}\n                                  value={option.value}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.warehouse.indexOf(\n                                        option.value\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText primary={option.value} />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            {changeData.warehouse.map((row) => {\n                              let stock;\n                              row === \"Jodhpur (Rajasthan)\"\n                                ? (stock = \"jodhpur_stock\")\n                                : (stock = \"bangalore_stock\");\n                              return (\n                                <>\n                                  <TextField\n                                    size=\"small\"\n                                    fullWidth\n                                    name={stock}\n                                    label={row + \" Stock\"}\n                                    type=\"number\"\n                                    value={changeData[stock] || \"\"}\n                                    onChange={handleProductFields}\n                                  />\n                                </>\n                              );\n                            })}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Packaging Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_weight\"\n                              value={changeData.package_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Length\"\n                              type=\"number\"\n                              value={changeData.package_length}\n                              onChange={handleProductFields}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_length\"\n                              helperText=\"From left to right\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_breadth\"\n                              value={changeData.package_breadth}\n                              onChange={handleProductFields}\n                              helperText=\"From front to back\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_height\"\n                              value={changeData.package_height}\n                              onChange={handleProductFields}\n                              helperText=\"From bottom to top\"\n                            />\n                            <Box sx={{ display: \"flex\", mb: 1 }}>\n                              <TextField\n                                size=\"small\"\n                                sx={{ width: \"85%\" }}\n                                id=\"fullWidth\"\n                                label=\"Quantity\"\n                                type=\"Number\"\n                                variant=\"outlined\"\n                                name=\"quantity\"\n                                value={changeData.quantity}\n                                onChange={handleProductFields}\n                              />\n\n                              <TextField\n                                id=\"outlined-select-currency\"\n                                select\n                                sx={{ ml: 1 }}\n                                size=\"small\"\n                                label=\"Unit\"\n                                name=\"unit\"\n                                value={changeData.unit || \"\"}\n                                onChange={handleProductFields}\n                              >\n                                {unitCatalog.map((option) => (\n                                  <MenuItem\n                                    key={option.value}\n                                    value={option.value}\n                                  >\n                                    {option.label}\n                                  </MenuItem>\n                                ))}\n                              </TextField>\n                            </Box>\n                            <Box sx={{ display: \"flex\", mb: 1 }}>\n                              <TextField\n                                size=\"small\"\n                                sx={{ width: \"85%\" }}\n                                id=\"fullWidth\"\n                                label=\"Minimum Quantity For Sell\"\n                                type=\"Number\"\n                                variant=\"outlined\"\n                                name=\"min_quantity\"\n                                value={changeData.min_quantity}\n                                onChange={handleProductFields}\n                              />\n\n                              <TextField\n                                id=\"outlined-select-currency\"\n                                select\n                                sx={{ ml: 1 }}\n                                size=\"small\"\n                                label=\"Unit\"\n                                name=\"unit\"\n                                value={changeData.unit || \"\"}\n                                onChange={handleProductFields}\n                              >\n                                {unitCatalog.map((option) => (\n                                  <MenuItem\n                                    key={option.value}\n                                    value={option.value}\n                                  >\n                                    {option.label}\n                                  </MenuItem>\n                                ))}\n                              </TextField>\n                            </Box>\n                            <FormGroup>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.continue_selling}\n                                    onChange={handleProductFields}\n                                    name=\"continue_selling\"\n                                  />\n                                }\n                                label=\"Continue Selling\"\n                              />\n                            </FormGroup>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 3}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Inventory & Shipping End */}\n\n                      {/* SEO */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(3)}\n                        >\n                          SEO\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 4}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_title\"\n                              value={changeData.seo_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Description\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_description\"\n                              value={changeData.seo_description}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Keyword\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_keyword\"\n                              value={changeData.seo_keyword}\n                              onChange={handleProductFields}\n                            />\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n                            <Grid container sx={{ mt: 1 }}>\n                              <Grid item xs={12}>\n                                <Grid\n                                  container\n                                  sx={{\n                                    display: \"flex\",\n                                    alignItem: \"center\",\n                                    justifyContent: \"space-between\",\n                                  }}\n                                >\n                                  <Grid item xs={11}>\n                                    <TextField\n                                      fullWidth\n                                      value={changeData.item || \"\"}\n                                      size={\"small\"}\n                                      type=\"text\"\n                                      name=\"item\"\n                                      onChange={handleProductFields}\n                                      label=\"Write a point...\"\n                                    />\n                                  </Grid>\n                                  <Grid item xs={0.8}>\n                                    {changeData.select === undefined ? (\n                                      <Button\n                                        fullWidth\n                                        onClick={() => {\n                                          changeData.item !== \"\" &&\n                                            setData({\n                                              ...changeData,\n                                              selling_points: [\n                                                ...changeData.selling_points,\n                                                changeData.item,\n                                              ],\n                                              item: \"\",\n                                            });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Add\n                                      </Button>\n                                    ) : (\n                                      <Button\n                                        onClick={() => {\n                                          setData({\n                                            ...changeData,\n                                            selling_points:\n                                              changeData.selling_points.filter(\n                                                (row, i) => {\n                                                  return (\n                                                    i !== changeData.select\n                                                  );\n                                                }\n                                              ),\n                                            select: undefined,\n                                          });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Remove\n                                      </Button>\n                                    )}\n                                  </Grid>\n                                </Grid>\n                              </Grid>\n                              {changeData.selling_points.length > 0 && (\n                                <Grid\n                                  sx={{\n                                    maxHeight: \"100px\",\n                                    overflowY: \"scroll\",\n                                    mb: 1,\n                                    border: \"2px solid #91441f\",\n                                    padding: \"7px\",\n                                  }}\n                                  item\n                                  xs={12}\n                                >\n                                  <ul style={{ listStyleType: \"square\" }}>\n                                    {changeData.selling_points &&\n                                      changeData.selling_points.map(\n                                        (item, index) => {\n                                          return (\n                                            <li>\n                                              <Typography\n                                                sx={{ cursor: \"pointer\" }}\n                                                onClick={() => {\n                                                  setData({\n                                                    ...changeData,\n                                                    select: index,\n                                                    item: item,\n                                                  });\n                                                }}\n                                                variant=\"body\"\n                                              >\n                                                {index + 1 + \". \"}\n                                                {item}\n                                              </Typography>\n                                            </li>\n                                          );\n                                        }\n                                      )}\n                                  </ul>\n                                </Grid>\n                              )}\n                            </Grid>\n                            {/* product description  */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Description\n                            </FormLabel>\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"product_description\"\n                              onChange={handleProductFields}\n                              defaultValue={changeData.product_description}\n                              type=\"text\"\n                              helperText=\"Please enter your product description\"\n                            />\n                            {/* <Editor\n                              apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                              onInit={(event, editor) =>\n                                (editorRef.current = editor)\n                              }\n                              init={{\n                                height: 300,\n                                menubar: true,\n                              }}\n                            /> */}\n                            {/* selling points  */}\n                            {/* <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"selling_points\"\n                              defaultValue={\"Selling Points\" || changeData.selling_points}\n                              type=\"text\"\n                              helperText=\"Please enter your selling points.\"\n                            /> */}\n                            {/* <Editor\n                              apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                              onInit={(event, editor) =>\n                                (sellingRef.current = editor)\n                              }\n                              init={{\n                                height: 400,\n                                menubar: true,\n                              }}\n                            /> */}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 4}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* SEO End */}\n\n                      {/* Extra details */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(4)}\n                        >\n                          Extra Details\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 4}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            {/* <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"hardware_polish\"\n                              label=\"Hardware Polish\"\n                              value={changeData.hardware_polish || \"\"}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Hardware Polish\"\n                            >\n                              {catalog.polish.length > 0 &&\n                                catalog.polish.map((option) => (\n                                  <MenuItem\n                                    key={option.polish_name}\n                                    value={option.polish_name}\n                                  >\n                                    {option.polish_name}\n                                  </MenuItem>\n                                ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField> */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Product Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"weight\"\n                              value={changeData.weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"tax_rate\"\n                              label=\"Tax Rate\"\n                              value={changeData.tax_rate}\n                              type\n                              onChange={handleProductFields}\n                              helperText=\"Please select your tax rate.\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                            >\n                              {taxRateCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 4}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Extra details */}\n                    </Stepper>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Hardware\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* add Hardware Ends */}\n            {/* update Hardware */}\n\n            {form.formType === \"update_hardware\" && (\n              <Grid container p={5} className=\"productPadding\">\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Hardware\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update your hardware and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateHardware);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <Stepper\n                      className=\"stepper\"\n                      activeStep={activeStep}\n                      orientation=\"vertical\"\n                    >\n                      {/* // Specification */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(0)}\n                        >\n                          Specifications\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              disabled\n                              id=\"fullWidth\"\n                              label=\"SKU\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"SKU\"\n                              value={SKU || \"\"}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"title\"\n                              value={changeData.title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              required\n                              id=\"outlined-select\"\n                              select\n                              disabled\n                              name=\"category_name\"\n                              label=\"Category\"\n                              value={changeData.category_name || \"\"}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your category\"\n                            >\n                              {category.map(\n                                (option) =>\n                                  option.category_status && (\n                                    <MenuItem\n                                      key={option._id}\n                                      value={option._id}\n                                    >\n                                      {option.category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              {/* <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem> */}\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              required\n                              id=\"outlined-select\"\n                              select\n                              name=\"sub_category_name\"\n                              label=\"Sub Category\"\n                              multiple\n                              value={changeData.sub_category_name}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your sub category\"\n                            >\n                              {subCategory.map(\n                                (option) =>\n                                  changeData.category_name ===\n                                    option.category_id && (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option._id}\n                                    >\n                                      {option.sub_category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              {/* <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem> */}\n                            </TextField>\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Material\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.primary_material || []}\n                              name=\"primary_material\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                              // MenuProps={MenuProps}\n                            >\n                              {materialCatalog.map((option) => (\n                                <MenuItem\n                                  key={option._id}\n                                  value={option.primaryMaterial_name}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.primary_material.indexOf(\n                                        option.primaryMaterial_name\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText\n                                    primary={option.primaryMaterial_name}\n                                  />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Showroom Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"showroom_price\"\n                              value={changeData.showroom_price}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // disabled\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Selling Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              value={\n                                // changeData.MRP > 0 &&\n                                //   changeData.discount_limit > 0\n                                //   ? (changeData.selling_price =\n                                //     changeData.MRP -\n                                //     (changeData.MRP / 100) *\n                                //     changeData.discount_limit)\n                                //   : 0\n                                changeData.selling_price\n                              }\n                              onChange={handleProductFields}\n                              variant=\"outlined\"\n                              name=\"selling_price\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"fullWidth\"\n                              onChange={(e) => {\n                                handleDiscount(e);\n                                handleProductFields(e);\n                              }}\n                              label=\"Discount Limit\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"discount_limit\"\n                              value={changeData.discount_limit}\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.online_store}\n                                  onChange={handleProductFields}\n                                  name=\"online_store\"\n                                />\n                              }\n                              label=\"Online Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.mobile_store}\n                                  onChange={handleProductFields}\n                                  name=\"mobile_store\"\n                                />\n                              }\n                              label=\"Mobile Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.status}\n                                  onChange={handleProductFields}\n                                  name=\"status\"\n                                />\n                              }\n                              label=\"Status\"\n                            />\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* // Specification Ends*/}\n\n                      {/* Images */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(1)}\n                        >\n                          Images\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            {/* <AcceptMaxFiles className=\"dorpContainer\"/> */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Images\n                            </FormLabel>\n                            <ProductsPreviews\n                              text={\"Please Drag and Drop the product images\"}\n                            ></ProductsPreviews>\n                            {/* // image selection  */}\n                            {files.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                {files.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = files;\n                                            console.log(\">>>>>>\", temp, files);\n                                            temp.splice(index, 1);\n                                            setFiles([...temp]);\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={URL.createObjectURL(img)}\n                                          alt={img.name}\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // image Squence  Images */}\n                            {files.length > 0 && (\n                              <ImageSquence\n                                text={\"New Images\"}\n                                image={files}\n                                setImage={setFiles}\n                                savedImage={false}\n                              />\n                            )}\n                            {/* saved Image */}\n                            {changeData.savedImages.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                <FormLabel id=\"demo-radio-buttons-group-label\">\n                                  Saved Images\n                                </FormLabel>\n                                {changeData.savedImages.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = changeData.savedImages;\n                                            temp.splice(index, 1);\n                                            setData({\n                                              ...changeData,\n                                              savedImages: temp,\n                                            });\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={img}\n                                          alt=\"productImage\"\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // image Squence saved Images */}\n                            {changeData.savedImages.length > 0 && (\n                              <ImageSquence\n                                text={\"Saved Images\"}\n                                image={changeData.savedImages}\n                                setImage={setData}\n                                savedImage={true}\n                              />\n                            )}\n                            {/* // featured images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"featured_image\"\n                              label=\"Feature Image\"\n                              value={changeData.featured_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Featured Image\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              {/* {console.log(changeData.savedImages)} */}\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // specification images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"specification_image\"\n                              label=\"Specification Image\"\n                              value={changeData.specification_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your specification image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Images End */}\n\n                      {/* Inventory & Shipping */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(2)}\n                        >\n                          Inventory & Shipping\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 3}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <FormGroup>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Return & Payment Policy\n                              </FormLabel>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.COD}\n                                    onChange={handleProductFields}\n                                    name=\"COD\"\n                                  />\n                                }\n                                label=\"COD Available\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.returnable}\n                                    onChange={handleProductFields}\n                                    name=\"returnable\"\n                                  />\n                                }\n                                label=\"Return Item\"\n                              />\n                            </FormGroup>\n                            {changeData.returnable && (\n                              <>\n                                <Typography\n                                  component={\"span\"}\n                                  variant=\"Caption\"\n                                >\n                                  {\" \"}\n                                  Return in {changeData.returnDays} Days\n                                </Typography>\n                                <Slider\n                                  aria-label=\"Return Days\"\n                                  defaultValue={0}\n                                  size=\"small\"\n                                  name=\"returnDays\"\n                                  value={changeData.returnDays}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your return days\"\n                                  valueLabelDisplay=\"auto\"\n                                />\n                              </>\n                            )}\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Restocking in {changeData.restocking_time} Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"restocking time\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"restocking_time\"\n                              value={changeData.restocking_time || 0}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your restocking time.\"\n                            />\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Stock Warehouse\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.warehouse}\n                              name=\"warehouse\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                            >\n                              {warehouse.map((option) => (\n                                <MenuItem\n                                  key={option.label}\n                                  value={option.value}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.warehouse.indexOf(\n                                        option.value\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText primary={option.value} />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            {changeData.warehouse.map((row) => {\n                              let stock;\n                              row === \"Jodhpur (Rajasthan)\"\n                                ? (stock = \"jodhpur_stock\")\n                                : (stock = \"bangalore_stock\");\n                              return (\n                                <>\n                                  <TextField\n                                    size=\"small\"\n                                    fullWidth\n                                    name={stock}\n                                    label={row + \" Stock\"}\n                                    type=\"number\"\n                                    value={changeData[stock] || \"\"}\n                                    onChange={handleProductFields}\n                                  />\n                                </>\n                              );\n                            })}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Packaging Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_weight\"\n                              value={changeData.package_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Length\"\n                              type=\"number\"\n                              value={changeData.package_length}\n                              onChange={handleProductFields}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_length\"\n                              helperText=\"From left to right\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_breadth\"\n                              value={changeData.package_breadth}\n                              onChange={handleProductFields}\n                              helperText=\"From front to back\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_height\"\n                              value={changeData.package_height}\n                              onChange={handleProductFields}\n                              helperText=\"From bottom to top\"\n                            />\n                            <Box sx={{ display: \"flex\", mb: 1 }}>\n                              <TextField\n                                size=\"small\"\n                                sx={{ width: \"85%\" }}\n                                id=\"fullWidth\"\n                                label=\"Quantity\"\n                                type=\"Number\"\n                                variant=\"outlined\"\n                                name=\"quantity\"\n                                value={changeData.quantity}\n                                onChange={handleProductFields}\n                              />\n\n                              <TextField\n                                id=\"outlined-select-currency\"\n                                select\n                                sx={{ ml: 1 }}\n                                size=\"small\"\n                                label=\"Unit\"\n                                name=\"unit\"\n                                value={changeData.unit || \"\"}\n                                onChange={handleProductFields}\n                              >\n                                {unitCatalog.map((option) => (\n                                  <MenuItem\n                                    key={option.value}\n                                    value={option.value}\n                                  >\n                                    {option.label}\n                                  </MenuItem>\n                                ))}\n                              </TextField>\n                            </Box>\n                            <Box sx={{ display: \"flex\", mb: 1 }}>\n                              <TextField\n                                size=\"small\"\n                                sx={{ width: \"85%\" }}\n                                id=\"fullWidth\"\n                                label=\"Minimum Quantity For Sell\"\n                                type=\"Number\"\n                                variant=\"outlined\"\n                                name=\"min_quantity\"\n                                value={changeData.min_quantity}\n                                onChange={handleProductFields}\n                              />\n\n                              <TextField\n                                id=\"outlined-select-currency\"\n                                select\n                                sx={{ ml: 1 }}\n                                size=\"small\"\n                                label=\"Unit\"\n                                name=\"unit\"\n                                value={changeData.unit || \"\"}\n                                onChange={handleProductFields}\n                              >\n                                {unitCatalog.map((option) => (\n                                  <MenuItem\n                                    key={option.value}\n                                    value={option.value}\n                                  >\n                                    {option.label}\n                                  </MenuItem>\n                                ))}\n                              </TextField>\n                            </Box>\n                            <FormGroup>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.continue_selling}\n                                    onChange={handleProductFields}\n                                    name=\"continue_selling\"\n                                  />\n                                }\n                                label=\"Continue Selling\"\n                              />\n                            </FormGroup>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 3}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Inventory & Shipping End */}\n\n                      {/* SEO */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(3)}\n                        >\n                          SEO\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 4}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_title\"\n                              value={changeData.seo_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Description\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_description\"\n                              value={changeData.seo_description}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Keyword\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_keyword\"\n                              value={changeData.seo_keyword}\n                              onChange={handleProductFields}\n                            />\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n                            <Grid container sx={{ mt: 1 }}>\n                              <Grid item xs={12}>\n                                <Grid\n                                  container\n                                  sx={{\n                                    display: \"flex\",\n                                    alignItem: \"center\",\n                                    justifyContent: \"space-between\",\n                                  }}\n                                >\n                                  <Grid item xs={11}>\n                                    <TextField\n                                      fullWidth\n                                      value={changeData.item || \"\"}\n                                      size={\"small\"}\n                                      type=\"text\"\n                                      name=\"item\"\n                                      onChange={handleProductFields}\n                                      label=\"Write a point...\"\n                                    />\n                                  </Grid>\n                                  <Grid item xs={0.8}>\n                                    {changeData.select === undefined ? (\n                                      <Button\n                                        fullWidth\n                                        onClick={() => {\n                                          changeData.item !== \"\" &&\n                                            setData({\n                                              ...changeData,\n                                              selling_points: [\n                                                ...changeData.selling_points,\n                                                changeData.item,\n                                              ],\n                                              item: \"\",\n                                            });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Add\n                                      </Button>\n                                    ) : (\n                                      <Button\n                                        onClick={() => {\n                                          setData({\n                                            ...changeData,\n                                            selling_points:\n                                              changeData.selling_points.filter(\n                                                (row, i) => {\n                                                  return (\n                                                    i !== changeData.select\n                                                  );\n                                                }\n                                              ),\n                                            select: undefined,\n                                          });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Remove\n                                      </Button>\n                                    )}\n                                  </Grid>\n                                </Grid>\n                              </Grid>\n                              {changeData.selling_points.length > 0 && (\n                                <Grid\n                                  sx={{\n                                    maxHeight: \"100px\",\n                                    overflowY: \"scroll\",\n                                    mb: 1,\n                                    border: \"2px solid #91441f\",\n                                    padding: \"7px\",\n                                  }}\n                                  item\n                                  xs={12}\n                                >\n                                  <ul style={{ listStyleType: \"square\" }}>\n                                    {changeData.selling_points &&\n                                      changeData.selling_points.map(\n                                        (item, index) => {\n                                          return (\n                                            <li>\n                                              <Typography\n                                                sx={{ cursor: \"pointer\" }}\n                                                onClick={() => {\n                                                  setData({\n                                                    ...changeData,\n                                                    select: index,\n                                                    item: item,\n                                                  });\n                                                }}\n                                                variant=\"body\"\n                                              >\n                                                {index + 1 + \". \"}\n                                                {item}\n                                              </Typography>\n                                            </li>\n                                          );\n                                        }\n                                      )}\n                                  </ul>\n                                </Grid>\n                              )}\n                            </Grid>\n                            {/* product description  */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Description\n                            </FormLabel>\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"product_description\"\n                              onChange={handleProductFields}\n                              defaultValue={changeData.product_description}\n                              type=\"text\"\n                              helperText=\"Please enter your product description\"\n                            />\n                            {/* <Editor\n                              apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                              onInit={(event, editor) =>\n                                (editorRef.current = editor)\n                              }\n                              init={{\n                                height: 300,\n                                menubar: true,\n                              }}\n                            /> */}\n                            {/* selling points  */}\n                            {/* <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"selling_points\"\n                              defaultValue={\"Selling Points\" || changeData.selling_points}\n                              type=\"text\"\n                              helperText=\"Please enter your selling points.\"\n                            /> */}\n                            {/* <Editor\n                              apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                              onInit={(event, editor) =>\n                                (sellingRef.current = editor)\n                              }\n                              init={{\n                                height: 400,\n                                menubar: true,\n                              }}\n                            /> */}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 4}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* SEO End */}\n\n                      {/* Extra details */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(4)}\n                        >\n                          Extra Details\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 4}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            {/* <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"hardware_polish\"\n                              label=\"Hardware Polish\"\n                              value={changeData.hardware_polish || \"\"}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Hardware Polish\"\n                            >\n                              {catalog.polish.length > 0 &&\n                                catalog.polish.map((option) => (\n                                  <MenuItem\n                                    key={option.polish_name}\n                                    value={option.polish_name}\n                                  >\n                                    {option.polish_name}\n                                  </MenuItem>\n                                ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField> */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Product Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"weight\"\n                              value={changeData.weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"tax_rate\"\n                              label=\"Tax Rate\"\n                              value={changeData.tax_rate}\n                              type=\"number\"\n                              onChange={handleProductFields}\n                              helperText=\"Please select your tax rate.\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                            >\n                              {taxRateCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 4}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Extra details */}\n                    </Stepper>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Hardware\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* update Hardware Ends */}\n\n            {/* add inward */}\n\n            {form.formType === \"inward\" && (\n              <Grid container p={5} className=\"productPadding\">\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Inward\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add your inward stock and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={2}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleInward);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      fullWidth\n                      id=\"outlined-select\"\n                      required\n                      select\n                      size={\"small\"}\n                      helperText=\"Please select the wearhouse for this operation.\"\n                      name=\"warehouse\"\n                      label=\"Select Warehouse...\"\n                      value={changeData.warehouse || \"\"}\n                      onChange={handleProductFields}\n                      multiple\n                    >\n                      {warehouse.map((option) => (\n                        <MenuItem key={option.value} value={option.value}>\n                          {option.value}\n                        </MenuItem>\n                      ))}\n                      {/* <MenuItem key={\"none\"} value=\"None\">\n                        {\"None\"}\n                      </MenuItem> */}\n                    </TextField>\n\n                    <Autocomplete\n                      disablePortal\n                      size=\"small\"\n                      fullWidth\n                      noOptionsText={\"ex : P-01001\"}\n                      multiple\n                      autoHighlight\n                      id=\"combo-box-demo\"\n                      options={productSKU.P_SKU.map((row) => {\n                        return row.SKU;\n                      })}\n                      renderInput={(params) => (\n                        <TextField\n                          onKeyUpCapture={handleSearch}\n                          value={changeData.product_articles || \"\"}\n                          {...params}\n                          label=\"Product SKU\"\n                        />\n                      )}\n                      onChange={(e, newMember) =>\n                        setData((old) => ({\n                          ...old,\n                          product_articles: newMember,\n                        }))\n                      }\n                    />\n\n                    {changeData.product_articles.length > 0 && (\n                      <Box mt={1}>\n                        <Typography component={\"span\"} variant=\"body1\">\n                          Product Quantities\n                        </Typography>\n                        <Box\n                          p={1}\n                          sx={{\n                            display: \"flex\",\n                            gap: \"5px\",\n                            flexDirection: \"column\",\n                            maxHeight: 150,\n                            overflow: \"scroll\",\n                          }}\n                        >\n                          {changeData.product_articles.map((item) => (\n                            <TextField\n                              name={item}\n                              fullWidth\n                              size=\"small\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    {item}\n                                  </InputAdornment>\n                                ),\n                              }}\n                              placeholder={item}\n                              onChange={handleProductFields}\n                              value={changeData[item] || 0}\n                            />\n                          ))}\n                        </Box>\n                      </Box>\n                    )}\n\n                    <Autocomplete\n                      disablePortal\n                      size=\"small\"\n                      fullWidth\n                      multiple\n                      autoHighlight\n                      noOptionsText={\"ex : H-01001\"}\n                      id=\"combo-box-demo\"\n                      options={productSKU.H_SKU.map((row) => {\n                        return row.SKU;\n                      })}\n                      renderInput={(params) => (\n                        <TextField\n                          onKeyUpCapture={handleSearch}\n                          value={changeData.hardware_articles || \"\"}\n                          {...params}\n                          label=\"Hardware SKU\"\n                        />\n                      )}\n                      onChange={(e, newMember) =>\n                        setData((old) => ({\n                          ...old,\n                          hardware_articles: newMember,\n                        }))\n                      }\n                    />\n\n                    {changeData.hardware_articles.length > 0 && (\n                      <Box mt={1}>\n                        <Typography component={\"span\"} variant=\"body1\">\n                          Hardware Quantities\n                        </Typography>\n                        <Box\n                          p={1}\n                          sx={{\n                            display: \"flex\",\n                            gap: \"5px\",\n                            flexDirection: \"column\",\n                            maxHeight: 150,\n                            overflow: \"scroll\",\n                          }}\n                        >\n                          {changeData.hardware_articles.map((item) => (\n                            <TextField\n                              name={item}\n                              fullWidth\n                              size=\"small\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    {item}\n                                  </InputAdornment>\n                                ),\n                              }}\n                              placeholder={item}\n                              onChange={handleProductFields}\n                              value={changeData[item] || 0}\n                            />\n                          ))}\n                        </Box>\n                      </Box>\n                    )}\n\n                    <Autocomplete\n                      disablePortal\n                      size=\"small\"\n                      fullWidth\n                      required\n                      noOptionsText={\"ex : SID-01001\"}\n                      autoHighlight\n                      clearOnEscape\n                      id=\"combo-box-demo\"\n                      options={productSKU.supplier.map((row) => {\n                        return row.SID;\n                      })}\n                      onChange={(e, newMember) =>\n                        setData((old) => ({ ...old, supplier: newMember }))\n                      }\n                      renderInput={(params) => (\n                        <TextField\n                          onKeyUpCapture={handleSupplierList}\n                          value={changeData.supplier || \"\"}\n                          name=\"supplier\"\n                          {...params}\n                          label=\"Supplier\"\n                        />\n                      )}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"fullWidth\"\n                      label=\"Challan No.\"\n                      type=\"number\"\n                      variant=\"outlined\"\n                      name=\"challan_no\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"fullWidth\"\n                      label=\"Vehicle No.\"\n                      type=\"text\"\n                      inputProps={{ style: { textTransform: \"uppercase\" } }}\n                      variant=\"outlined\"\n                      name=\"vehicle_no\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"fullWidth\"\n                      label=\"Driver Name\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"driver_name\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"fullWidth\"\n                      label=\"Driver Number\"\n                      type=\"Number\"\n                      variant=\"outlined\"\n                      name=\"driver_no\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      select\n                      name=\"purpose\"\n                      label=\"Stage of Inventory\"\n                      value={changeData.purpose || \"\"}\n                      multiple\n                      onChange={handleProductFields}\n                      helperText=\"Please select your purpose\"\n                      required\n                    >\n                      {purpose.map(\n                        (option) =>\n                          option && (\n                            <MenuItem key={option} value={option}>\n                              {option}\n                            </MenuItem>\n                          )\n                      )}\n                    </TextField>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Save\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* add Inward Ends */}\n\n            {/* add Outward */}\n\n            {form.formType === \"outward\" && (\n              <Grid container p={5} className=\"productPadding\">\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Outward\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add your outward stock and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={2}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleOutward);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      fullWidth\n                      id=\"outlined-select\"\n                      required\n                      select\n                      size={\"small\"}\n                      helperText=\"Please select the wearhouse for this operation.\"\n                      name=\"warehouse\"\n                      label=\"Select Warehouse...\"\n                      value={changeData.warehouse || \"\"}\n                      onChange={handleProductFields}\n                      multiple\n                    >\n                      {warehouse.map((option) => (\n                        <MenuItem key={option.value} value={option.value}>\n                          {option.value}\n                        </MenuItem>\n                      ))}\n                      {/* <MenuItem key={\"none\"} value=\"None\">\n                        {\"None\"}\n                      </MenuItem> */}\n                    </TextField>\n\n                    <Autocomplete\n                      disablePortal\n                      size=\"small\"\n                      fullWidth\n                      multiple\n                      autoHighlight\n                      noOptionsText={\"ex : P-01001\"}\n                      id=\"combo-box-demo\"\n                      options={productSKU.P_SKU.map((row) => {\n                        return row.product_id + \" Stock :\" + row.stock;\n                      })}\n                      renderInput={(params) => (\n                        <TextField\n                          onKeyUpCapture={handleSearchStockSKU}\n                          value={changeData.product_articles || \"\"}\n                          {...params}\n                          label=\"Product SKU\"\n                        />\n                      )}\n                      onChange={(e, newMember) =>\n                        setData((old) => ({\n                          ...old,\n                          product_articles: newMember,\n                        }))\n                      }\n                    />\n\n                    {changeData.product_articles.length > 0 && (\n                      <Box mt={1}>\n                        <Typography component={\"span\"} variant=\"body1\">\n                          Product Quantities\n                        </Typography>\n                        <Box\n                          p={1}\n                          sx={{\n                            display: \"flex\",\n                            gap: \"5px\",\n                            flexDirection: \"column\",\n                            maxHeight: 150,\n                            overflow: \"scroll\",\n                          }}\n                        >\n                          {changeData.product_articles.map((item) => (\n                            <TextField\n                              name={item}\n                              fullWidth\n                              size=\"small\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    {item.split(\"Stock\")[0]}\n                                  </InputAdornment>\n                                ),\n                              }}\n                              placeholder={item}\n                              onChange={handleProductFields}\n                              value={\n                                changeData[item] <= parseInt(item.split(\":\")[1])\n                                  ? changeData[item]\n                                  : parseInt(item.split(\":\")[1])\n                              }\n                            />\n                          ))}\n                        </Box>\n                      </Box>\n                    )}\n\n                    <Autocomplete\n                      disablePortal\n                      size=\"small\"\n                      fullWidth\n                      noOptionsText={\"ex : H-01001\"}\n                      multiple\n                      autoHighlight\n                      id=\"combo-box-demo\"\n                      options={productSKU.H_SKU.map((row) => {\n                        return row.product_id + \" Stock :\" + row.stock;\n                      })}\n                      renderInput={(params) => (\n                        <TextField\n                          onKeyUpCapture={handleSearchStockSKU}\n                          value={changeData.hardware_articles || \"\"}\n                          {...params}\n                          label=\"Hardware SKU\"\n                        />\n                      )}\n                      onChange={(e, newMember) =>\n                        setData((old) => ({\n                          ...old,\n                          hardware_articles: newMember,\n                        }))\n                      }\n                    />\n\n                    {changeData.hardware_articles.length > 0 && (\n                      <Box mt={1}>\n                        <Typography component={\"span\"} variant=\"body1\">\n                          Hardware Quantities\n                        </Typography>\n                        <Box\n                          p={1}\n                          sx={{\n                            display: \"flex\",\n                            gap: \"5px\",\n                            flexDirection: \"column\",\n                            maxHeight: 150,\n                            overflow: \"scroll\",\n                          }}\n                        >\n                          {changeData.hardware_articles.map((item) => (\n                            <TextField\n                              name={item}\n                              fullWidth\n                              size=\"small\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    {item.split(\"Stock\")[0]}\n                                  </InputAdornment>\n                                ),\n                              }}\n                              placeholder={item}\n                              onChange={handleProductFields}\n                              value={\n                                changeData[item] <= parseInt(item.split(\":\")[1])\n                                  ? changeData[item]\n                                  : parseInt(item.split(\":\")[1])\n                              }\n                            />\n                          ))}\n                        </Box>\n                      </Box>\n                    )}\n\n                    <Autocomplete\n                      disablePortal\n                      size=\"small\"\n                      fullWidth\n                      required\n                      autoHighlight\n                      clearOnEscape\n                      noOptionsText={\"ex : SID-01001\"}\n                      id=\"combo-box-demo\"\n                      options={productSKU.supplier.map((row) => {\n                        return row.SID;\n                      })}\n                      onChange={(e, newMember) =>\n                        setData((old) => ({ ...old, supplier: newMember }))\n                      }\n                      renderInput={(params) => (\n                        <TextField\n                          onKeyUpCapture={handleSupplierList}\n                          value={changeData.supplier || \"\"}\n                          name=\"supplier\"\n                          {...params}\n                          label=\"Supplier\"\n                        />\n                      )}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      name=\"driver_name\"\n                      id=\"fullWidth\"\n                      label=\"Driver Name\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"fullWidth\"\n                      label=\"Driver Number\"\n                      type=\"number\"\n                      variant=\"outlined\"\n                      name=\"driver_no\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"fullWidth\"\n                      label=\"Vehicle No.\"\n                      inputProps={{ style: { textTransform: \"uppercase\" } }}\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"vehicle_no\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"fullWidth\"\n                      label=\"Challan No.\"\n                      type=\"number\"\n                      variant=\"outlined\"\n                      name=\"challan_no\"\n                    />\n\n                    {/* <TextField  \n                      size=\"small\"\n                      fullWidth\n                      id=\"fullWidth\"\n                      label=\"Quantity\"\n                      type=\"number\"\n                      variant=\"outlined\"\n                      name=\"quantity\"\n                    /> */}\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      select\n                      name=\"purpose\"\n                      label=\"Stage of Inventory\"\n                      value={changeData.purpose || \"\"}\n                      multiple\n                      onChange={handleProductFields}\n                      helperText=\"Please select your purpose\"\n                      required\n                    >\n                      {purpose.map(\n                        (option) =>\n                          option && (\n                            <MenuItem key={option} value={option}>\n                              {option}\n                            </MenuItem>\n                          )\n                      )}\n                    </TextField>\n\n                    <TextareaAutosize\n                      size=\"small\"\n                      fullWidth\n                      minRows={3}\n                      maxRows={3}\n                      // required\n                      resize={\"none\"}\n                      id=\"fullWidth\"\n                      placeholder=\"Please eloburate the reson here...\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"reason\"\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Save\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* add outward Ends */}\n\n            {/* add Transfer */}\n\n            {form.formType === \"transfer\" && (\n              <Grid container p={5} className=\"productPadding\">\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Transfer\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Transfer stock and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={2}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleTransfer);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      fullWidth\n                      id=\"outlined-select\"\n                      select\n                      name=\"warehouse\"\n                      size=\"small\"\n                      required\n                      label=\"From Warehouse\"\n                      value={changeData.warehouse || \"\"}\n                      onChange={handleProductFields}\n                      multiple\n                    >\n                      {warehouse.map((option) => (\n                        <MenuItem key={option.value} value={option.value}>\n                          {option.value}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n\n                    <TextField\n                      fullWidth\n                      id=\"outlined-select\"\n                      select\n                      required\n                      size=\"small\"\n                      name=\"warehouse_to\"\n                      label=\"To Warehouse\"\n                      value={changeData.warehouse_to || \"\"}\n                      onChange={handleProductFields}\n                      multiple\n                    >\n                      {warehouse.map(\n                        (option) =>\n                          changeData.warehouse !== option.value && (\n                            <MenuItem key={option.value} value={option.value}>\n                              {option.value}\n                            </MenuItem>\n                          )\n                      )}\n                    </TextField>\n\n                    <Autocomplete\n                      disablePortal\n                      size=\"small\"\n                      fullWidth\n                      multiple\n                      autoHighlight\n                      noOptionsText={\"ex : P-01001\"}\n                      id=\"combo-box-demo\"\n                      options={productSKU.P_SKU.map((row) => {\n                        return row.product_id + \" Stock :\" + row.stock;\n                      })}\n                      renderInput={(params) => (\n                        <TextField\n                          onKeyUpCapture={handleSearchStockSKU}\n                          value={changeData.product_articles || \"\"}\n                          {...params}\n                          label=\"Product SKU\"\n                        />\n                      )}\n                      onChange={(e, newMember) =>\n                        setData((old) => ({\n                          ...old,\n                          product_articles: newMember,\n                        }))\n                      }\n                    />\n\n                    {changeData.product_articles.length > 0 && (\n                      <Box mt={1}>\n                        <Typography component={\"span\"} variant=\"body1\">\n                          Product Quantities\n                        </Typography>\n                        <Box\n                          p={1}\n                          sx={{\n                            display: \"flex\",\n                            gap: \"5px\",\n                            flexDirection: \"column\",\n                            maxHeight: 150,\n                            overflow: \"scroll\",\n                          }}\n                        >\n                          {changeData.product_articles.map((item) => (\n                            <TextField\n                              name={item}\n                              fullWidth\n                              size=\"small\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    {item.split(\"Stock\")[0]}\n                                  </InputAdornment>\n                                ),\n                              }}\n                              placeholder={item}\n                              onChange={handleProductFields}\n                              value={\n                                changeData[item] <= parseInt(item.split(\":\")[1])\n                                  ? changeData[item]\n                                  : parseInt(item.split(\":\")[1])\n                              }\n                            />\n                          ))}\n                        </Box>\n                      </Box>\n                    )}\n\n                    <Autocomplete\n                      disablePortal\n                      size=\"small\"\n                      fullWidth\n                      noOptionsText={\"ex : H-01001\"}\n                      multiple\n                      autoHighlight\n                      id=\"combo-box-demo\"\n                      options={productSKU.H_SKU.map((row) => {\n                        return row.product_id + \" Stock :\" + row.stock;\n                      })}\n                      renderInput={(params) => (\n                        <TextField\n                          onKeyUpCapture={handleSearchStockSKU}\n                          value={changeData.hardware_articles || \"\"}\n                          {...params}\n                          label=\"Hardware SKU\"\n                        />\n                      )}\n                      onChange={(e, newMember) =>\n                        setData((old) => ({\n                          ...old,\n                          hardware_articles: newMember,\n                        }))\n                      }\n                    />\n\n                    {changeData.hardware_articles.length > 0 && (\n                      <Box mt={1}>\n                        <Typography component={\"span\"} variant=\"body1\">\n                          Hardware Quantities\n                        </Typography>\n                        <Box\n                          p={1}\n                          sx={{\n                            display: \"flex\",\n                            gap: \"5px\",\n                            flexDirection: \"column\",\n                            maxHeight: 150,\n                            overflow: \"scroll\",\n                          }}\n                        >\n                          {changeData.hardware_articles.map((item) => (\n                            <TextField\n                              name={item}\n                              fullWidth\n                              size=\"small\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    {item.split(\"Stock\")[0]}\n                                  </InputAdornment>\n                                ),\n                              }}\n                              placeholder={item}\n                              onChange={handleProductFields}\n                              value={\n                                changeData[item] <= parseInt(item.split(\":\")[1])\n                                  ? changeData[item]\n                                  : parseInt(item.split(\":\")[1])\n                              }\n                            />\n                          ))}\n                        </Box>\n                      </Box>\n                    )}\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      select\n                      name=\"purpose\"\n                      label=\"Stage of Inventory\"\n                      value={changeData.purpose || \"\"}\n                      multiple\n                      onChange={handleProductFields}\n                      helperText=\"Please select your purpose\"\n                      required\n                    >\n                      {purpose.map(\n                        (option) =>\n                          option && (\n                            <MenuItem key={option} value={option}>\n                              {option}\n                            </MenuItem>\n                          )\n                      )}\n                    </TextField>\n\n                    <TextareaAutosize\n                      size=\"small\"\n                      fullWidth\n                      minRows={3}\n                      maxRows={3}\n                      // required\n                      resize={\"none\"}\n                      id=\"fullWidth\"\n                      placeholder=\"Please eloburate the reson here...\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"reason\"\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Save\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* add Transfer Ends */}\n\n            {/*  add Polish Material */}\n\n            {form.formType === \"addPolish\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Polish\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add your Polish and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handlePolish);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"polish_name\"\n                      label=\"Polish Name\"\n                      type=\"text\"\n                      helperText=\"Please enter your primary material\"\n                    />\n\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Outdoor Images\n                    </FormLabel>\n                    <ProductsPreviews\n                      text={\"Please Drag and Drop the outdoor image\"}\n                    >\n                      {\" \"}\n                    </ProductsPreviews>\n\n                    {files.length > 0 && (\n                      <Grid sx={{ p: 2 }} spacing={2} container>\n                        {files.map((img, index) => {\n                          return (\n                            <>\n                              <Grid item xs={2} sx={{ position: \"relative\" }}>\n                                <CancelIcon\n                                  onClick={() => {\n                                    // this function is for removing the image from savedImage array\n                                    let temp = files;\n                                    console.log(\">>>>>>\", temp, files);\n                                    temp.splice(index, 1);\n                                    setFiles([...temp]);\n                                  }}\n                                  className=\"imageCross\"\n                                  color=\"primary\"\n                                />\n                                <img\n                                  style={{ width: \"100%\" }}\n                                  src={URL.createObjectURL(img)}\n                                  alt={img.name}\n                                />\n                              </Grid>\n                            </>\n                          );\n                        })}\n                      </Grid>\n                    )}\n\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Indoor Images\n                    </FormLabel>\n                    <IndoorPreviews\n                      text={\"Please Drag and Drop the indoor image\"}\n                    >\n                      {\" \"}\n                    </IndoorPreviews>\n\n                    {Indoor.length > 0 && (\n                      <Grid sx={{ p: 2 }} spacing={2} container>\n                        {Indoor.map((img, index) => {\n                          return (\n                            <>\n                              <Grid item xs={2} sx={{ position: \"relative\" }}>\n                                <CancelIcon\n                                  onClick={() => {\n                                    // this function is for removing the image from savedImage array\n                                    let temp = Indoor;\n                                    console.log(\">>>>>>\", temp, Indoor);\n                                    temp.splice(index, 1);\n                                    setIndoor([...temp]);\n                                  }}\n                                  className=\"imageCross\"\n                                  color=\"primary\"\n                                />\n                                <img\n                                  style={{ width: \"100%\" }}\n                                  src={URL.createObjectURL(img)}\n                                  alt={img.name}\n                                />\n                              </Grid>\n                            </>\n                          );\n                        })}\n                      </Grid>\n                    )}\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      select\n                      name=\"polish_type\"\n                      label=\"Polish Type\"\n                      value={changeData.polish_type || \"\"}\n                      multiple\n                      onChange={handleProductFields}\n                      helperText=\"Please select your polish type.\"\n                      required\n                    >\n                      {polishCatalog.map(\n                        (option) =>\n                          option && (\n                            <MenuItem key={option} value={option}>\n                              {option}\n                            </MenuItem>\n                          )\n                      )}\n                      <MenuItem key={\"None\"} value={\"None\"}>\n                        {\"None\"}\n                      </MenuItem>\n                    </TextField>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      select\n                      name=\"polish_finish\"\n                      label=\"Polish Finish\"\n                      value={changeData.polish_finish || \"\"}\n                      multiple\n                      onChange={handleProductFields}\n                      helperText=\"Please select your polish finish.\"\n                      required\n                    >\n                      <MenuItem key={\"Glossy\"} value={\"Glossy\"}>\n                        {\"Glossy\"}\n                      </MenuItem>\n\n                      <MenuItem key={\"Matt\"} value={\"Matt\"}>\n                        {\"Matt\"}\n                      </MenuItem>\n                      <MenuItem key={\"None\"} value={\"None\"}>\n                        {\"None\"}\n                      </MenuItem>\n                    </TextField>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      select\n                      name=\"level\"\n                      label=\"Polish Level\"\n                      value={changeData.level || \"\"}\n                      multiple\n                      onChange={handleProductFields}\n                      helperText=\"Please select your polish level.\"\n                      required\n                    >\n                      {level.map(\n                        (option) =>\n                          option && (\n                            <MenuItem key={option} value={option}>\n                              {option}\n                            </MenuItem>\n                          )\n                      )}\n                      <MenuItem key={\"None\"} value={\"None\"}>\n                        {\"None\"}\n                      </MenuItem>\n                    </TextField>\n\n                    <TextField\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"price\"\n                      label=\"Price (per Inch)\"\n                      type=\"number\"\n                    />\n\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={changeData.lock}\n                          onChange={handleProductFields}\n                          name=\"lock\"\n                        />\n                      }\n                      label=\"Lock Polish\"\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Polish\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* add addPolish  Ends */}\n\n            {/*  update Polish Material */}\n\n            {form.formType === \"update_polish\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Polish\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update your Polish and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdatePolish);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"polish_name\"\n                      value={changeData.polish_name || \"\"}\n                      onChange={handleProductFields}\n                      label=\"Polish Name\"\n                      type=\"text\"\n                      helperText=\"Please enter your primary material\"\n                    />\n\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Outdoor Images\n                    </FormLabel>\n                    <ProductsPreviews\n                      text={\"Please Drag and Drop the outdoor image\"}\n                    >\n                      {\" \"}\n                    </ProductsPreviews>\n\n                    {files.length > 0 && (\n                      <Grid sx={{ p: 2 }} spacing={2} container>\n                        {files.map((img, index) => {\n                          return (\n                            <>\n                              <Grid item xs={2} sx={{ position: \"relative\" }}>\n                                <CancelIcon\n                                  onClick={() => {\n                                    // this function is for removing the image from savedImage array\n                                    let temp = files;\n                                    console.log(\">>>>>>\", temp, files);\n                                    temp.splice(index, 1);\n                                    setFiles([...temp]);\n                                  }}\n                                  className=\"imageCross\"\n                                  color=\"primary\"\n                                />\n                                <img\n                                  style={{ width: \"100%\" }}\n                                  src={URL.createObjectURL(img)}\n                                  alt={img.name}\n                                />\n                              </Grid>\n                            </>\n                          );\n                        })}\n                      </Grid>\n                    )}\n\n                    {changeData.savedImages.length > 0 && (\n                      <Grid sx={{ p: 2 }} spacing={2} container>\n                        <FormLabel id=\"demo-radio-buttons-group-label\">\n                          Saved Images\n                        </FormLabel>\n                        {changeData.savedImages.map((img, index) => {\n                          return (\n                            <>\n                              <Grid item xs={2} sx={{ position: \"relative\" }}>\n                                <CancelIcon\n                                  onClick={() => {\n                                    // this function is for removing the image from savedImage array\n                                    let temp = changeData.savedImages;\n                                    temp.splice(index, 1);\n                                    setData({\n                                      ...changeData,\n                                      savedImages: temp,\n                                    });\n                                  }}\n                                  className=\"imageCross\"\n                                  color=\"primary\"\n                                />\n                                <img\n                                  style={{ width: \"100%\" }}\n                                  src={img}\n                                  alt=\"productImage\"\n                                />\n                              </Grid>\n                            </>\n                          );\n                        })}\n                      </Grid>\n                    )}\n\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Indoor Images\n                    </FormLabel>\n                    <IndoorPreviews\n                      text={\"Please Drag and Drop the indoor image\"}\n                    >\n                      {\" \"}\n                    </IndoorPreviews>\n\n                    {/* {console.log(Indoor)} */}\n                    {Indoor.length > 0 && (\n                      <Grid sx={{ p: 2 }} spacing={2} container>\n                        {Indoor.map((img, index) => {\n                          return (\n                            <>\n                              <Grid item xs={2} sx={{ position: \"relative\" }}>\n                                <CancelIcon\n                                  onClick={() => {\n                                    // this function is for removing the image from savedImage array\n                                    let temp = Indoor;\n                                    console.log(\">>>>>>\", temp, Indoor);\n                                    temp.splice(index, 1);\n                                    setIndoor([...temp]);\n                                  }}\n                                  className=\"imageCross\"\n                                  color=\"primary\"\n                                />\n                                <img\n                                  style={{ width: \"100%\" }}\n                                  src={URL.createObjectURL(img)}\n                                  alt={img.name}\n                                />\n                              </Grid>\n                            </>\n                          );\n                        })}\n                      </Grid>\n                    )}\n\n                    {changeData.indoorSavedImage.length > 0 && (\n                      <Grid sx={{ p: 2 }} spacing={2} container>\n                        <FormLabel id=\"demo-radio-buttons-group-label\">\n                          Saved Images\n                        </FormLabel>\n                        {changeData.indoorSavedImage.map((img, index) => {\n                          return (\n                            <>\n                              <Grid item xs={2} sx={{ position: \"relative\" }}>\n                                <CancelIcon\n                                  onClick={() => {\n                                    // this function is for removing the image from savedImage array\n                                    let temp = changeData.indoorSavedImage;\n                                    temp.splice(index, 1);\n                                    setData({\n                                      ...changeData,\n                                      indoorSavedImage: temp,\n                                    });\n                                  }}\n                                  className=\"imageCross\"\n                                  color=\"primary\"\n                                />\n                                <img\n                                  style={{ width: \"100%\" }}\n                                  src={img}\n                                  alt=\"productImage\"\n                                />\n                              </Grid>\n                            </>\n                          );\n                        })}\n                      </Grid>\n                    )}\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"outlined-select\"\n                      value={changeData.polish_type || \"\"}\n                      onChange={handleProductFields}\n                      select\n                      name=\"polish_type\"\n                      label=\"Polish Type\"\n                      multiple\n                      helperText=\"Please select your polish type.\"\n                      required\n                    >\n                      {polishCatalog.map(\n                        (option) =>\n                          option && (\n                            <MenuItem key={option} value={option}>\n                              {option}\n                            </MenuItem>\n                          )\n                      )}\n                      <MenuItem key={\"None\"} value={\"None\"}>\n                        {\"None\"}\n                      </MenuItem>\n                    </TextField>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      select\n                      name=\"polish_finish\"\n                      value={changeData.polish_finish || \"\"}\n                      onChange={handleProductFields}\n                      label=\"Polish Finish\"\n                      multiple\n                      helperText=\"Please select your polish finish.\"\n                      required\n                    >\n                      <MenuItem key={\"Glossy\"} value={\"Glossy\"}>\n                        {\"Glossy\"}\n                      </MenuItem>\n\n                      <MenuItem key={\"Matt\"} value={\"Matt\"}>\n                        {\"Matt\"}\n                      </MenuItem>\n                      <MenuItem key={\"None\"} value={\"None\"}>\n                        {\"None\"}\n                      </MenuItem>\n                    </TextField>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      select\n                      name=\"level\"\n                      label=\"Polish Level\"\n                      value={changeData.level || \"\"}\n                      multiple\n                      onChange={handleProductFields}\n                      helperText=\"Please select your polish level.\"\n                      required\n                    >\n                      {level.map(\n                        (option) =>\n                          option && (\n                            <MenuItem key={option} value={option}>\n                              {option}\n                            </MenuItem>\n                          )\n                      )}\n                      <MenuItem key={\"None\"} value={\"None\"}>\n                        {\"None\"}\n                      </MenuItem>\n                    </TextField>\n\n                    <TextField\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"price\"\n                      value={changeData.price || 0}\n                      onChange={handleProductFields}\n                      label=\"Price (per Inch)\"\n                      type=\"number\"\n                    />\n\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={changeData.lock}\n                          onChange={handleProductFields}\n                          name=\"lock\"\n                        />\n                      }\n                      label=\"Lock Polish\"\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Polish\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* update addPolish  Ends */}\n\n            {/* add Review */}\n\n            {form.formType === \"review\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Review\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add review from here.\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={2}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleReview);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <Autocomplete\n                      freeSolo\n                      size=\"small\"\n                      fullWidth\n                      noOptionsText={\"ex : P-01001\"}\n                      autoHighlight\n                      id=\"combo-box-demo\"\n                      options={productSKU.P_SKU.map((row) => {\n                        return row.SKU;\n                      })}\n                      renderInput={(params) => (\n                        <TextField\n                          onKeyUpCapture={handleSearch}\n                          value={changeData.product_articles || \"\"}\n                          {...params}\n                          label=\"Product SKU\"\n                        />\n                      )}\n                      onChange={(e, val) =>\n                        setData((old) => ({\n                          ...old,\n                          product_id: val,\n                        }))\n                      }\n                    />\n\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Review Images\n                    </FormLabel>\n                    <ProductsPreviews\n                      text={\"Please Drag and Drop the review image\"}\n                    >\n                      {\" \"}\n                    </ProductsPreviews>\n\n                    {files.length > 0 && (\n                      <Grid sx={{ p: 2 }} spacing={2} container>\n                        {files.map((img, index) => {\n                          return (\n                            <>\n                              <Grid item xs={2} sx={{ position: \"relative\" }}>\n                                <CancelIcon\n                                  onClick={() => {\n                                    // this function is for removing the image from savedImage array\n                                    let temp = files;\n                                    console.log(\">>>>>>\", temp, files);\n                                    temp.splice(index, 1);\n                                    setFiles([...temp]);\n                                  }}\n                                  className=\"imageCross\"\n                                  color=\"primary\"\n                                />\n                                <img\n                                  style={{ width: \"100%\" }}\n                                  src={URL.createObjectURL(img)}\n                                  alt={img.name}\n                                />\n                              </Grid>\n                            </>\n                          );\n                        })}\n                      </Grid>\n                    )}\n\n                    {/* // image Squence  Images */}\n                    {files.length > 0 && (\n                      <ImageSquence\n                        text={\"New Images\"}\n                        image={files}\n                        setImage={setFiles}\n                        savedImage={false}\n                      />\n                    )}\n\n                    {/* rating */}\n                    <Box className=\"rating\">\n                      <Typography vriatn=\"h6\">\n                        How much you want to rate it?\n                      </Typography>\n                      <Rating\n                        name=\"hover-feedback\"\n                        // value={reviewData.data.rating || 4}\n                        precision={0.5}\n                        getLabelText={getLabelText}\n                        onChange={(event, newValue) => {\n                          setData((old) => ({ ...old, rating: newValue }));\n                        }}\n                        onChangeActive={(event, newHover) => {\n                          setHover(newHover);\n                        }}\n                        emptyIcon={\n                          <StarIcon\n                            style={{ opacity: 0.55 }}\n                            fontSize=\"inherit\"\n                          />\n                        }\n                      />\n                      {changeData.rating !== null && (\n                        <Box sx={{ ml: 2 }}>\n                          {labels[hover !== -1 ? hover : changeData.rating]}\n                        </Box>\n                      )}\n                    </Box>\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      label=\"Review Title\"\n                      size=\"small\"\n                      value={changeData.review_title}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"review_title\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"YouTube URL\"\n                      value={changeData.yourTube_url}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"yourTube_url\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"Reviewer Name (Name you want to show on review)\"\n                      value={changeData.reviewer_name}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"reviewer_name\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"Reviewer Email\"\n                      value={changeData.reviewer_email}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"reviewer_email\"\n                    />\n                    <TextareaAutosize\n                      minRows={5}\n                      maxRows={5}\n                      required\n                      name=\"review\"\n                      className=\"customTextArea\"\n                      placeholder=\"Write something beautiful...\"\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      value={changeData.review}\n                      onChange={handleProductFields}\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Review\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* add REview ends */}\n\n            {/*  update Review */}\n\n            {form.formType === \"update_review\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Edit Review\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Edit review from here.\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={2}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateReview);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      disabled\n                      onKeyUpCapture={handleSearch}\n                      size=\"small\"\n                      value={changeData.product_id}\n                      label=\"Product SKU\"\n                    />\n\n                    {/* rating */}\n                    <Box className=\"rating\">\n                      <Typography vriatn=\"h6\">\n                        How much you want to rate it?\n                      </Typography>\n                      <Rating\n                        name=\"hover-feedback\"\n                        value={changeData.rating || 4}\n                        precision={0.5}\n                        getLabelText={getLabelText}\n                        onChange={(event, newValue) => {\n                          setData((old) => ({ ...old, rating: newValue }));\n                        }}\n                        onChangeActive={(event, newHover) => {\n                          setHover(newHover);\n                        }}\n                        emptyIcon={\n                          <StarIcon\n                            style={{ opacity: 0.55 }}\n                            fontSize=\"inherit\"\n                          />\n                        }\n                      />\n                      {changeData.rating !== null && (\n                        <Box sx={{ ml: 2 }}>\n                          {labels[hover !== -1 ? hover : changeData.rating]}\n                        </Box>\n                      )}\n                    </Box>\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      label=\"Review Title\"\n                      size=\"small\"\n                      value={changeData.review_title}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"review_title\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"YouTube URL\"\n                      value={changeData.yourTube_url}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"yourTube_url\"\n                    />\n\n                    <TextareaAutosize\n                      minRows={5}\n                      maxRows={5}\n                      required\n                      name=\"review\"\n                      className=\"customTextArea\"\n                      placeholder=\"Write something beautiful...\"\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      value={changeData.review}\n                      onChange={handleProductFields}\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Review\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* update Review  Ends */}\n\n            {/* add Banner */}\n\n            {form.formType === \"add_banner\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Banner\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add banner details from here.\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={2}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleBanner);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Web View Banner Image (1920*1080)\n                    </FormLabel>\n                    <WebBannerPreviews\n                      webBanner={webBanner}\n                      setWebBanner={setWebBanner}\n                      text={\"Please Drag and Drop the Web Banner.\"}\n                    >\n                      {\" \"}\n                    </WebBannerPreviews>\n\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Mobile View Banner Image (800*200)\n                    </FormLabel>\n                    <MobileBannerPreviews\n                      mobileBanner={mobileBanner}\n                      setMobileBanner={setMobileBanner}\n                      text={\"Please Drag and Drop the Mobile Banner.\"}\n                    >\n                      {\" \"}\n                    </MobileBannerPreviews>\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      label=\"Banner Title\"\n                      size=\"small\"\n                      value={changeData.banner_title}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"banner_title\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"Redirecting URL for Web\"\n                      value={changeData.web_url}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"web_url\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"Redirecting URL for Mobile\"\n                      value={changeData.mobile_url}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"mobile_url\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      label=\"Sequence Number\"\n                      size=\"small\"\n                      required\n                      error={sequence.includes(\n                        parseInt(changeData.sequence_no)\n                      )}\n                      helperText={\n                        sequence.includes(parseInt(changeData.sequence_no)) &&\n                        \"Index is already in use.\"\n                      }\n                      type=\"number\"\n                      value={\n                        changeData.sequence_no < 0 ? 0 : changeData.sequence_no\n                      }\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"sequence_no\"\n                    />\n\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox\n                            checked={changeData.web_banner_status}\n                            onChange={handleProductFields}\n                            name=\"web_banner_status\"\n                          />\n                        }\n                        label=\"Web Banner Status\"\n                      />\n                      <FormControlLabel\n                        control={\n                          <Checkbox\n                            checked={changeData.mobile_banner_status}\n                            onChange={handleProductFields}\n                            name=\"mobile_banner_status\"\n                          />\n                        }\n                        label=\"Mobile Banner Status\"\n                      />\n                    </FormGroup>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Banner\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* add Banner ends */}\n            {/* Update Banner */}\n\n            {form.formType === \"update_banner\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Banner\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update banner details from here.\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={2}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateBanner);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Web View Banner Image (1920*1080)\n                    </FormLabel>\n                    <WebBannerPreviews\n                      webBanner={webBanner}\n                      setWebBanner={setWebBanner}\n                      text={\"Please Drag and Drop the Web Banner.\"}\n                    >\n                      {\" \"}\n                    </WebBannerPreviews>\n                    {changeData.web_banner && (\n                      <>\n                        <FormLabel id=\"demo-radio-buttons-group-label\">\n                          Present Banner\n                        </FormLabel>\n                        <Box\n                          sx={{\n                            width: \"200px\",\n                            img: {\n                              width: \"100%\",\n                            },\n                          }}\n                        >\n                          <img alt=\"web_banner\" src={changeData.web_banner} />\n                        </Box>\n                      </>\n                    )}\n\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Mobile View Banner Image (800*200)\n                    </FormLabel>\n                    <MobileBannerPreviews\n                      mobileBanner={mobileBanner}\n                      setMobileBanner={setMobileBanner}\n                      text={\"Please Drag and Drop the Mobile Banner.\"}\n                    >\n                      {\" \"}\n                    </MobileBannerPreviews>\n                    {changeData.mobile_banner && (\n                      <>\n                        <FormLabel id=\"demo-radio-buttons-group-label\">\n                          Present Banner\n                        </FormLabel>\n                        <Box\n                          sx={{\n                            width: \"200px\",\n                            img: {\n                              width: \"100%\",\n                            },\n                          }}\n                        >\n                          <img\n                            alt=\"mobile_banner\"\n                            src={changeData.mobile_banner}\n                          />\n                        </Box>\n                      </>\n                    )}\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      label=\"Banner Title\"\n                      size=\"small\"\n                      value={changeData.banner_title}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"banner_title\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"Redirecting URL for Web\"\n                      value={changeData.web_url}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"web_url\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"Redirecting URL for Mobile\"\n                      value={changeData.mobile_url}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"mobile_url\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      // error={sequence.includes(changeData.sequence_no)}\n                      label={`Sequence Number`}\n                      size=\"small\"\n                      type=\"number\"\n                      required\n                      error={\n                        parseInt(changeData.old_sequence_no) !==\n                          parseInt(changeData.sequence_no) &&\n                        sequence.includes(parseInt(changeData.sequence_no))\n                      }\n                      helperText={\n                        parseInt(changeData.old_sequence_no) !==\n                          parseInt(changeData.sequence_no) &&\n                        sequence.includes(parseInt(changeData.sequence_no)) &&\n                        \"Index is already in use.\"\n                      }\n                      value={\n                        changeData.sequence_no < 0 ? 0 : changeData.sequence_no\n                      }\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"sequence_no\"\n                    />\n\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox\n                            checked={changeData.web_banner_status}\n                            onChange={handleProductFields}\n                            name=\"web_banner_status\"\n                          />\n                        }\n                        label=\"Web Banner Status\"\n                      />\n                      <FormControlLabel\n                        control={\n                          <Checkbox\n                            checked={changeData.mobile_banner_status}\n                            onChange={handleProductFields}\n                            name=\"mobile_banner_status\"\n                          />\n                        }\n                        label=\"Mobile Banner Status\"\n                      />\n                    </FormGroup>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Banner\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* Update REview ends */}\n\n            {/* add User */}\n            {form.formType === \"add_user\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add User\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add user details from here.\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={2}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUser);\n                    }}\n                    id=\"myForm\"\n                    encType=\"application/x-www-form-urlencoded\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"Full Name\"\n                      value={changeData.user_name}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"user_name\"\n                    />\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      type=\"email\"\n                      label=\"Email Address\"\n                      value={changeData.email}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"email\"\n                    />\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"Mobile Number\"\n                      value={changeData.mobile}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"mobile\"\n                    />\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      type={\"password\"}\n                      label=\"Password\"\n                      value={changeData.password}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"password\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      id=\"outlined-select\"\n                      required\n                      select\n                      size={\"small\"}\n                      helperText=\"Please select the role.\"\n                      name=\"role\"\n                      label=\"Select role...\"\n                      value={changeData.role || \"\"}\n                      onChange={handleProductFields}\n                      multiple\n                    >\n                      {role.map((option) => (\n                        <MenuItem key={option.value} value={option.value}>\n                          {option.value}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n\n                    <Autocomplete\n                      sx={{ mt: 1 }}\n                      multiple\n                      id=\"size-small-standard-multi\"\n                      size=\"small\"\n                      options={modules}\n                      value={changeData.access || []}\n                      getOptionLabel={(option) => option}\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          variant=\"outlined\"\n                          label=\"Select Access\"\n                          placeholder=\"Access\"\n                        />\n                      )}\n                      onChange={(e, newMember) =>\n                        setData((old) => ({\n                          ...old,\n                          access: newMember,\n                        }))\n                      }\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add User\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* add User ends */}\n\n            {/* add User */}\n            {form.formType === \"update_user\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update User\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update usre details from here.\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={2}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateUser);\n                    }}\n                    id=\"myForm\"\n                    encType=\"application/x-www-form-urlencoded\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"Full Name\"\n                      value={changeData.user_name}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"user_name\"\n                    />\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      type=\"email\"\n                      label=\"Email Address\"\n                      value={changeData.email}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"email\"\n                    />\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"Mobile Number\"\n                      value={changeData.mobile}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"mobile\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      id=\"outlined-select\"\n                      required\n                      select\n                      size={\"small\"}\n                      helperText=\"Please select the role.\"\n                      name=\"role\"\n                      label=\"Select role...\"\n                      value={changeData.role || \"\"}\n                      onChange={handleProductFields}\n                      multiple\n                    >\n                      {role.map((option) => (\n                        <MenuItem key={option.value} value={option.value}>\n                          {option.value}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n\n                    <Autocomplete\n                      sx={{ mt: 1 }}\n                      multiple\n                      id=\"size-small-standard-multi\"\n                      size=\"small\"\n                      options={modules}\n                      value={changeData.access || []}\n                      getOptionLabel={(option) => option}\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          variant=\"outlined\"\n                          label=\"Select Access\"\n                          placeholder=\"Access\"\n                        />\n                      )}\n                      onChange={(e, newMember) =>\n                        setData((old) => ({\n                          ...old,\n                          access: newMember,\n                        }))\n                      }\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update User\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* add User ends */}\n          </Box>\n        </Backdrop>\n      </Slide>\n    </>\n  );\n};\n\n// for label the ratting\n\nexport default SideForm;\n\n// banner dimension for web 1920*1080\nfunction WebBannerDimension(images, setWebBanner) {\n  let result = images.map(async (image) => {\n    let { width, height } = await size(URL.createObjectURL(image));\n    console.log(width, height);\n    Object.assign(image, {\n      preview: URL.createObjectURL(image),\n      validate: width === 1920 && height === 1080 ? true : false,\n    });\n    return image;\n  });\n  Promise.all(result).then((res) => setWebBanner([...res]));\n}\n\nfunction WebBannerPreviews({ text, webBanner, setWebBanner }) {\n  const [acceptedFileItems, setAcceptedFileItems] = useState([]);\n  const [fileRejectionItems, setFileRejectionItems] = useState([]);\n\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: \"image/*\",\n    multiple: false,\n    onDrop: (acceptedFiles) => {\n      WebBannerDimension(acceptedFiles, setWebBanner);\n    },\n  });\n\n  // for check the file state in done or\n  useMemo(() => {\n    if (webBanner) {\n      // REJECTED FILES\n      setFileRejectionItems(\n        webBanner.map((file) => {\n          return !file.validate ? (\n            <div style={thumb} key={file.name}>\n              <div style={thumbInner}>\n                {/* {console.log(file.validate)} */}\n\n                <img\n                  src={URL.createObjectURL(file)}\n                  style={img}\n                  alt=\"Images\"\n                  // Revoke data uri after image is loaded\n                  onLoad={() => {\n                    URL.revokeObjectURL(file.preview);\n                  }}\n                />\n              </div>\n            </div>\n          ) : null;\n        })\n      );\n\n      // accepted\n      setAcceptedFileItems(\n        webBanner.map((file, index) => {\n          return file.validate ? (\n            <div style={thumb} key={file.name}>\n              <div style={thumbInner}>\n                {/* {console.log(file.validate)} */}\n\n                <img\n                  src={URL.createObjectURL(file)}\n                  style={img}\n                  alt=\"Images\"\n                  // Revoke data uri after image is loaded\n                  onLoad={() => {\n                    URL.revokeObjectURL(file.preview);\n                  }}\n                />\n              </div>\n            </div>\n          ) : null;\n        })\n      );\n    }\n  }, [webBanner]);\n\n  useEffect(() => {\n    // Make sure to revoke the data uris to avoid memory leaks, will run on unmount\n    return () => webBanner.forEach((file) => URL.revokeObjectURL(file.preview));\n  }, []);\n\n  return (\n    <section className=\"container dorpContainer\">\n      <div {...getRootProps({ className: \"dropzone\" })}>\n        <input {...getInputProps()} />\n        <p>{text}</p>\n      </div>\n      <aside>\n        <h4>Accepted files</h4>\n        <aside style={thumbsContainer}>{acceptedFileItems}</aside>\n        <h4>Rejected files</h4>\n        <aside style={thumbsContainer}>{fileRejectionItems}</aside>\n      </aside>\n    </section>\n  );\n}\n// banner dimension for mobile 800*200\nfunction MobileBannerDimension(images, setMobileBanner) {\n  let result = images.map(async (image) => {\n    let { width, height } = await size(URL.createObjectURL(image));\n    // console.log(width,height)\n    Object.assign(image, {\n      preview: URL.createObjectURL(image),\n      validate: width === 800 && height === 200 ? true : false,\n    });\n    return image;\n  });\n  Promise.all(result).then((res) => setMobileBanner([...res]));\n}\n\nfunction MobileBannerPreviews({ text, mobileBanner, setMobileBanner }) {\n  const [acceptedFileItems, setAcceptedFileItems] = useState([]);\n  const [fileRejectionItems, setFileRejectionItems] = useState([]);\n\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: \"image/*\",\n    multiple: false,\n    onDrop: (acceptedFiles) => {\n      MobileBannerDimension(acceptedFiles, setMobileBanner);\n    },\n  });\n\n  // for check the file state in done or\n  useMemo(() => {\n    if (mobileBanner) {\n      // REJECTED FILES\n      setFileRejectionItems(\n        mobileBanner.map((file) => {\n          return !file.validate ? (\n            <div style={thumb} key={file.name}>\n              <div style={thumbInner}>\n                {/* {console.log(file.validate)} */}\n\n                <img\n                  src={URL.createObjectURL(file)}\n                  style={img}\n                  alt=\"Images\"\n                  // Revoke data uri after image is loaded\n                  onLoad={() => {\n                    URL.revokeObjectURL(file.preview);\n                  }}\n                />\n              </div>\n            </div>\n          ) : null;\n        })\n      );\n\n      // accepted\n      setAcceptedFileItems(\n        mobileBanner.map((file, index) => {\n          return file.validate ? (\n            <div style={thumb} key={file.name}>\n              <div style={thumbInner}>\n                {/* {console.log(file.validate)} */}\n\n                <img\n                  src={URL.createObjectURL(file)}\n                  style={img}\n                  alt=\"Images\"\n                  // Revoke data uri after image is loaded\n                  onLoad={() => {\n                    URL.revokeObjectURL(file.preview);\n                  }}\n                />\n              </div>\n            </div>\n          ) : null;\n        })\n      );\n    }\n  }, [mobileBanner]);\n\n  useEffect(() => {\n    // Make sure to revoke the data uris to avoid memory leaks, will run on unmount\n    return () =>\n      mobileBanner.forEach((file) => URL.revokeObjectURL(file.preview));\n  }, []);\n\n  return (\n    <section className=\"container dorpContainer\">\n      <div {...getRootProps({ className: \"dropzone\" })}>\n        <input {...getInputProps()} />\n        <p>{text}</p>\n      </div>\n      <aside>\n        <h4>Accepted files</h4>\n        <aside style={thumbsContainer}>{acceptedFileItems}</aside>\n        <h4>Rejected files</h4>\n        <aside style={thumbsContainer}>{fileRejectionItems}</aside>\n      </aside>\n    </section>\n  );\n}\n\nfunction AddressForm({ setOpen, open, confirmBox, handleAddress }) {\n  const [data, setData] = useState({\n    pincode: \"\",\n    city: \"\",\n    state: \"\",\n  });\n\n  const [catalog, setCatalogs] = useState({\n    city: [],\n    pincode: [],\n  });\n\n  useEffect(() => {\n    handelPincode();\n  }, [data.pincode]);\n\n  const handleValue = (e) => {\n    setData((old) => ({ ...old, [e.target.name]: e.target.value }));\n  };\n\n  async function handleSearch(e) {\n    console.log(e.target.value);\n    let res = await listPincode({\n      page: 1,\n      limit: 10,\n      total: 10,\n      pincode: e.target.value,\n    });\n    if (res.status === 200) {\n      setCatalogs((old) => ({ ...old, pincode: [...res.data.data] }));\n    }\n  }\n\n  async function handelPincode() {\n    if (data.pincode.toString().length === 6) {\n      let res = await getAddress(data.pincode);\n      if (res.status === 200) {\n        let pincode = res.data.results[data.pincode] || [];\n        setCatalogs((old) => ({ ...old, city: pincode }));\n        setData((old) => ({\n          ...old,\n          pincode: data.pincode,\n          state: pincode[0].state,\n        }));\n      }\n    } else {\n      setData((old) => ({ ...old, pincode: data.pincode }));\n    }\n  }\n\n  return (\n    <Modal\n      aria-labelledby=\"transition-modal-title\"\n      aria-describedby=\"transition-modal-description\"\n      open={open}\n      onClose={() => {\n        setOpen(false);\n      }}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: 500,\n      }}\n    >\n      <Fade in={open}>\n        <Box sx={style}>\n          <Typography sx={{ pb: 1 }} variant=\"h6\">\n            Address\n          </Typography>\n          <form\n            className=\"form\"\n            id=\"myForm\"\n            onSubmit={(e) => {\n              confirmBox(e, handleAddress);\n            }}\n            encType=\"multipart/form-data\"\n            method=\"post\"\n          >\n            <TextField\n              size=\"small\"\n              fullWidth\n              // required\n              id=\"outlined-select\"\n              name=\"customer_name\"\n              label=\"Name\"\n              type=\"text\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              // required\n              id=\"outlined-select\"\n              name=\"mobile\"\n              label=\"Mobile\"\n              type=\"number\"\n            />\n            <Autocomplete\n              freeSolo\n              size=\"small\"\n              fullWidth\n              noOptionsText={\"ex : 305001\"}\n              autoHighlight\n              id=\"combo-box-demo\"\n              options={catalog.pincode.map((row) => {\n                return row.pincode;\n              })}\n              renderInput={(params) => (\n                <TextField\n                  onKeyUpCapture={handleSearch}\n                  value={data.pincode || \"\"}\n                  {...params}\n                  label=\"Pincode\"\n                />\n              )}\n              onChange={(e, val) =>\n                setData((old) => ({\n                  ...old,\n                  pincode: val,\n                }))\n              }\n            />\n\n            <TextField\n              fullWidth\n              id=\"outlined-select\"\n              required\n              select\n              size={\"small\"}\n              helperText=\"Please select the city.\"\n              name=\"city\"\n              label=\"Select city...\"\n              value={data.city || \"\"}\n              onChange={handleValue}\n              multiple\n            >\n              {catalog.city.map((option) => (\n                <MenuItem key={option.city} value={option.city}>\n                  {option.city}\n                </MenuItem>\n              ))}\n            </TextField>\n\n            <TextField\n              size=\"small\"\n              fullWidth\n              // required\n              id=\"outlined-select\"\n              name=\"state\"\n              value={data.state || \"\"}\n              onChange={handleValue}\n              label=\"State\"\n              type=\"text\"\n            />\n\n            <FormLabel id=\"demo-radio-buttons-group-label\">Address</FormLabel>\n\n            <TextareaAutosize\n              fullWidth\n              minRows={5}\n              id=\"outlined-select\"\n              name=\"address\"\n              type=\"text\"\n              placeholder=\"Please enter your address\"\n            />\n\n            <FormLabel id=\"demo-radio-buttons-group-label\">\n              Address Type\n            </FormLabel>\n\n            <TextField\n              size=\"small\"\n              fullWidth\n              id=\"outlined-select\"\n              select\n              name=\"type\"\n              displayEmpty\n              multiple\n              helperText=\"Please select your address type\"\n            >\n              <MenuItem key={\"home\"} value={\"home\"}>\n                Home\n              </MenuItem>\n              <MenuItem key={\"office\"} value={\"office\"}>\n                Office\n              </MenuItem>\n              <MenuItem key={\"none\"} value={\"none\"}>\n                None\n              </MenuItem>\n            </TextField>\n\n            <Button color=\"primary\" type=\"submit\" variant=\"contained\">\n              Add Address\n            </Button>\n          </form>\n        </Box>\n      </Fade>\n    </Modal>\n  );\n}\n"],"names":["option","labels","confirmable","cancellable","thumbsContainer","display","flexDirection","flexWrap","marginTop","thumb","borderRadius","border","marginBottom","marginRight","width","height","padding","boxSizing","thumbInner","minWidth","overflow","img","style","position","top","left","transform","bgcolor","boxShadow","p","useState","files","setFiles","webBanner","setWebBanner","mobileBanner","setMobileBanner","featured","setFeatured","React","hover","setHover","sequence","setSequence","imageLink","config","confirm","useConfirm","confirmBox","e","action","preventDefault","description","then","catch","err","console","log","Image","setImages","Indoor","setIndoor","open","setOpen","address","setAddress","FeaturesPreviews","props","useDropzone","accept","multiple","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","thumbs","src","alt","onLoad","revokeObjectURL","name","className","text","Dimension","images","result","image","size","validate","Promise","all","res","old","ProductsPreviews","acceptedFileItems","setAcceptedFileItems","fileRejectionItems","setFileRejectionItems","useMemo","index","useEffect","forEach","ImagePreviews","IndoorPreviews","polishCatalog","taxRateCatalog","value","label","backStyleCatalog","legCatalog","warehouse","weightCapCatalog","trollyMaterial","role","modules","assemblyLevelCatalog","unitCatalog","purpose","level","useSelector","state","form","mode","dispatch","useDispatch","cat","setCat","discount_limit","MRP","discount","setDiscount","activeStep","setActiveStep","SKU","setSKU","category","setCategory","subCategory","setSubCategory","materialCatalog","setMaterialCatalog","SKUCatalog","setSKUCatalog","customer","setCustomerCatalog","P_SKU","H_SKU","supplier","productSKU","setProductSKU","hinge","knob","door","handle","fitting","polish","fabric","wheel","ceramic_drawer","ceramic_tiles","catalog","setCatalog","editorRef","useRef","CVW","ACIN","primary_material","product_articles","hardware_articles","category_discount","range","product_array","variation_array","savedImages","specification_image","featured_image","mannequin_image","shipping","product_title","seo_title","seo_description","seo_keyword","product_des","sub_category","length","breadth","selling_points","priMater","priMater_weight","secMater","secMater_weight","selling_price","mrp","discount_cap","polish_time","manufacturing_time","wight_cap","wall_hanging","assembly_required","assembly_leg","assembly_part","silver","weight","selling_point","mirror","joints","tax_rate","seat_width","seat_depth","seat_height","wheel_included","trolly","returnable","returnDays","trolly_mater","top_size_length","top_size_breadth","dial_size","COD","textile","paid_amount","total_amount","customer_name","customer_email","shipping_address","searchCustomer","mobile_store","online_store","continue_selling","ceramic_drawer_included","ceramic_tiles_included","unit","quantity","textile_type","category_id","sub_category_id","product_description","legs","assembly_level","mattress","mattress_length","mattress_breadth","hinge_qty","knob_qty","handle_qty","door_qty","plywood","wheel_qty","cradle_bed","amazon_url","flipkart_url","jiomart_url","cradle_bed_depth","cradle_bed_height","cradle_bed_width","showroom_price","length_main","ceramic_drawer_qty","ceramic_tiles_qty","back_style","weight_capacity","drawer","package_breadth","package_height","package_length","silver_weight","mirror_length","mirror_width","drawer_count","seating_size_width","seating_size_depth","seating_size_height","restocking_time","min_quantity","hardware_polish","warehouse_to","wood_weight","metal_weight","package_weight","polish_name","polish_type","polish_finish","lock","price","indoorSavedImage","status","web_banner_status","mobile_banner_status","marketing","sequence_no","changeData","setData","getLabelText","getDID","getDraftID","data","parseInt","DID","split","setSequenceFunc","getSequence","formType","getLastHardware","getPrimaryMaterial","categoryList","hardware","filter","row","category_name","_id","getSubCatagories","payload","title","sub_category_name","hardware_image","bangalore_stock","jodhpur_stock","primary_material_name","getHardwareDropdown","getLastProduct","product_image","warehouse_name","hinge_name","knob_name","handle_name","door_name","fitting_name","fabric_qty","fabric_name","upholstery","trolley","trolley_material","rotating_seats","eatable_oil_polish","no_chemical","straight_back","lean_back","weaving","knife","not_suitable_for_Micro_Dish","tilt_top","inside_compartments","stackable","wheel_name","ceramic_tiles_name","ceramic_drawers_qty","ceramic_drawers","ceramic_drawers_included","ceramic_drawers_name","getLastOrder","OID","getPresentSKUs","customerCatalog","primaryMaterial_name","primaryMaterial_description","customizations","card_image","card_description","parent_SKU","variations","variant_label","CID","register_time","username","mobile","email","password","city","getLastMergeProduct","M","item","qty","product_id","stock","supplier_name","gst_no","alt_mobile","specialization","SID","getLastSupplier","outDoor_image","inDoor_image","formattedValue","rating","review","review_title","yourTube_url","uuid","web_banner","web_url","old_sequence_no","mobile_banner","mobile_url","banner_title","user_name","access","handleNextStep","handleBackStep","handleDiscount","target","handleChangeData","feature","handleProductFields","includes","checked","handleChange","event","handleClose","resetAll","setForm","handleCategory","FD","FormData","append","category_status","addDraft","setAlert","variant","message","handleUpdateCategory","undefined","handleCustomer","JSON","stringify","addCustomer","setRow","id","response","profile_image","handleUpdateCustomer","updateCustomer","set","path","document","getElementById","reset","handleProduct","element","secondary_material_weight","handleVariation","variation","handleUpdateProduct","handleMergeProduct","Product_SKU","addMergeProduct","total","handleUpdateMergeProduct","updateMergeProduct","updates","handlePrimaryMaterial","primaryMaterial_status","handleUpdatePrimaryMaterial","handleSupplier","addSupplier","handleUpdateSupplier","editSupplier","handleApplyDiscount","discount_array","applyDiscount","handleInward","Hardware_SKU","challan_no","vehicle_no","toUpperCase","driver_name","driver_no","addInward","inward_id","order_no","date","handleOutward","cred","trim","reason","addOutward","outward_id","handleTransfer","addTransfer","transfer_id","handleSubCategories","sub_category_status","handleUpdateSubCategories","catName","url","setUrl","handleUpload","uploadImage","handleAddBlog","current","getContent","handleUpdateBlog","handleOrder","customer_mobile","addOrder","handleHardware","handleUpdateHardware","multiOBJ","handlePolish","handleUpdatePolish","handleReview","reviewer_name","reviewer_email","addReview","setCheck","admin_reply","review_images","review_videos","hide","handleUpdateReview","updateReview","handleSupplierList","delayDebounceFn","setTimeout","getSupplierDropdown","Suppliers","clearTimeout","handleSearchStockSKU","getStockSKU","search","handleSearch","getArticlesId","handleSearchCategory","getCategoryList","handleBanner","handleUpdateBanner","handleUser","addUser","handleUpdateUser","updateUser","Slide","direction","in","mountOnEnter","unmountOnExit","Backdrop","sx","zIndex","theme","Box","type","IconButton","onClick","color","Cancel","Grid","container","xs","Typography","component","mt","onSubmit","encType","method","Stepper","orientation","Step","StepLabel","cursor","StepContent","Button","disabled","TextField","fullWidth","required","select","onChange","helperText","MenuItem","InputProps","startAdornment","InputAdornment","InputLabel","Select","renderValue","selected","join","Checkbox","indexOf","ListItemText","primary","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","mb","spacing","temp","splice","ImageSquence","setImage","savedImage","justifyContent","alignItems","FormGroup","Slider","defaultValue","valueLabelDisplay","ml","alignItem","i","maxHeight","overflowY","listStyleType","TextareaAutosize","minRows","placeholder","pattern","Autocomplete","autoHighlight","noOptionsText","options","renderInput","params","onKeyUpCapture","newMember","gap","disablePortal","isOptionEqualToValue","isInclude","maxRows","Modal","onClose","closeAfterTransition","BackdropComponent","BackdropProps","timeout","Fade","apiKey","initialValue","onInit","editor","init","menubar","plugins","displayEmpty","AddressForm","handleAddress","pincode","overflowWrap","borderStyle","mr","Add","toString","toLowerCase","clearOnEscape","inputProps","textTransform","resize","freeSolo","val","vriatn","Rating","precision","newValue","onChangeActive","newHover","emptyIcon","Star","opacity","fontSize","WebBannerPreviews","MobileBannerPreviews","error","getOptionLabel","WebBannerDimension","MobileBannerDimension","setCatalogs","handelPincode","handleValue","listPincode","page","limit","getAddress","results","pb"],"sourceRoot":""}