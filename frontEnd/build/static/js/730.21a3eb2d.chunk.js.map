{"version":3,"file":"static/js/730.21a3eb2d.chunk.js","mappings":"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","sources":["components/dashboard/product/Merge.js","../node_modules/@mui/icons-material/Create.js","../node_modules/@mui/icons-material/Delete.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\nimport {\n  Box,\n  Typography,\n  TextField,\n  Grid,\n  Button,\n  IconButton,\n  Modal,\n} from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport CreateIcon from \"@mui/icons-material/Create\";\n// import AddIcon from \"@mui/icons-material/Add\";\nimport {\n  getListProduct,\n  deleteProduct,\n  getListMergeProduct,\n  deleteMergeProduct,\n} from \"../../../services/service\";\nimport MergeIcon from \"@mui/icons-material/Merge\";\nimport question from \"../../../assets/img/question.svg\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport { setAlert, setForm } from \"../../../store/action/action\";\nimport { useDispatch } from \"react-redux\";\n\nexport default function Products(props) {\n  // store\n  const dispatch = useDispatch();\n\n  // states\n  const [modalState, setModal] = useState(false);\n  const [selectedSKU, setSelection] = useState([]);\n  const [productUnit, setUnit] = useState([]);\n\n  // page state to controlling the pagination on server side\n  const [pageState, setPageState] = useState({\n    data: [],\n    isLoading: false,\n    page: 1,\n    limit: 50,\n    total: 0,\n    title: \"\",\n    category: undefined,\n    SKU: undefined,\n    subCategory: undefined,\n    filter: false,\n  });\n\n  const [search, setSearch] = useState({\n    P: \"\",\n    MS: \"\",\n  });\n\n  const fetchData = async () => {\n    setPageState((lastState) => ({\n      ...lastState,\n      isLoading: true,\n    }));\n    const response = await getListMergeProduct({\n      page: pageState.page,\n      limit: pageState.limit,\n      total: pageState.total,\n      title: pageState.title,\n      category: pageState.category,\n      SKU: pageState.SKU,\n      subCategory: pageState.subCategory,\n    });\n\n    setPageState((lastState) => ({\n      ...lastState,\n      data: response.data.data.map((row, index) => {\n        return {\n          id: index + 1,\n          M: row.M,\n          product_articles: row.product_articles,\n          product_title: row.product_title,\n          category_name: row.category_name,\n          category_id: row.category_id,\n          sub_category_name: row.sub_category_name,\n          sub_category_id: row.sub_category_id,\n          warehouse: row.warehouse,\n          warehouse_name: row.warehouse_name,\n          bangalore_stock: row.bangalore_stock,\n          jodhpur_stock: row.jodhpur_stock,\n          product_description: row.product_description,\n          product_image: row.product_image,\n          featured_image: row.featured_image,\n          mannequin_image: row.mannequin_image,\n          specification_image: row.specification_image,\n          selling_points: row.selling_points,\n          selling_price: row.selling_price,\n          showroom_price: row.showroom_price,\n          discount_limit: row.discount_limit,\n          mobile_store: row.mobile_store,\n          online_store: row.online_store,\n          continue_selling: row.continue_selling,\n          COD: row.COD,\n          returnDays: row.returnDays,\n          returnable: row.returnable,\n          polish_time: row.polish_time,\n          manufacturing_time: row.manufacturing_time,\n          package_length: row.package_length,\n          package_height: row.package_height,\n          package_breadth: row.package_breadth,\n          seo_title: row.seo_title,\n          seo_description: row.seo_description,\n          seo_keyword: row.seo_keyword,\n          action: row._id,\n        };\n      }),\n      isLoading: false,\n      total: response.data.total,\n      filter: false,\n    }));\n  };\n\n  useMemo(() => {\n    fetchData();\n  }, [pageState.page, pageState.limit, pageState.filter]);\n\n  const columns = [\n    { field: \"id\", headerName: \"ID\", width: 50 },\n    { field: \"M\", headerName: \"M (Product Id)\", width: 100 },\n    // {\n    //   field: \"product_article\",\n    //   headerName: \"Merged Products\",\n    //   width: 160,\n    // },\n    {\n      field: \"featured_image\",\n      headerName: \"Featured Image\",\n      width: 160,\n      align: \"center\",\n      renderCell: (params) => (\n        <div className=\"categoryImage\">\n          <img src={params.formattedValue || question} alt=\"featured\" />\n        </div>\n      ),\n    },\n    {\n      field: \"specification_image\",\n      headerName: \"Specification Image\",\n      width: 160,\n      align: \"center\",\n      renderCell: (params) => (\n        <div className=\"categoryImage\">\n          <img src={params.formattedValue || question} alt=\"featured\" />\n        </div>\n      ),\n    },\n    {\n      field: \"product_title\",\n      headerName: \"Product Title\",\n      width: 300,\n    },\n    {\n      field: \"category_name\",\n      headerName: \"Category Name\",\n      width: 150,\n    },\n    {\n      field: \"sub_category_name\",\n      headerName: \"Sub Category Name\",\n\n      width: 150,\n    },\n\n    {\n      field: \"action\",\n      headerName: \"Actions\",\n      width: 200,\n      renderCell: (params) => (\n        <div>\n          <IconButton\n            onClick={() => {\n              dispatch(\n                setForm({\n                  state: true,\n                  formType: \"update_merge\",\n                  payload: params,\n                  row: pageState.data,\n                  setRow: setPageState,\n                })\n              );\n            }}\n            aria-label=\"update\"\n          >\n            <CreateIcon />\n          </IconButton>\n\n          <IconButton\n            onClick={async () => {\n              let res = await deleteMergeProduct(params.formattedValue);\n\n              if (res.status !== 200) {\n                return dispatch(\n                  setAlert({\n                    open: true,\n                    variant: \"error\",\n                    message: \"Please provide valid ID !!!\",\n                  })\n                );\n              }\n              setPageState((old) => ({\n                ...old,\n                total: old - 1,\n                data: old.data.filter((set) => {\n                  return set.action !== params.formattedValue;\n                }),\n              }));\n\n              dispatch(\n                setAlert({\n                  open: true,\n                  variant: \"success\",\n                  message: \"Merged Product deleted successfully !!!\",\n                })\n              );\n            }}\n            aria-label=\"delete\"\n          >\n            <DeleteIcon />\n          </IconButton>\n        </div>\n      ),\n    },\n  ];\n\n  // data grid for table data\n\n  function DataGridView() {\n    return (\n      <div style={{ marginTop: \"2%\", height: 400, width: \"100%\" }}>\n        <DataGrid\n          rows={pageState.data}\n          rowCount={pageState.total}\n          loading={pageState.isLoading}\n          rowsPerPageOptions={[10, 30, 50, 70, 100]}\n          filterModel={{\n            items: [\n              {\n                columnField: \"product_title\",\n                operatorValue: \"contains\",\n                value: `${pageState.title}`,\n              },\n            ],\n          }}\n          pagination\n          page={pageState.page - 1}\n          limit={pageState.limit}\n          paginationMode=\"server\"\n          onPageChange={(newPage) => {\n            setPageState((old) => ({ ...old, page: newPage + 1 }));\n          }}\n          onPageSizeChange={(newPageSize) =>\n            setPageState((old) => ({ ...old, limit: newPageSize }))\n          }\n          columns={columns}\n        />\n      </div>\n    );\n  }\n\n  const handleSearch = (e) => {\n    setSearch({ ...search, [e.target.name]: e.target.value });\n  };\n\n  // modal Style\n  const style = {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: 400,\n    bgcolor: \"background.paper\",\n    border: \"2px solid #000\",\n    boxShadow: 24,\n    p: 4,\n  };\n\n  const handleQuantity = (e) => {\n    setUnit({ ...productUnit, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <Box sx={{ pl: 4, pr: 4 }}>\n      {/* <QuantityBox pu={productUnit} su={setUnit} /> */}\n      <Modal\n        open={modalState}\n        onClose={() => {\n          setModal(!modalState);\n        }}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Add Quantity\n          </Typography>\n          <Typography id=\"modal-modal-title\" variant=\"caption\" component=\"span\">\n            Enter the number of Unit...\n          </Typography>\n          <Box\n            sx={{\n              mt: 2,\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              flexDirection: \"column\",\n            }}\n          >\n            {selectedSKU.map((set) => {\n              return (\n                <TextField\n                  value={productUnit[set.SKU] || \"\"}\n                  fullWidth\n                  onChange={handleQuantity}\n                  sx={{ p: 0.8, pb: 1 }}\n                  size=\"small\"\n                  label={set.SKU}\n                  type=\"Number\"\n                  name={set.SKU}\n                />\n              );\n            })}\n\n            <Box\n              sx={{\n                mt: 2,\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                width: \"100%\",\n              }}\n            >\n              <Button\n                onClick={() => {\n                  setModal(false);\n                }}\n                variant=\"outlined\"\n                size=\"small\"\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={() => {\n                  setModal(false);\n\n                  const unit = selectedSKU.map((row) => {\n                    if (productUnit.hasOwnProperty(row.SKU))\n                      return { [row.SKU]: productUnit[row.SKU] };\n                  });\n\n                  console.log(unit);\n                  dispatch(\n                    setForm({\n                      state: true,\n                      formType: \"merge_product\",\n                      payload: selectedSKU,\n                      unit: JSON.stringify(unit),\n                      // row: MergeRow,\n                      // setRow: setMergeRows\n                    })\n                  );\n                  setSelection([]);\n                  setUnit([]);\n                }}\n                variant=\"contained\"\n                size=\"small\"\n              >\n                Merge\n              </Button>\n            </Box>\n          </Box>\n        </Box>\n      </Modal>\n      <Typography component={\"span\"} sx={{ display: \"block\" }} variant=\"h5\">\n        Merge Products\n      </Typography>\n\n      <br></br>\n\n      {/* Section 1  */}\n\n      <Grid\n        container\n        p={2}\n        sx={{\n          boxShadow: 1,\n          borderRadius: 2,\n          justifyContent: \"center !important\",\n          alignItems: \"center !important\",\n          gap: \"15px\",\n        }}\n      >\n        <Grid xs={12}>\n          <TextField\n            fullWidth\n            size=\"small\"\n            // autoComplete={false}\n            id=\"demo-helper-text-aligned-no-helper\"\n            label=\"Search By MS\"\n            onChange={handleSearch}\n            name=\"MS\"\n            type=\"search\"\n          />\n        </Grid>\n\n        {/* <Grid xs={12} md={2.8}>\n          <Button\n            sx={{ width: \"100%\" }}\n            color=\"primary\"\n            startIcon={<AddIcon />}\n            variant=\"contained\"\n            onClick={() => { dispatch({ type: OpenBox, payload: { state: true, formType: 'product', row: Row, setRow: setRows } }) }}\n          >\n            Add Product\n          </Button>\n        </Grid> */}\n      </Grid>\n\n      {/* Section 1 ends  */}\n      <br></br>\n      {/* data grid  */}\n\n      <Grid container scaping={2} className=\"overviewContainer\">\n        <Grid item p={2} xs={12} sx={{ boxShadow: 2, borderRadius: 5 }}>\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n            }}\n          >\n            <Typography component={\"span\"} variant=\"h6\">\n              {\" \"}\n              Merge Product List{\" \"}\n            </Typography>\n            <Button\n              variant=\"outlined\"\n              onClick={() => {\n                dispatch(\n                  setForm({\n                    state: true,\n                    formType: \"merge_product\",\n                    setRow: setPageState,\n                    row: pageState.data,\n                  })\n                );\n              }}\n            >\n              Merge Product\n            </Button>\n          </Box>\n          <DataGridView/>\n        </Grid>\n      </Grid>\n\n      {/* data grid ends  */}\n    </Box>\n  );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Create');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;"],"names":["Products","props","dispatch","useDispatch","useState","modalState","setModal","selectedSKU","setSelection","productUnit","setUnit","data","isLoading","page","limit","total","title","category","undefined","SKU","subCategory","filter","pageState","setPageState","P","MS","search","setSearch","fetchData","lastState","getListMergeProduct","response","map","row","index","id","M","product_articles","product_title","category_name","category_id","sub_category_name","sub_category_id","warehouse","warehouse_name","bangalore_stock","jodhpur_stock","product_description","product_image","featured_image","mannequin_image","specification_image","selling_points","selling_price","showroom_price","discount_limit","mobile_store","online_store","continue_selling","COD","returnDays","returnable","polish_time","manufacturing_time","package_length","package_height","package_breadth","seo_title","seo_description","seo_keyword","action","_id","useMemo","columns","field","headerName","width","align","renderCell","params","className","src","formattedValue","question","alt","onClick","setForm","state","formType","payload","setRow","deleteMergeProduct","status","setAlert","open","variant","message","old","set","DataGridView","style","marginTop","height","rows","rowCount","loading","rowsPerPageOptions","filterModel","items","columnField","operatorValue","value","pagination","paginationMode","onPageChange","newPage","onPageSizeChange","newPageSize","handleQuantity","e","target","name","sx","pl","pr","onClose","position","top","left","transform","bgcolor","border","boxShadow","p","component","mt","display","justifyContent","alignItems","flexDirection","fullWidth","onChange","pb","size","label","type","unit","hasOwnProperty","console","log","JSON","stringify","container","borderRadius","gap","xs","scaping","item","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}