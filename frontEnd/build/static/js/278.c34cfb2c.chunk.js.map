{"version":3,"file":"static/js/278.c34cfb2c.chunk.js","mappings":"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","sources":["components/Utility/RefreshToken.js","components/Home.js"],"sourcesContent":["import React from \"react\";\nimport { Modal, Fade, TextField, Button, Box, Typography, Backdrop } from \"@mui/material\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setRefreshBox, setAuth, setAlert } from '../../store/action/action'\nimport { refreshToken } from '../../services/service'\n\nexport default function RefreshToken() {\n    const dispatch = useDispatch();\n    const { refresh, auth, form } = useSelector(state => state);\n\n    const handleClose = () => {\n\n        dispatch(setRefreshBox({\n            state: false\n        }))\n        // if (form.state === false)\n        // window.location.reload();\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n        // console.log('hello')\n        const FD = new FormData();\n\n        FD.append('email', auth.email);\n        FD.append('token', auth.token);\n        FD.append('role', auth.role);\n        FD.append('password', e.target.password.value);\n\n        let response = await refreshToken(FD)\n\n        if (response.status === 200) {\n            dispatch(setAuth({\n                isAuth: true,\n                email: response.data.email,\n                token: response.data.token,\n                role: response.data.role\n            }))\n\n            localStorage.setItem('token', response.data.token);\n\n            await dispatch(setAlert({\n                open: true,\n                variant: 'success',\n                message: response.data.message\n            }))\n\n            return handleClose();\n\n        }\n        else {\n            dispatch(setAlert({\n                open: true,\n                variant: 'error',\n                message: response.data.message\n            }))\n        }\n\n\n    }\n\n\n\n\n    return (\n        <>\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                open={refresh.state}\n                // onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={refresh.state}>\n                    <Box className='modalCss'>\n                        <Typography component={'h6'} id=\"transition-modal-title\" variant=\"h6\">\n                            Refresh Token\n                        </Typography>\n                        <Typography id=\"transition-modal-title\" variant=\"caption\">\n                            You token was expired.\n                        </Typography>\n                        <form onSubmit={handleSubmit} method='post' encType='multipart/form-data' className='refreshBox'>\n                            <TextField\n                                size='small'\n                                label='Password'\n                                type='password'\n                                name='password'\n                            />\n                            <Button sx={{ width: '30%', float: 'right' }} size='small' variant='outlined' type='submit' >Submit</Button>\n                        </form>\n                    </Box>\n                </Fade>\n            </Modal>\n        </>\n    );\n}\n","import React, { useState, useEffect, useMemo } from \"react\";\nimport {\n  IconButton,\n  Menu,\n  MenuItem,\n  Box,\n  Grid,\n  Button,\n  List,\n  ListItemIcon,\n  ListItem,\n  ListItemText,\n  Typography,\n  Drawer,\n  Divider,\n  ListItemAvatar,\n  Avatar,\n  Collapse,\n} from \"@mui/material\";\nimport \"../assets/custom/css/home.css\";\nimport logo from \"../assets/img/Blog/logo.webp\";\n\n// icons\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\nimport PendingIcon from \"@mui/icons-material/Pending\";\nimport ArticleIcon from \"@mui/icons-material/Article\";\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\nimport PersonIcon from \"@mui/icons-material/Person\";\nimport WbSunnyIcon from \"@mui/icons-material/WbSunny\";\nimport DarkModeIcon from \"@mui/icons-material/DarkMode\";\nimport ShoppingBagOutlinedIcon from \"@mui/icons-material/ShoppingBagOutlined\";\nimport PeopleAltOutlinedIcon from \"@mui/icons-material/PeopleAltOutlined\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport EmojiEventsIcon from \"@mui/icons-material/EmojiEvents\";\nimport CategoryIcon from \"@mui/icons-material/Category\";\nimport PlaylistAddCheckCircleIcon from \"@mui/icons-material/PlaylistAddCheckCircle\";\nimport InboxIcon from \"@mui/icons-material/Inbox\";\nimport SettingsOutlinedIcon from \"@mui/icons-material/SettingsOutlined\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport LogoutIcon from \"@mui/icons-material/Logout\";\nimport ViewCarouselIcon from \"@mui/icons-material/ViewCarousel\";\nimport AdminPanelSettingsIcon from \"@mui/icons-material/AdminPanelSettings\";\nimport DraftsIcon from \"@mui/icons-material/Drafts\";\nimport GridViewIcon from \"@mui/icons-material/GridView\";\nimport InventoryIcon from \"@mui/icons-material/Inventory\";\nimport MergeIcon from \"@mui/icons-material/Merge\";\nimport HardwareIcon from \"@mui/icons-material/Hardware\";\nimport AssignmentIndIcon from \"@mui/icons-material/AssignmentInd\";\nimport SecurityIcon from \"@mui/icons-material/Security\";\nimport PolicyIcon from \"@mui/icons-material/Policy\";\nimport ReviewsIcon from \"@mui/icons-material/Reviews\";\n// import AccountTreeIcon from '@mui/icons-material/AccountTree';\nimport LocalShippingIcon from \"@mui/icons-material/LocalShipping\";\n// import redux\nimport {\n  setAlert,\n  setAuth,\n  setMode,\n  setTab,\n  setRefreshBox,\n} from \"../store/action/action\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n// refresh component\nimport RefreshToken from \"./Utility/RefreshToken\";\n\nconst Home = (props) => {\n  const dispatch = useDispatch();\n  const { auth, mode, tab } = useSelector((state) => state);\n  const permission = auth.access || [] \n\n  const history = props.history;\n\n  // states\n  const [anchor, setAnchor] = useState(null);\n\n  const handleMenuClose = () => {\n    setAnchor(null);\n  };\n\n  const handleMenu = (e) => {\n    setAnchor(e.currentTarget);\n  };\n\n  const handleClose = (direct = undefined) => {\n    handleMenuClose();\n    if (direct) history(direct);\n    return dispatch(\n      setTab({\n        open: false,\n      })\n    );\n  };\n\n  // side bar for the tabs\n  function SwipeableTemporaryDrawer() {\n    const [type, setType] = useState({\n      product: false,\n      admin: false,\n      order: false,\n    });\n\n    function ListTabs() {\n      return (\n        <Box\n          sx={{\n            flexGrow: 1,\n            display: \"flex\",\n            width: 250,\n            flexDirection: \"column\",\n          }}\n          role=\"presentation\"\n        >\n          {/* // heading */}\n          <Grid container sx={{ p: 2.5, mb: 3 }}>\n            <Grid item xs={12} sx={{ maxHeight: \"1px\" }}>\n              <Typography variant=\"h5\" sx={{ textAlign: \"center\" }}>\n                Woodsala\n              </Typography>\n            </Grid>\n          </Grid>\n\n          {/* // all routes  */}\n          <Divider />\n          <Grid container sx={{ p: 1 }}>\n            <Grid item xs={12} sx={{ maxHeight: \"1px\" }}>\n              <List\n                dense={true}\n                sx={{\n                  width: \"100%\",\n                  bgcolor: \"background.paper\",\n                }}\n                component=\"nav\"\n                aria-label=\"mailbox folders\"\n              >\n                <ListItem\n                  onClick={() => {\n                    handleClose(\"/dashboard\");\n                  }}\n                >\n                  <ListItemAvatar>\n                    <Avatar\n                      sx={{\n                        width: \"30px\",\n                        height: \"30px\",\n                        svg: {\n                          fontSize: \"1.1rem\",\n                        },\n                      }}\n                    >\n                      <GridViewIcon\n                        color={\n                          window.location.pathname === \"/dashboard\"\n                            ? \"primary\"\n                            : \"\"\n                        }\n                      />\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText primary=\"Dashboard\" />\n                </ListItem>\n                {permission.includes(\"Product\") && (\n                  <ListItem\n                    onClick={(e) => {\n                      setType({ ...type, product: !type.product });\n                    }}\n                  >\n                    <ListItemAvatar>\n                      <Avatar\n                        sx={{\n                          width: \"30px\",\n                          height: \"30px\",\n                          svg: {\n                            fontSize: \"1.1rem\",\n                          },\n                        }}\n                      >\n                        <ShoppingBagOutlinedIcon\n                          color={\n                            window.location.pathname === \"/merge\" ||\n                            window.location.pathname === \"/products\"\n                              ? \"primary\"\n                              : \"\"\n                          }\n                        />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"Product\" />\n                    {type.product ? <ExpandLess /> : <ExpandMore />}\n                  </ListItem>\n                )}\n                {/* // product nested menu */}\n                <Collapse in={type.product} timeout=\"auto\" unmountOnExit>\n                  <List dense={true} component=\"div\" disablePadding>\n                    <ListItem\n                      sx={{ pl: 4 }}\n                      onClick={() => {\n                        handleClose(\"/products\");\n                      }}\n                    >\n                      <ListItemAvatar>\n                        <Avatar\n                          sx={{\n                            width: \"30px\",\n                            height: \"30px\",\n                            svg: {\n                              fontSize: \"1rem\",\n                            },\n                          }}\n                        >\n                          <ShoppingBagOutlinedIcon\n                            color={\n                              window.location.pathname === \"/products\"\n                                ? \"primary\"\n                                : \"\"\n                            }\n                          />\n                        </Avatar>\n                      </ListItemAvatar>\n                      <ListItemText primary=\"Product\" />\n                    </ListItem>\n                    <ListItem\n                      sx={{ pl: 4 }}\n                      onClick={() => {\n                        handleClose(\"/merge\");\n                      }}\n                    >\n                      <ListItemAvatar>\n                        <Avatar\n                          sx={{\n                            width: \"30px\",\n                            height: \"30px\",\n                            svg: {\n                              fontSize: \"1rem\",\n                            },\n                          }}\n                        >\n                          <MergeIcon\n                            color={\n                              window.location.pathname === \"/merge\"\n                                ? \"primary\"\n                                : \"\"\n                            }\n                          />\n                        </Avatar>\n                      </ListItemAvatar>\n                      <ListItemText primary=\"Merge Product\" />\n                    </ListItem>\n\n                    {/* <ListItem sx={{ pl: 4 }} onClick={() => { handleClose('/variation'); }}>\n                      <ListItemAvatar>\n                        <Avatar\n                          sx={{\n                            width: '30px',\n                            height: '30px',\n                            svg: {\n                              fontSize: '1rem'\n                            }\n                          }}>\n                          <AccountTreeIcon color={window.location.pathname === '/variation' ? 'primary' : ''} />\n                        </Avatar>\n                      </ListItemAvatar>\n                      <ListItemText primary=\"Variation\" />\n                    </ListItem > */}\n                  </List>\n                </Collapse>\n\n                {permission.includes(\"Hardware\") && (\n                  <ListItem\n                    onClick={() => {\n                      handleClose(\"/hardware\");\n                    }}\n                  >\n                    <ListItemAvatar>\n                      <Avatar\n                        sx={{\n                          width: \"30px\",\n                          height: \"30px\",\n                          svg: {\n                            fontSize: \"1.1rem\",\n                          },\n                        }}\n                      >\n                        <HardwareIcon\n                          color={\n                            window.location.pathname === \"/hardware\"\n                              ? \"primary\"\n                              : \"\"\n                          }\n                        />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"Hardware\" />\n                  </ListItem>\n                )}\n\n                {permission.includes(\"Review\") && (\n                  <ListItem\n                    onClick={() => {\n                      handleClose(\"/review\");\n                    }}\n                  >\n                    <ListItemAvatar>\n                      <Avatar\n                        sx={{\n                          width: \"30px\",\n                          height: \"30px\",\n                          svg: {\n                            fontSize: \"1.1rem\",\n                          },\n                        }}\n                      >\n                        <ReviewsIcon\n                          color={\n                            window.location.pathname === \"/review\"\n                              ? \"primary\"\n                              : \"\"\n                          }\n                        />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"Review\" />\n                  </ListItem>\n                )}\n\n                {permission.includes(\"Action Center\") && (\n                  <ListItem\n                    onClick={() => {\n                      handleClose(\"/action\");\n                    }}\n                  >\n                    <ListItemAvatar>\n                      <Avatar\n                        sx={{\n                          width: \"30px\",\n                          height: \"30px\",\n                          svg: {\n                            fontSize: \"1.1rem\",\n                          },\n                        }}\n                      >\n                        <DraftsIcon\n                          color={\n                            window.location.pathname === \"/action\"\n                              ? \"primary\"\n                              : \"\"\n                          }\n                        />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"Action Center\" />\n                  </ListItem>\n                )}\n\n                {permission.includes(\"Order\") && (\n                  <ListItem\n                    onClick={(e) => {\n                      setType({ ...type, order: !type.order });\n                    }}\n                  >\n                    <ListItemAvatar>\n                      <Avatar\n                        sx={{\n                          width: \"30px\",\n                          height: \"30px\",\n                          svg: {\n                            fontSize: \"1.1rem\",\n                          },\n                        }}\n                      >\n                        <InboxIcon\n                          color={\n                            window.location.pathname === \"/order\"\n                              ? \"primary\"\n                              : \"\"\n                          }\n                        />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"Order\" />\n                    {type.order ? <ExpandLess /> : <ExpandMore />}\n                  </ListItem>\n                )}\n\n                {/* // order nested menu */}\n                <Collapse in={type.order} timeout=\"auto\" unmountOnExit>\n                  <List dense={true} component=\"div\" disablePadding>\n                    <ListItem\n                      sx={{ pl: 4 }}\n                      onClick={() => {\n                        handleClose(\"/abandoned_orders\");\n                      }}\n                    >\n                      <ListItemAvatar>\n                        <Avatar\n                          sx={{\n                            width: \"30px\",\n                            height: \"30px\",\n                            svg: {\n                              fontSize: \"1rem\",\n                            },\n                          }}\n                        >\n                          <PendingIcon\n                            color={\n                              window.location.pathname === \"/abandoned_orders\"\n                                ? \"primary\"\n                                : \"\"\n                            }\n                          />\n                        </Avatar>\n                      </ListItemAvatar>\n                      <ListItemText primary=\"Abandoned Orders\" />\n                    </ListItem>\n                    <ListItem\n                      sx={{ pl: 4 }}\n                      onClick={() => {\n                        handleClose(\"/create_order\");\n                      }}\n                    >\n                      <ListItemAvatar>\n                        <Avatar\n                          sx={{\n                            width: \"30px\",\n                            height: \"30px\",\n                            svg: {\n                              fontSize: \"1rem\",\n                            },\n                          }}\n                        >\n                          <AddIcon\n                            color={\n                              window.location.pathname === \"/create_order\"\n                                ? \"primary\"\n                                : \"\"\n                            }\n                          />\n                        </Avatar>\n                      </ListItemAvatar>\n                      <ListItemText primary=\"Create Order\" />\n                    </ListItem>\n                    <ListItem\n                      sx={{ pl: 4 }}\n                      onClick={() => {\n                        handleClose(\"/order\");\n                      }}\n                    >\n                      <ListItemAvatar>\n                        <Avatar\n                          sx={{\n                            width: \"30px\",\n                            height: \"30px\",\n                            svg: {\n                              fontSize: \"1rem\",\n                            },\n                          }}\n                        >\n                          <ShoppingBagOutlinedIcon\n                            color={\n                              window.location.pathname === \"/order\"\n                                ? \"primary\"\n                                : \"\"\n                            }\n                          />\n                        </Avatar>\n                      </ListItemAvatar>\n                      <ListItemText primary=\"Orders\" />\n                    </ListItem>\n                  </List>\n                </Collapse>\n\n                {permission.includes(\"Wishlist\") && (\n                  <ListItem\n                    onClick={() => {\n                      handleClose(\"/wishlist\");\n                    }}\n                  >\n                    <ListItemAvatar>\n                      <Avatar\n                        sx={{\n                          width: \"30px\",\n                          height: \"30px\",\n                          svg: {\n                            fontSize: \"1rem\",\n                          },\n                        }}\n                      >\n                        <PlaylistAddCheckCircleIcon\n                          color={\n                            window.location.pathname === \"/wishlist\"\n                              ? \"primary\"\n                              : \"\"\n                          }\n                        />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"Wishlist\" />\n                  </ListItem>\n                )}\n\n                {permission.includes(\"Customer\") && (\n                  <ListItem\n                    onClick={() => {\n                      handleClose(\"/customer\");\n                    }}\n                  >\n                    <ListItemAvatar>\n                      <Avatar\n                        sx={{\n                          width: \"30px\",\n                          height: \"30px\",\n                          svg: {\n                            fontSize: \"1.1rem\",\n                          },\n                        }}\n                      >\n                        <PeopleAltOutlinedIcon\n                          color={\n                            window.location.pathname === \"/customer\"\n                              ? \"primary\"\n                              : \"\"\n                          }\n                        />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"Customer\" />\n                  </ListItem>\n                )}\n\n                {permission.includes(\"Reward\") && (\n                  <ListItem\n                    onClick={() => {\n                      handleClose(\"/reward\");\n                    }}\n                  >\n                    <ListItemAvatar>\n                      <Avatar\n                        sx={{\n                          width: \"30px\",\n                          height: \"30px\",\n                          svg: {\n                            fontSize: \"1.1rem\",\n                          },\n                        }}\n                      >\n                        <EmojiEventsIcon\n                          color={\n                            window.location.pathname === \"/reward\"\n                              ? \"primary\"\n                              : \"\"\n                          }\n                        />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"Reward\" />\n                  </ListItem>\n                )}\n\n                {permission.includes(\"Blog\") && (\n                  <ListItem\n                    onClick={() => {\n                      handleClose(\"/blog\");\n                    }}\n                  >\n                    <ListItemAvatar>\n                      <Avatar\n                        sx={{\n                          width: \"30px\",\n                          height: \"30px\",\n                          svg: {\n                            fontSize: \"1.1rem\",\n                          },\n                        }}\n                      >\n                        <ArticleIcon\n                          color={\n                            window.location.pathname === \"/dashboard\"\n                              ? \"blog\"\n                              : \"\"\n                          }\n                        />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"Blog\" />\n                  </ListItem>\n                )}\n\n                {permission.includes(\"Banner\") && (\n                  <ListItem\n                    onClick={() => {\n                      handleClose(\"/banner\");\n                    }}\n                  >\n                    <ListItemAvatar>\n                      <Avatar\n                        sx={{\n                          width: \"30px\",\n                          height: \"30px\",\n                          svg: {\n                            fontSize: \"1.1rem\",\n                          },\n                        }}\n                      >\n                        <ViewCarouselIcon\n                          color={\n                            window.location.pathname === \"/banner\"\n                              ? \"primary\"\n                              : \"\"\n                          }\n                        />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"Banner\" />\n                  </ListItem>\n                )}\n\n                {permission.includes(\"Inventory\") && (\n                  <ListItem\n                    onClick={() => {\n                      handleClose(\"/inventory\");\n                    }}\n                  >\n                    <ListItemAvatar>\n                      <Avatar\n                        sx={{\n                          width: \"30px\",\n                          height: \"30px\",\n                          svg: {\n                            fontSize: \"1.1rem\",\n                          },\n                        }}\n                      >\n                        <InventoryIcon\n                          color={\n                            window.location.pathname === \"/inventory\"\n                              ? \"primary\"\n                              : \"\"\n                          }\n                        />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"Inventory\" />\n                  </ListItem>\n                )}\n\n                {/* <ListItem\n                  onClick={(e) => {\n                    setType({ ...type, admin: !type.admin });\n                  }}\n                >\n                  <ListItemAvatar>\n                    <Avatar\n                      sx={{\n                        width: \"30px\",\n                        height: \"30px\",\n                        svg: {\n                          fontSize: \"1.1rem\",\n                        },\n                      }}\n                    >\n                      <AdminPanelSettingsIcon\n                        color={\n                          window.location.pathname === \"/admin\" ||\n                          window.location.pathname === \"/security\" ||\n                          window.location.pathname === \"/suppliers\" ||\n                          window.location.pathname === \"/settings\"\n                            ? \"primary\"\n                            : \"\"\n                        }\n                      />\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText primary=\"Admin\" />\n                  {type.admin ? <ExpandLess /> : <ExpandMore />}\n                </ListItem> */}\n                {/* // admin nested menu */}\n                {/* <Collapse in={type.admin} timeout=\"auto\" unmountOnExit>\n                  <List dense={true} component=\"div\" disablePadding>\n                    // this code shifted to the setting tab \n                    <ListItem\n                      sx={{ pl: 4 }}\n                      onClick={() => {\n                        handleClose(\"/pincode\");\n                      }}\n                    >\n                      <ListItemAvatar>\n                        <Avatar\n                          sx={{\n                            width: \"30px\",\n                            height: \"30px\",\n                            svg: {\n                              fontSize: \"1rem\",\n                            },\n                          }}\n                        >\n                          <LocalShippingIcon\n                            color={\n                              window.location.pathname === \"/pincode\"\n                                ? \"primary\"\n                                : \"\"\n                            }\n                          />\n                        </Avatar>\n                      </ListItemAvatar>\n                      <ListItemText primary=\"Pin Code\" />\n                    </ListItem>\n\n                    <ListItem\n                      sx={{ pl: 4 }}\n                      onClick={() => {\n                        handleClose(\"/security\");\n                      }}\n                    >\n                      <ListItemAvatar>\n                        <Avatar\n                          sx={{\n                            width: \"30px\",\n                            height: \"30px\",\n                            svg: {\n                              fontSize: \"1rem\",\n                            },\n                          }}\n                        >\n                          <SecurityIcon\n                            color={\n                              window.location.pathname === \"/security\"\n                                ? \"primary\"\n                                : \"\"\n                            }\n                          />\n                        </Avatar>\n                      </ListItemAvatar>\n                      <ListItemText primary=\"Security\" />\n                    </ListItem>\n\n                    <ListItem\n                      sx={{ pl: 4 }}\n                      onClick={() => {\n                        handleClose(\"/suppliers\");\n                      }}\n                    >\n                      <ListItemAvatar>\n                        <Avatar\n                          sx={{\n                            width: \"30px\",\n                            height: \"30px\",\n                            svg: {\n                              fontSize: \"1rem\",\n                            },\n                          }}\n                        >\n                          <AssignmentIndIcon\n                            color={\n                              window.location.pathname === \"/suppliers\"\n                                ? \"primary\"\n                                : \"\"\n                            }\n                          />\n                        </Avatar>\n                      </ListItemAvatar>\n                      <ListItemText primary=\"Suppliers\" />\n                    </ListItem>\n                    \n                    <ListItem\n                      sx={{ pl: 4 }}\n                      onClick={() => {\n                        handleClose(\"/settings\");\n                      }}\n                    >\n                      <ListItemAvatar>\n                        <Avatar\n                          sx={{\n                            width: \"30px\",\n                            height: \"30px\",\n                            svg: {\n                              fontSize: \"1rem\",\n                            },\n                          }}\n                        >\n                          <SettingsOutlinedIcon\n                            color={\n                              window.location.pathname === \"/settings\"\n                                ? \"primary\"\n                                : \"\"\n                            }\n                          />\n                        </Avatar>\n                      </ListItemAvatar>\n                      <ListItemText primary=\"Settings\" />\n                    </ListItem>\n                  </List>\n                </Collapse> */}\n\n                {permission.includes(\"Settings\") && (\n                  <ListItem\n                    onClick={() => {\n                      handleClose(\"/settings\");\n                    }}\n                  >\n                    <ListItemAvatar>\n                      <Avatar\n                        sx={{\n                          width: \"30px\",\n                          height: \"30px\",\n                          svg: {\n                            fontSize: \"1.1rem\",\n                          },\n                        }}\n                      >\n                        <SettingsOutlinedIcon\n                          color={\n                            window.location.pathname === \"/settings\"\n                              ? \"primary\"\n                              : \"\"\n                          }\n                        />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"Settings\" />\n                  </ListItem>\n                )}\n\n                {permission.includes(\"Profile\") && (\n                  <ListItem\n                    onClick={() => {\n                      handleClose(\"/profile\");\n                    }}\n                  >\n                    <ListItemAvatar>\n                      <Avatar\n                        sx={{\n                          width: \"30px\",\n                          height: \"30px\",\n                          svg: {\n                            fontSize: \"1.1rem\",\n                          },\n                        }}\n                      >\n                        <AdminPanelSettingsIcon\n                          color={\n                            window.location.pathname === \"/profile\"\n                              ? \"primary\"\n                              : \"\"\n                          }\n                        />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"Profile\" />\n                  </ListItem>\n                )}\n\n                {/* // logout  */}\n                <Divider sx={{ margin: \"auto\", mt: 2 }} />\n                <ListItem onClick={handleLogout}>\n                  <Button\n                    color=\"primary\"\n                    size=\"small\"\n                    sx={{ margin: \"auto\", mt: 2 }}\n                    startIcon={<LogoutIcon />}\n                    variant=\"contained\"\n                  >\n                    Log Out\n                  </Button>\n                </ListItem>\n              </List>\n            </Grid>\n          </Grid>\n        </Box>\n      );\n    }\n\n    return (\n      <div>\n        <Drawer anchor={\"left\"} open={tab.open} onClose={handleClose}>\n          {ListTabs()}\n        </Drawer>\n      </div>\n    );\n  }\n\n  function MenuBox() {\n    return (\n      <Menu\n        id={\"menu\"}\n        anchorEl={anchor}\n        keepMounted\n        open={Boolean(anchor)}\n        onClose={handleMenuClose}\n      >\n        <MenuItem sx={{ padding: 0.5 }} onClick={handleLogout}>\n          <ListItemIcon>\n            <LogoutIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemIcon>Logout</ListItemIcon>\n        </MenuItem>\n      </Menu>\n    );\n  }\n\n  const handleLogout = () => {\n    localStorage.clear();\n    setAnchor(null);\n    handleClose();\n    dispatch(\n      setAuth({\n        isAuth: false,\n        WDToken: null,\n        role: null,\n        access : []\n      })\n    );\n    dispatch(\n      setAlert({\n        open: true,\n        variant: \"success\",\n        message: \"Logging Out !!!\",\n      })\n    );\n    return history(\"/\");\n  };\n\n  // capitalize the first letter in word\n  function titleCase(str) {\n    var splitStr = str.toLowerCase().split(\" \");\n    for (var i = 0; i < splitStr.length; i++) {\n      // You do not need to check if i is larger than splitStr length, as your for does that for you\n      // Assign it back to the array\n      splitStr[i] =\n        splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n    }\n    // Directly return the joined string\n    return splitStr.join(\" \");\n  }\n\n  return (\n    <Box\n      sx={{\n        mb: 3,\n        display: window.location.pathname === \"/\" ? \"none\" : \"block\",\n      }}\n    >\n      {/* refresh modal  */}\n      <RefreshToken />\n      {/* refresh modal  */}\n      {/* Top Bar  */}\n      <title>{titleCase(window.location.pathname.split(\"/\")[1])}</title>\n      <Grid\n        container\n        p={1}\n        spacing={2}\n        className={mode.type === true ? \"darkNav\" : \"topNav\"}\n        sx={{ boxShadow: 1 }}\n      >\n        <Grid item xs={4} sx={{ display: \"flex\" }}>\n          {tab.open === false ? (\n            <IconButton\n              className=\"hamIcon\"\n              onClick={() => {\n                dispatch(\n                  setTab({\n                    open: true,\n                  })\n                );\n              }}\n              size=\"small\"\n              color=\"primary\"\n            >\n              <MenuIcon />\n            </IconButton>\n          ) : (\n            <IconButton\n              className=\"hamIcon\"\n              onClick={() => {\n                dispatch(\n                  setTab({\n                    open: false,\n                  })\n                );\n              }}\n              size=\"small\"\n              color=\"primary\"\n            >\n              <CloseIcon />\n            </IconButton>\n          )}\n        </Grid>\n\n        <Grid item xs={4} className=\"logo\">\n          <img src={logo} alt=\"logo\" />\n        </Grid>\n\n        <Grid item sx={{ display: \"flex\", justifyContent: \"end\" }} xs={4}>\n          {mode.type === true ? (\n            <IconButton\n              onClick={() => {\n                dispatch(\n                  setMode({\n                    type: false,\n                  })\n                );\n              }}\n              size=\"small\"\n              color=\"primary\"\n            >\n              <WbSunnyIcon />\n            </IconButton>\n          ) : (\n            <IconButton\n              onClick={() => {\n                dispatch(\n                  setMode({\n                    type: true,\n                  })\n                );\n              }}\n              size=\"small\"\n              color=\"primary\"\n            >\n              <DarkModeIcon />\n            </IconButton>\n          )}\n\n          <IconButton size=\"small\" color=\"primary\">\n            <NotificationsIcon />\n          </IconButton>\n\n          {MenuBox()}\n\n          <IconButton onClick={handleMenu} size=\"small\" color=\"primary\">\n            <PersonIcon />\n          </IconButton>\n        </Grid>\n      </Grid>\n      {/* Top Bar Ends */}\n\n      {/* Sidenav  */}\n      {/* {VerticalTabs()} */}\n      <SwipeableTemporaryDrawer />\n      {/* Sidenav Ends  */}\n    </Box>\n  );\n};\n\nexport default Home;\n"],"names":["RefreshToken","dispatch","useDispatch","useSelector","state","refresh","auth","handleClose","form","setRefreshBox","e","preventDefault","FD","FormData","append","email","token","role","target","password","value","refreshToken","response","status","setAuth","isAuth","data","localStorage","setItem","setAlert","open","variant","message","Modal","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Box","className","Typography","component","id","onSubmit","method","encType","TextField","size","label","type","name","Button","sx","width","float","props","mode","tab","permission","access","history","useState","anchor","setAnchor","handleMenuClose","direct","undefined","setTab","SwipeableTemporaryDrawer","product","admin","order","setType","Drawer","onClose","flexGrow","display","flexDirection","Grid","container","p","mb","item","xs","maxHeight","textAlign","Divider","List","dense","bgcolor","ListItem","onClick","ListItemAvatar","Avatar","height","svg","fontSize","GridView","color","window","location","pathname","ListItemText","primary","includes","ShoppingBagOutlined","ExpandLess","ExpandMore","Collapse","unmountOnExit","disablePadding","pl","Merge","Hardware","Reviews","Drafts","Inbox","Pending","Add","PlaylistAddCheckCircle","PeopleAltOutlined","EmojiEvents","Article","ViewCarousel","Inventory","SettingsOutlined","AdminPanelSettings","margin","mt","handleLogout","startIcon","Logout","clear","WDToken","str","splitStr","toLowerCase","split","i","length","charAt","toUpperCase","substring","join","titleCase","spacing","boxShadow","IconButton","Close","src","logo","alt","justifyContent","setMode","WbSunny","DarkMode","Notifications","Menu","anchorEl","keepMounted","Boolean","MenuItem","padding","ListItemIcon","currentTarget","Person"],"sourceRoot":""}